<?php

/*
|--------------------------------------------------------------------------
| Load The Cached Routes
|--------------------------------------------------------------------------
|
| Here we will decode and unserialize the RouteCollection instance that
| holds all of the route information for an application. This allows
| us to instantaneously load the entire route map into the router.
|
*/

app('router')->setCompiledRoutes(
    array (
  'compiled' => 
  array (
    0 => false,
    1 => 
    array (
      '/_debugbar/open' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'debugbar.openhandler',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/_debugbar/assets/stylesheets' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'debugbar.assets.css',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/_debugbar/assets/javascript' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'debugbar.assets.js',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/livewire/upload-file' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'livewire.upload-file',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/livewire/livewire.js' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::zovbhLSUbZHWEl9y',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/livewire/livewire.js.map' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::PsBZe5vyNM09iBju',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/api/user' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::xnoESdsc8K2ssdij',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/api/callbacks/kepler9' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'callback.kepler9',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'home.page',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/login' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'login',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'generated::P2wBOIxUFNpuoFNl',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/logout' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'logout',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'generated::5J6K21X7KhKamVwf',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/register' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'register',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'generated::xNzn08nospkso2vT',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/password/reset' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'password.request',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'password.update',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/password/email' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'password.email',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/password/confirm' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'password.confirm',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'generated::4cy4y3906anlfu7t',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/email/verify' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'verification.notice',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/email/resend' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'verification.resend',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/signup/account' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'signup',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/signup' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'signup.page',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/dashboard' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'wingu.dashboard',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/dashboard' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/ajax/price' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.ajax.product.price',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/customer' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.contact.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/customer/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.contact.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/post-customer' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.contact.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/express/customer' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.contact.express',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/express/customer/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.contact.express.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/customer/comments/post' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customers.comments.post',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/customer/mail/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customer.mail.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/customer/documents/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customer.documents.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/customer/notes/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customer.notes.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/customer/calllog/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customer.calllog.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/customer/events/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customer.events.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/customer/import' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.contact.import',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/customer/import/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.contact.import.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/customer/download/import/sample' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customer.download.sample.import',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/customer/category' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.contact.groups.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/customer/category/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.contact.groups.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/supplier' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.supplier.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/supplier/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.supplier.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/post-supplier' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.supplier.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/supplier/download/import/sample' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.supplier.download.sample.import',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/express/supplier/list' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.supplier.express.list',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/express/supplier/save' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.supplier.express.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/supplier/category' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.supplier.groups.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/supplier/category/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.supplier.groups.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/supplier/import' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'supplier.import.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/supplier/post/import' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'supplier.import',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/items' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/items/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.products.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/items/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.products.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/express/items' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.express.list',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/express/items/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.products.express.create',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/items/import' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.products.import',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/items/post/import' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.products.post.import',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/items/download/import/sample' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.products.sample.download',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/items/inventory/outlet/link' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.inventory.outlet.link',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/items/images/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.images.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/stock/control' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.stock.control',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/order/stock' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.stock.order',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/post/order/stock' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.stock.order.post',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/lpo/ajax/price' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.ajax.product.stock.price',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/stock/mail/send' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.stock.mail.send',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/stock/attach/files' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.stock.attach',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/items/category' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.category',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/items/category/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.category.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/items/brand' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.brand',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/items/brand/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.brand.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/items/tags' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.tags',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/items/tags/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.tags.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/items/attributes' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.attributes',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/items/attributes/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.attributes.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/items/attributes/values/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.attributes.value.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/expense' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.expense.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/expense/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.expense.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/expense/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.expense.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/expense/category' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.expense.category.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/expense/category/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.expense.category.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/express/expense/category/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.express.expense.category.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/express/expense/category/list' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.express.expense.category.list',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/payments' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.payments.received',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/payments/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.payments.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/payments/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.payments.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/paymentsfile/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.receivedfile.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/payments/send' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.payments.send',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/invoices' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.invoice.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/invoice/payment' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.invoice.payment',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/invoice/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.invoice.product.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/invoice/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.invoice.product.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/invoice/invoice/attachment' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.invoice.attachment',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/invoice/attachment/files' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.invoice.attachment.files',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/invoice/create/test' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.invoice.product.test',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/invoice/random/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.invoice.random.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/invoice/random/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.invoice.random.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/invoice/recurring/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.invoice.recurring.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/invoice/recurring/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.invoice.recurring.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/salesorders' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.salesorders.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/salesorders/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.salesorders.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/salesorders/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.salesorders.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/salesorders/attachment' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.salesorders.attachment',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/salesorders/attachment/files' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.salesorders.attachment.files',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/salesorders/mail/send' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.salesorders.mail.send',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/settings/salesorders' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.salesorders',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/quotes' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.quotes.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/quotes/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.quotes.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/quotes/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.quotes.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/quotes/attachment' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.quotes.attachment',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/quotes/attachment/files' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.quotes.attachment.files',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/quotes/mail/send' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.quotes.mail.send',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/purchaseorders' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.lpo.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/purchaseorders/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.lpo.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/purchaseorders/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.lpo.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/purchaseorders/attachment' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.lpo.attachment',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/purchaseorders/attachment/files' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.lpo.attachment.files',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/purchaseorders/mail/send' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.lpo.mail.send',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/creditnote' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.creditnote.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/creditnote/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.creditnote.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/creditnote/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.creditnote.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/creditnote/attachment' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.creditnote.attachment',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/creditnote/attachment/files' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.creditnote.attachment.files',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/creditnote/apply/credit' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.creditnote.apply.credit',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/creditnote/mail/send' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.creditnote.mail.send',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/settings/invoice' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.invoice',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/settings/quote' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.quote',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/settings/creditnote' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.creditnote',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/settings/taxes' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.taxes',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/settings/taxes/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.taxes.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/settings/taxes/update' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.update',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/taxes/express' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.taxes.express',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/taxes/express/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.taxes.express.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/settings/lpo' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.lpo',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/account' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.account',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/account/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.account.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/account/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.account.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/express/account/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.account.express',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/access/bank/account' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.bank.account.access',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/income/category' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.income.category',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/income/category/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.income.category.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/income/category/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.income.category.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/income/category/update' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.income.category.update',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/express/income/category/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::Gb6EQ75OLdhwGOgh',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/express/income/category/get' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.income.express.category',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/settings/payment/modes' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.payment.mode',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/settings/payment/modes/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.payment.mode.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/express/payment/list' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.payment.mode.express',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/express/payment/modes/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.payment.mode.express.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/reports' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/report/account-statement' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.account.statement',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/report/account-statement/process' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.account.statement.process',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/report/balancesheet' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.balancesheet',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/report/sales/customer' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.sales.customer',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/report/sales/item' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.sales.item',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/report/sales/salesperson' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.sales.salesperson',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/report/receivables/customerbalances' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.receivables.balance',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/report/receivables/aging' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.receivables.aging',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/report/profilandloss' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.profitandloss',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/report/expensesummary' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.expensesummary',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/report/incomesummary' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.incomesummary',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/report/inventory/summary' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.inventory.summary',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/report/inventory/valuation/summary' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.inventory.valuation.summary',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/report/inventory/product-sale/summary' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.inventory.sale.summary',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.dashboard',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/employee/list' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.employee.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/employee/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.employee.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/employee/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.employee.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/employee/company/structure/update' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.employee.company.structure.update',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/institution-information-post' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.institutioninformation.post',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/experience/post' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.experience.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/allocation/post' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.allocation.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/family-information-post' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.famillyinfo.post',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/file-post' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.employeefile.post',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/employee/deductions/allocate' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.employee.deductions.allocate',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/leave' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.leave.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/leave/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.leave.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/leave/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.leave.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/leave/balance' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.leave.balance',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/leave/calendar' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.leave.calendar',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/leave/apply' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.leave.apply',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/leave/apply/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.leave.apply.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/leave/my-leave-list' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.leave.apply.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/leave/settings' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.leave.settings',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/leave/holiday' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.leave.settings.holiday',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/leave/holiday/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.leave.settings.holiday.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/leave/workdays' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.leave.settings.workdays',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/leave/type' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.leave.settings.type',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/leave/type/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.leave.settings.type.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/payroll/people' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.people',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/payrolls' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/payroll/mpesa/payment' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.mpesa.payment',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/payroll/process' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.process',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/payroll/process/post' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.process.post',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/payroll/process/run' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.process.run',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/payroll/settings' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.settings.payday',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/payroll/settings/update' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.settings.payday.update',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/payroll/settings/approval' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.settings.approval',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/payroll/settings/approval/update' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.settings.approval.update',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/payroll/settings/deduction' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.settings.deduction',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/payroll/settings/deduction/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.settings.deduction.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/payroll/settings/deduction/update' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.settings.deduction.update',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/payroll/settings/benefits' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.settings.benefits',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/payroll/settings/benefits/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.settings.benefits.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/payroll/settings/benefits/update' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.settings.benefits.update',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/calendar' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.calendar',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/organization/positions' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.positions',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/organization/positions/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.positions.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/organization/departments' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.departments',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/organization/departments/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.departments.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/organization/departments/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.departments.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/organization/branches' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.branches',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/organization/branches/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.branches.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/organization/branches/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.branches.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/announcements' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.announcements.list',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/exit-details' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.exitdetails.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/exit-details/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.exitdetails.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/company-policy' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.companyprofile.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/company-policy/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.companyprofile.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/travel/myTravels' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.travel.my',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/travel' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.travel.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/travel/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.travel.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/travel/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.travel.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/travel/expenses' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.travel.expenses',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/travel/expenses/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.travel.expenses.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/travel/expenses/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.travel.expenses.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.dashboard',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/leads' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/leads/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/leads/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/leads/notes/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.notes.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/leads/calllog/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.calllog.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/lead/status' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.status',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/lead/status/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.status.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/lead/sources' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.sources',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/lead/sources/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.sources.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/leads/tasks/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.tasks.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/leads/events/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.events.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/leads/documents/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.documents.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/leads/mail/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.mail.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/mail/inbox' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.mail.inbox',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/mail/sent' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.mail.sent',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/mail/compose' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.mail.compose',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/customer' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/customer/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/customer/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/customer/notes/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customer.notes.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/customer/comments/post' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.comments.post',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/customer/mail/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customer.mail.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/customer/documents/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customer.documents.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/customer/import' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.import',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/customer/import/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.import.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/customer/download/import/sample' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customer.download.sample.import',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/customer/category' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.groups.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/customer/category/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.groups.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/customer/calllog/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customer.calllog.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/customer/events/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customer.events.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/sms' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.sms.sent',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/sms/send/single' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.sms.send.single',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/sms/send/bulk' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.sms.send.bulk',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/social/dashboard' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.social.dashboard',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/social/posts' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.social.post.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/social/posts/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.social.post.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/social/social/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.social.post.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/marketing/account' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.account.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/marketing/account/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.account.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/marketing/account/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.account.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/marketing/medium' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.medium.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/marketing/medium/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.medium.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/marketing/medium/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.medium.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/marketing/channel/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.channel.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/shortener' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'url.shortener',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/store/url' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'url.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/deals' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.deals.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/deals/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.deals.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/deals/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.deals.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/pipeline' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.pipeline.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/pipeline/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.pipeline.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/pipeline/stages/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.pipeline.stage.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/pipeline/stages/position' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'stage_position_update',
          ),
          1 => NULL,
          2 => 
          array (
            'PUT' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/reports' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.reports',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/reports/leads_by_status' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.reports.leads.status.filter',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/reports/leads_by_source' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.reports.leads.source.filter',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/reports/leads_by_industry' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.reports.leads.industry.filter',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/cms' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cms.dashboard',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/cms/knowledge_base/groups' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cms.groups.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/cms/knowledge_base/groups/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cms.groups.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/cms/knowledge_base' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cms.knowledgebase.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/cms/knowledge_base/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cms.knowledgebase.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/cms/knowledge_base/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cms.knowledgebase.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/cms/proposals' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cms.proposal.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/cms/proposal/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cms.proposal.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/cms/proposal/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cms.proposal.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/cms/website/pages' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cms.page.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/cms/website/page/new' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cms.page.new',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/cms/page/custom/field' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'custom.page.field',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/cms/page/template/post' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'post.page.template',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/cms/website/slider' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cms.slider.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/cms/website/slider/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cms.slider.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/cms/slider/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cms.slider.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/cms/website/posts' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cms.posts.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/cms/website/posts/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cms.posts.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/cms/posts/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cms.posts.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/cms/posts/comment/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'postscomment.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/cms/attachment/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'attachment.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/cms/website/posts/category' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cms.post.category.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/cms/website/posts/category/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cms.post.category.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/cms/website/posts/category/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cms.post.category.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/cms/websiteposts/tags' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cms.post.tags.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/cms/posts/tags/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cms.post.tags.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/cms/websitemedia' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cms.media.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/cms/media/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cms.media.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/cms/website/affiliate' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'affiliate.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/cms/website/affiliate/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'affiliate.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/cms/affiliate/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'affiliate.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/assets/dashboard' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.dashboard',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/assets/list' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/assets/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/assets/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/assets/checkout/events/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.event.checkout.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/assets/checkin/events/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.event.checkin.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/assets/lease/events/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.event.lease.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/assets/licenses' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'licenses.assets.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/assets/licenses/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'licenses.assets.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/assets/licenses/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'licenses.assets.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/assets/types' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.type.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/assets/type/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.type.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/dashboard' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'dashboard.property',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/properties' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/property/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/property/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/property/document/upload' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.document.upload',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/property/store/lease' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.leases.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/property/units/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.units.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/property/units/bulk/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.units.bulk.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/payments/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.payments.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/rental/billing/process' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.billing.process',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/rental/billing/search/results' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.billing.history.search.results',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/property/billing/missing/invoice' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.billing.missing.invoice',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/creditnote/apply/credit' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.creditnote.apply.credit',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/creditnote/mail/send' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.creditnote.mail.send',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/marketing/listings' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.lisitng',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/marketing/property/update' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'list.property.update',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/inquiry' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.inquiry',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/tenants/notes/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'tenants.notes.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/tenant/lease/utility/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.tenant.lease.add.utility',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/tenant/lease/utility/update' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.tenant.lease.update.utility',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/tenant/lease/terminate' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.lease.terminate',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/utility/billing/hold' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'utility.billing.hold',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/utility/bill/search' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'utility.bill.search',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/agents' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.agents',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/agents/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.agents.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/agents/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.agents.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/supplier' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.supplier',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/supplier/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.supplier.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/supplier/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.supplier.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/landlord' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'landlord.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/landlord/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'landlord.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/post-landlords' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'landlord.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/landlord/import' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'landlord.import.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/landlord/post/import' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'landlord.import',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/landlord/download/import/sample' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'landlord.download.sample.import',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/landlord/export' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'landlord.export',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/tenants' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'tenants.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/tenants/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'tenants.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/tenants/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'tenants.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/tenants/import' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'tenants.import.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/tenants/post/import' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'tenants.import',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/tenants/download/import/sample' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'tenants.download.sample.import',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/tenants/export' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'tenants.export',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/maintenance' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.maintenance',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/maintenance/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.maintenance.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/maintenance/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.maintenance.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/maintenance/category' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'maintenance.category.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/maintenance/category/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'maintenance.category.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/taxes' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.taxes',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/taxes/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.taxes.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/taxes/update' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.taxes.update',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/taxes/express' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.taxes.express',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/taxes/express/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.taxes.express.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/income/category' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.income.category',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/income/category/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.income.category.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/income/category/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.income.category.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/income/category/update' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.income.category.update',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/express/income/category/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::hzpvV1Vs1Vl67HUC',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/express/income/category/get' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.income.express.category',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/payment/methods' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.payment.method',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/payment/methods/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.payment.method.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/express/payment/list' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.payment.mode.express',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/express/payment/modes/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.payment.mode.express.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/expense/category' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.expense.category.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/expense/category/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.expense.category.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/express/expense/category/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.express.expense.category.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/express/expense/category/list' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.express.expense.category.list',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/utilities' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.utilities',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/utilities/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.utilities.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/property-management/utilities/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.utilities.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/settings' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/settings/businessprofile' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.business.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/settings/businessprofile/edit' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.business.edit',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/settings/users' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.users.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/settings/users/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.users.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/settings/users/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.users.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/settings/language' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'language.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/settings/language/translate' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'language.translate',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/settings/settings/defaultLanguage' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'language.defaultLanguage',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/settings/language/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'language.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/settings/roles' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.roles.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/settings/roles/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.roles.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/settings/roles/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.roles.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/settings/account/applications' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.applications',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/settings/account/billing' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.billing',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/settings/payment/integrations' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.integrations.payments',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/settings/payment/integrations/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.integrations.payments.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/settings/integrations/telephony' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.integrations.telephony',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/settings/integrations/telephony/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.integrations.telephony.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/applications/setup' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'application.setup',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/applications/install' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'application.install',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/applications' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'application',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/subscriptions/paypal' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'wingu.subscription.paypal',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/subscriptions/paypal/callback' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'wingu.subscription.paypal.callback',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/subscriptions/paypal/cancel' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'wingu.subscription.paypal.cancel',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/application/ipay/callback' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'wingu.application.payment',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/lab/mailchimp' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::7f2i0CsCrChDUp9W',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/callbacks/ipay' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'callback.ipay',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/landingpage/callback' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.callback.landingpage',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
    ),
    2 => 
    array (
      0 => '{^(?|/_debugbar/(?|c(?|lockwork/([^/]++)(*:42)|ache/([^/]++)(?:/([^/]++))?(*:76))|telescope/([^/]++)(*:102))|/livewire/(?|message/([^/]++)(*:140)|preview\\-file/([^/]++)(*:170))|/a(?|p(?|i/daraja/(?|payment/ca(?|llback/([^/]++)(*:228)|ncellation/([^/]++)(*:255))|validation/([^/]++)(*:283))|plications/([^/]++)/(?|add\\-to\\-cart(*:328)|remove\\-item(*:348)))|ssets/(?|([^/]++)/(?|edit(*:383)|update(*:397)|view(*:409)|delete(*:423))|retrive/model/([^/]++)(*:454)|([^/]++)/(?|vehicle(*:481)|maintenance(?|s(*:504)|/(?|create(*:522)|store(*:535)|([^/]++)/(?|edit(*:559)|update(*:573))))|events(*:590))|events/([^/]++)/delete(*:621)|check(?|out/([^/]++)/events/update(*:663)|in/([^/]++)/events/update(*:696))|l(?|ease/([^/]++)/events/update(*:736)|icenses/([^/]++)/(?|edit(*:768)|update(*:782)|view(*:794)|delete(*:808)|maintenance(?|s(*:831)|/(?|create(*:849)|store(*:862)|([^/]++)/(?|edit(*:886)|update(*:900)|delete(*:914))))))|type/([^/]++)/(?|edit(*:948)|update(*:962)|delete(*:976))))|/p(?|assword/reset/([^/]++)(*:1014)|roperty\\-management/(?|property/(?|([^/]++)/(?|edit(*:1074)|update(*:1089)|de(?|tails(*:1108)|lete(*:1121))|remove/image(*:1143)|information(?|(*:1166)|/update(*:1182)))|units/([^/]++)/(?|vacant(*:1217)|occupied(*:1234))|([^/]++)/(?|leases(*:1262)|add/leases(*:1281)|units(?|(*:1298)|/(?|add(*:1314)|([^/]++)/edit(*:1336))))|units/([^/]++)/up(?|load_document(*:1381)|date(*:1394))|([^/]++)/(?|units/(?|([^/]++)/delete(*:1440)|bulk(*:1453))|invoices(?|(*:1474)|/(?|create(*:1493)|store(*:1507)|([^/]++)/(?|de(?|tails(*:1538)|lete(*:1551))|leases(*:1567)|payments(*:1584))|bulk(?|(*:1601)|/store(*:1616))|([^/]++)/print(*:1640)))|rental/([^/]++)/(?|edit/invoices(*:1683)|update/invoices(*:1707))|payments(?|(*:1728)|/(?|create(*:1747)|([^/]++)/edit(*:1769)))))|([^/]++)/payments/([^/]++)/update(*:1815)|property/([^/]++)/payments/([^/]++)/show(*:1864)|retrive/([^/]++)/invoice/([^/]++)(*:1906)|([^/]++)/payments/(?|file/([^/]++)/([^/]++)/delete(*:1965)|([^/]++)/delete(*:1989))|property/([^/]++)/utility(?|(*:2027)|/create(*:2043))|([^/]++)/prepare/utility(*:2077)|property/([^/]++)/prepare/([^/]++)/utility/bill/([^/]++)/([^/]++)(*:2151)|([^/]++)/utility/store(*:2182)|property/([^/]++)/([^/]++)/edit/utility(*:2230)|([^/]++)/([^/]++)/(?|calculate/utility/consumption(*:2289)|update/utility/consumption(*:2324))|p(?|roperty/([^/]++)/(?|utility/(?|([^/]++)/(?|de(?|tails(*:2391)|lete(*:2404))|leases(*:2420)|payments(*:2437)|compose/mail(*:2458))|compose/send(*:2480))|documents(*:2499)|gallery(*:2515))|ayment/([^/]++)/integration(?|(*:2555)|/([^/]++)/delete(*:2580)|(*:2589)))|settings/([^/]++)/(?|invoice(?|(*:2631)|/(?|update(*:2650)|creditnote(*:2669)))|creditnote(*:2690))|rental/([^/]++)/billing/(?|([^/]++)/([^/]++)/([^/]++)/history(*:2761)|history(*:2777))|([^/]++)/(?|i(?|ntegration/([^/]++)/(?|mpesa(?|api(?|(*:2840)|/update(*:2856))|till(?|(*:2873)|/update(*:2889))|paybill(?|(*:2909)|/update(*:2925)))|bank(?|1(?|(*:2947)|/update(*:2963))|2(?|(*:2977)|/update(*:2993))|3(?|(*:3007)|/update(*:3023))|4(?|(*:3037)|/update(*:3053))|5(?|(*:3067)|/update(*:3083))))|mages(?|(*:3103)|/(?|upload(*:3122)|([^/]++)/delete(*:3146))))|documents/(?|upload(*:3177)|([^/]++)/(?|update(*:3204)|delete(*:3219)))|expenses(?|(*:3241)|/(?|create(*:3260)|store(*:3274)|([^/]++)/(?|edit(*:3299)|update(*:3314)|file/([^/]++)/delete(*:3343)|delete(*:3358))))|creditnote(?|(*:3383)|/(?|create(*:3402)|store(*:3416)|([^/]++)/(?|edit(*:3441)|update(*:3456)|delete(*:3471)|show(*:3484)|p(?|df(*:3499)|rint(*:3512))|mail(*:3526))))|report(?|s(?|(*:3551)|/(?|profitandloss(*:3577)|expensesummary(*:3600)|incomesummary(*:3622)))|/(?|profilandloss/generate/([^/]++)/([^/]++)(*:3677)|expensesummary/generate/([^/]++)/([^/]++)(*:3727)|incomesummary/generate/([^/]++)/([^/]++)(*:3776))))|property/([^/]++)/list(*:3810)|marketing/property/([^/]++)/(?|edit(*:3854)|details(*:3870)|([^/]++)/cancel(*:3894)|image/([^/]++)/(?|delete(*:3927)|cover(*:3941))|delete(*:3957))|([^/]++)/tenants(*:3983)|t(?|enant(?|s/(?|([^/]++)/(?|([^/]++)/show(*:4034)|trash(*:4048)|([^/]++)/notes(*:4071))|notes/([^/]++)/update(*:4102)|([^/]++)/(?|notes/delete(*:4135)|([^/]++)/invoices(*:4161)|statement(*:4179)|([^/]++)/units(*:4202)|edit(*:4215)|update(*:4230)|delete(*:4245)))|/(?|([^/]++)/([^/]++)/(?|lease(*:4286)|([^/]++)/lease/details(*:4317)|edit/([^/]++)/lease(*:4345))|update/([^/]++)/lease(*:4376)|lease/([^/]++)/(?|delete(*:4409)|utility/([^/]++)/delete(*:4441))))|axes/([^/]++)/(?|edit(*:4474)|delete(*:4489)))|p(?|roperty/([^/]++)/tenant/contactperson(*:4541)|ayment/methods/([^/]++)/(?|update(*:4583)|delete(*:4598)))|delete\\-vendor\\-person/([^/]++)(*:4640)|utilit(?|y/(?|([^/]++)/(?|billing(*:4682)|readings(*:4699))|bill/readings(*:4722)|([^/]++)/billing/([^/]++)/history(*:4764)|billing/([^/]++)/update(*:4796))|ies/([^/]++)/(?|edit(*:4826)|update(*:4841)|delete(*:4856)))|agents/([^/]++)/(?|edit(*:4890)|update(*:4905)|delete(*:4920))|supplier/([^/]++)/(?|edit(*:4955)|update(*:4970)|delete(*:4985))|landlord/([^/]++)/(?|edit(*:5020)|update(*:5035)|show(*:5048)|delete(?|(*:5066)|\\-contact\\-person(*:5092))|trash(*:5107))|maintenance/(?|([^/]++)/edit(*:5145)|property/units/(?|([^/]++)(*:5180)|tenant/([^/]++)(*:5204))|get/category/([^/]++)(*:5235)|category/([^/]++)/(?|edit(*:5269)|update(*:5284)|delete(*:5299)))|income/category/([^/]++)/(?|edit(*:5342)|delete(*:5357))|expense\\-category/([^/]++)/(?|edit(*:5401)|update(*:5416)|delete(*:5431))))|/email/verify/([^/]++)/([^/]++)(*:5474)|/verify/(?|account/([^/]++)(*:5510)|business/email/([^/]++)/([^/]++)(*:5551))|/finance/(?|c(?|ustomer/(?|([^/]++)/(?|edit(*:5604)|update(*:5619)|show(*:5632)|delete(*:5647)|comments(*:5664))|comments/([^/]++)/delete(*:5698)|([^/]++)/(?|invoices(*:5727)|s(?|ubscriptions(*:5752)|tatement(?|(*:5772)|/(?|p(?|df(*:5791)|rint(*:5804))|mail(*:5818)|send(*:5831)))|end(*:5845))|quotes(*:5861)|creditnotes(*:5881)|lpos(*:5894)|projects(*:5911)|mail(?|(*:5927)|/([^/]++)/details(*:5953))|documents(*:5972))|documents/([^/]++)/(?|update(*:6010)|([^/]++)/delete(*:6034))|([^/]++)/sms(*:6056)|sms/send(*:6073)|([^/]++)/(?|notes(?|(*:6102)|/(?|update(*:6121)|delete(*:6136)))|calllog(?|s(*:6158)|/(?|update(*:6177)|store(*:6191)))|events(*:6208))|e(?|vents/([^/]++)/(?|update(*:6246)|delete(*:6261))|xport/([^/]++)(*:6285))|category/([^/]++)/(?|edit(*:6320)|update(*:6335)|delete(*:6350)))|reditnote/(?|([^/]++)/(?|edit(*:6390)|update(*:6405)|delete(*:6420)|show(*:6433)|p(?|df(*:6448)|rint(*:6461)))|file/([^/]++)/([^/]++)(*:6494)|attach(?|ed/file/([^/]++)/delete(*:6535)|ment/([^/]++)/([^/]++)/change(*:6573))|([^/]++)/(?|convert(*:6602)|mail(*:6615))))|delete\\-(?|contact\\-person/([^/]++)(*:6662)|supplier\\-person/([^/]++)(*:6696))|s(?|upplier/(?|([^/]++)/(?|edit(*:6737)|update(*:6752)|show(*:6765)|delete(*:6780)|trash(*:6794))|category/([^/]++)/(?|edit(*:6829)|update(*:6844)|delete(*:6859))|export/([^/]++)(*:6884))|tock/([^/]++)/mail(*:6912)|alesorders/(?|([^/]++)/(?|edit(*:6951)|update(*:6966)|delete(*:6981)|show(*:6994)|p(?|df(*:7009)|rint(*:7022)))|file/([^/]++)/([^/]++)(*:7055)|attached/file/([^/]++)/delete(*:7093)|status/([^/]++)/([^/]++)/change(*:7133)|([^/]++)/(?|convert(*:7161)|mail(*:7174)))|ettings/(?|salesorders/(?|generated/([^/]++)/update(*:7236)|([^/]++)/defaults(*:7262)|defaults/([^/]++)/update(*:7295)|([^/]++)/tabs(*:7317)|tabs/([^/]++)/update(*:7346))|invoice/(?|generated/([^/]++)/update(*:7392)|([^/]++)/defaults(*:7418)|defaults/([^/]++)/update(*:7451)|([^/]++)/workflow(*:7477)|workflow/([^/]++)/update(*:7510)|([^/]++)/payments(*:7536)|payments/([^/]++)/update(*:7569)|([^/]++)/tabs(*:7591)|tabs/([^/]++)/update(*:7620))|quote/(?|generated/([^/]++)/update(*:7664)|([^/]++)/defaults(*:7690)|defaults/([^/]++)/update(*:7723)|([^/]++)/tabs(*:7745)|tabs/([^/]++)/update(*:7774))|creditnote/(?|generated/([^/]++)/update(*:7823)|([^/]++)/defaults(*:7849)|defaults/([^/]++)/update(*:7882)|([^/]++)/tabs(*:7904)|tabs/([^/]++)/update(*:7933))|taxes/([^/]++)/(?|edit(*:7965)|delete(*:7980))|lpo/(?|generated/([^/]++)/update(*:8022)|([^/]++)/defaults(*:8048)|defaults/([^/]++)/update(*:8081)|([^/]++)/tabs(*:8103)|tabs/([^/]++)/update(*:8132))|payment/modes/([^/]++)/(?|update(*:8174)|delete(*:8189))))|i(?|tem(?|s/(?|([^/]++)/(?|edit(*:8232)|update(*:8247)|de(?|tails(*:8266)|stroy(*:8280)))|export/([^/]++)(*:8306)|([^/]++)/description(?|(*:8338)|/update(*:8354))|inventory/([^/]++)/edit(*:8387)|([^/]++)/inventory/([^/]++)/update(*:8430)|inventory/settings/([^/]++)/update(*:8473)|([^/]++)/inventory/outle/([^/]++)/link/delete(*:8527)|images/([^/]++)/(?|edit(*:8559)|update(*:8574)|destroy(*:8590))|([^/]++)/settings(?|(*:8620)|/update(*:8636))|category/([^/]++)/(?|edit(*:8671)|destroy(*:8687))|brand/([^/]++)/(?|edit(*:8719)|destroy(*:8735))|tags/([^/]++)/(?|edit(*:8766)|destroy(*:8782))|attributes/(?|([^/]++)/(?|edit(*:8822)|update(*:8837)|delete(*:8852)|values(*:8867))|values/([^/]++)/(?|edit(*:8900)|update(*:8915)|delete(*:8930))))|/(?|price/([^/]++)/edit(*:8965)|([^/]++)/variants(?|(*:8994)|/(?|store(*:9012)|([^/]++)/edit(*:9034)))|variants/([^/]++)/update(*:9069)))|n(?|voice/(?|([^/]++)/(?|show(*:9109)|del(?|ete(*:9127)|iverynote(*:9145))|p(?|df(*:9161)|rint(*:9174)))|file/([^/]++)/([^/]++)(*:9207)|payment/stk/([^/]++)(*:9236)|([^/]++)/(?|edit(*:9261)|update(*:9276)|mail(*:9289))|send/mail(*:9308)|attachment/([^/]++)/delete(*:9343)|r(?|andom/([^/]++)/(?|edit(*:9378)|update(*:9393))|ecurring/([^/]++)/(?|edit(*:9428)|update(*:9443))))|come/category/([^/]++)/(?|edit(*:9485)|delete(*:9500))))|p(?|r(?|ice/([^/]++)/update(*:9539)|oduct\\.(?|category/([^/]++)/update(*:9582)|brand/([^/]++)/update(*:9612)|tags/([^/]++)/update(*:9641)))|ayment(?|s/([^/]++)/(?|edit(*:9679)|update(*:9694)|show(*:9707)|files(*:9721)|delete(*:9736)|p(?|rint(*:9753)|df(*:9764))|mail(*:9778))|/d(?|elete/file/([^/]++)(*:9812)|ownload/file/([^/]++)(*:9842)))|urchaseorders/(?|([^/]++)/(?|edit(*:9886)|update(*:9901)|delete(*:9916)|show(*:9929)|p(?|df(*:9944)|rint(*:9957)))|file/([^/]++)/([^/]++)(*:9990)|attach(?|ed/file/([^/]++)/delete(*:10031)|ment/([^/]++)/([^/]++)/change(*:10070))|([^/]++)/(?|convert(*:10100)|mail(*:10114))))|order/stock/([^/]++)/(?|show(*:10155)|edit(*:10169)|update(*:10185)|p(?|df(*:10201)|rint(*:10215))|delivered(*:10235))|expen(?|se(?|/([^/]++)/(?|edit(*:10276)|update(*:10292)|destroy(*:10309))|\\-category/([^/]++)/(?|edit(*:10347)|update(*:10363)|delete(*:10379)))|ce/([^/]++)/file/d(?|elete(*:10417)|ownload(*:10434)))|re(?|trive_client/([^/]++)(*:10472)|port/(?|account\\-statement/([^/]++)/([^/]++)/([^/]++)/([^/]++)/(?|results(*:10555)|export/(?|excel(*:10580)|p(?|df(*:10596)|rint(*:10610))))|sales/(?|customer/p(?|rint/([^/]++)/([^/]++)(*:10667)|df/([^/]++)/([^/]++)(*:10697))|item/p(?|rint/([^/]++)/([^/]++)(*:10739)|df/([^/]++)/([^/]++)(*:10769))|salesperson/p(?|rint/([^/]++)/([^/]++)(*:10818)|df/([^/]++)/([^/]++)(*:10848))|receivables/p(?|rint/([^/]++)/([^/]++)(*:10897)|df/([^/]++)/([^/]++)(*:10927)))|receivables/aging/extract/([^/]++)/([^/]++)/([^/]++)(*:10991)|profilandloss/pdf/([^/]++)/([^/]++)(*:11036)|expensesummary/extract/([^/]++)/([^/]++)(*:11086)|in(?|comesummary/([^/]++)/([^/]++)/extract(*:11138)|ventory/(?|summary/([^/]++)/([^/]++)/p(?|rint(*:11193)|df(*:11205))|valuation/summary/([^/]++)/([^/]++)/p(?|rint(*:11260)|df(*:11272))|product\\-sale/summary/([^/]++)/([^/]++)/p(?|rint(*:11331)|df(*:11343))))))|quotes/(?|([^/]++)/(?|edit(*:11384)|update(*:11400)|delete(*:11416)|show(*:11430)|p(?|df(*:11446)|rint(*:11460)))|file/([^/]++)/([^/]++)(*:11494)|attach(?|ed/file/([^/]++)/delete(*:11536)|ment/([^/]++)/([^/]++)/change(*:11575))|([^/]++)/(?|convert(*:11605)|mail(*:11619)))|account/([^/]++)/(?|edit(*:11655)|update(*:11671)|delete(*:11687)))|/hrm/(?|e(?|mployee/(?|([^/]++)/(?|update(*:11740)|show(*:11754)|edit(*:11768))|company\\-structure/([^/]++)/edit(*:11811)|deductions/(?|([^/]++)/edit(*:11848)|delete/([^/]++)/allocate(*:11882)))|x(?|perience/([^/]++)/(?|edit(*:11923)|delete(*:11939))|it\\-details/([^/]++)/edit(*:11975)))|p(?|ersonal\\-info/([^/]++)/(?|edit(*:12021)|update(*:12037))|ayroll/(?|([^/]++)/(?|show(?|(*:12077)|/update(*:12094))|details(*:12112)|([^/]++)/payslip(?|(*:12141)|/delete(*:12158))|delete(*:12175))|process/([^/]++)/([^/]++)/([^/]++)/review(*:12227)|settings/(?|deduction/([^/]++)/(?|edit(*:12275)|delete(*:12291))|benefits/([^/]++)/(?|edit(*:12327)|delete(*:12343)))))|salary/([^/]++)/(?|edit(*:12380)|update(*:12396))|bank\\-information/([^/]++)/(?|edit(*:12441)|update(*:12457))|a(?|cademic\\-information/([^/]++)/(?|edit(*:12509)|update(*:12525))|llocation/([^/]++)/edit(*:12559)|nnouncements/([^/]++)/show(*:12595))|delete(?|\\-(?|institution/([^/]++)(*:12640)|f(?|amily\\-information/([^/]++)(*:12681)|ile/([^/]++)(*:12703)))|/([^/]++)/allocation(*:12735))|institution\\-edit/([^/]++)(*:12772)|f(?|amily\\-information/([^/]++)/edit(*:12818)|iles/([^/]++)/edit(*:12846))|roles/([^/]++)/edit(*:12876)|leave/(?|([^/]++)/(?|edit(*:12911)|update(*:12927)|approve(*:12944)|de(?|nay(*:12962)|lete(*:12976)))|apply/([^/]++)/(?|edit(*:13010)|update(*:13026))|type/([^/]++)/delete(*:13057))|organization/(?|positions/([^/]++)/(?|edit(*:13110)|update(*:13126)|destroy(*:13143))|departments/([^/]++)/(?|edit(*:13182)|update(*:13198)|delete(*:13214))|branches/([^/]++)/(?|edit(*:13250)|update(*:13266)|delete(*:13282)))|company\\-policy/([^/]++)/edit(*:13323)|travel/(?|([^/]++)/(?|edit(*:13359)|update(*:13375)|delete(*:13391))|expenses/([^/]++)/(?|edit(*:13427)|update(*:13443)|show(*:13457)|delete(?|(*:13476)|/([^/]++)/files(*:13501)))))|/c(?|rm/(?|lead(?|s/(?|([^/]++)/(?|show(*:13554)|edit(*:13568)|update(*:13584)|delete(*:13600)|c(?|onvert(*:13620)|alllog(?|(*:13639)|/(?|store(*:13658)|delete(*:13674))))|notes(?|(*:13695)|/(?|update(*:13715)|delete(*:13731)))|tasks(*:13748))|tasks/([^/]++)/(?|update(*:13783)|delete(*:13799))|([^/]++)/events(*:13825)|events/([^/]++)/(?|update(*:13860)|delete(*:13876))|([^/]++)/documents(*:13905)|documents/([^/]++)/(?|update(*:13943)|([^/]++)/delete(*:13968))|([^/]++)/(?|mail(?|(*:13998)|/([^/]++)/details(*:14025))|s(?|end(*:14043)|ms(*:14055)))|sms/send(*:14075))|/s(?|tatus/([^/]++)/(?|update(*:14115)|delete(*:14131))|ources/([^/]++)/(?|update(*:14167)|delete(*:14183))))|ma(?|il/([^/]++)/details(*:14220)|rketing/(?|retrive/channel/([^/]++)(*:14265)|publi(?|cations/([^/]++)/(?|edit(*:14307)|update(*:14323)|channel/([^/]++)(*:14349))|sh/([^/]++)/([^/]++)(*:14380))|account/([^/]++)/(?|edit(*:14415)|update(*:14431)|delete(*:14447))|medium/([^/]++)/(?|edit(*:14481)|update(*:14497)|delete(*:14513))|([^/]++)/channel(?|(*:14543)|/([^/]++)/edit(*:14567))|channel/([^/]++)/(?|update(*:14604)|delete(*:14620))))|customer/(?|([^/]++)/(?|edit(*:14661)|update(*:14677)|show(*:14691)|c(?|ustomer\\-persons(*:14721)|omments(*:14738))|notes(*:14754)|delete(*:14770))|comments/([^/]++)/delete(*:14805)|([^/]++)/(?|invoices(*:14835)|s(?|ubscriptions(*:14861)|tatement(?|(*:14882)|/(?|p(?|df(*:14902)|rint(*:14916))|mail(*:14931)|send(*:14945)))|end(*:14960))|quotes(*:14977)|creditnotes(*:14998)|lpos(*:15012)|projects(*:15030)|mail(?|(*:15047)|/([^/]++)/details(*:15074))|documents(*:15094))|documents/([^/]++)/(?|update(*:15133)|([^/]++)/delete(*:15158))|([^/]++)/sms(*:15181)|sms/send(*:15199)|export/([^/]++)(*:15224)|category/([^/]++)/(?|edit(*:15259)|update(*:15275)|delete(*:15291))|([^/]++)/(?|notes/(?|update(*:15329)|delete(*:15345))|calllog(?|s(*:15367)|/(?|update(*:15387)|store(*:15402)))|events(*:15420))|events/([^/]++)/(?|update(*:15456)|delete(*:15472)))|s(?|ms/retreve/from/([^/]++)(*:15512)|hort/([^/]++)/delete(*:15542))|url/([^/]++)(*:15565)|deals/([^/]++)/(?|edit(*:15597)|update(*:15613)|s(?|how(*:15630)|tages(*:15645))|delete(*:15662)|call_log(?|(*:15683)|/(?|store(*:15702)|update(*:15718)|delete(*:15734)))|notes(?|(*:15754)|/(?|store(*:15773)|update(*:15789)|delete(*:15805)))|task(?|(*:15824)|/(?|store(*:15843)|update(*:15859)|delete(*:15875)))|appointments(?|(*:15902)|/(?|store(*:15921)|update(*:15937)|delete(*:15953))))|pipeline/(?|([^/]++)/(?|edit(*:15994)|update(*:16010)|show(*:16024)|delete(*:16040))|stages/([^/]++)/(?|edit(*:16074)|update(*:16090)|delete(*:16106)))|reports/leads_by_(?|s(?|tatus/export/([^/]++)/([^/]++)/([^/]++)(*:16181)|ource/export/([^/]++)/([^/]++)/([^/]++)(*:16230))|industry/export/([^/]++)/([^/]++)/([^/]++)(*:16283)))|ms/(?|knowledge_base/(?|groups/([^/]++)/(?|edit(*:16342)|update(*:16358)|delete(*:16374))|([^/]++)/(?|edit(*:16401)|update(*:16417)|delete(*:16433)|show(*:16447)))|p(?|roposal/([^/]++)/(?|show(*:16487)|edit(*:16501)|update(*:16517)|delete(*:16533))|ages/([^/]++)/update(*:16564)|osts/(?|([^/]++)/update(*:16597)|tags/([^/]++)/update(*:16627)))|website(?|/(?|p(?|ages/([^/]++)/(?|edit(*:16678)|destroy(*:16695))|osts/(?|([^/]++)/(?|edit(*:16730)|delete(*:16746)|comment(*:16763)|attachment(*:16783))|category/([^/]++)/(?|edit(*:16819)|update(*:16835)|destroy(*:16852))))|field/delete/([^/]++)(*:16886)|slider/([^/]++)/(?|edit(*:16919)|destroy(*:16936))|affiliate/([^/]++)/(?|edit(*:16973)|delete(*:16989)))|posts/tags/([^/]++)/(?|edit(*:17028)|destroy(*:17045)))|slider/([^/]++)/update(*:17079)|affiliate/([^/]++)/update(*:17114)))|/settings/(?|businessprofile/([^/]++)/(?|update(*:17173)|delete/logo(*:17194))|users/([^/]++)/(?|edit(*:17227)|update(*:17243))|language/(?|([^/]++)/([^/]++)(*:17283)|translate/section(*:17310)|([^/]++)/(?|edit(*:17336)|update(*:17352)|delete(*:17368)))|roles/([^/]++)/(?|show(*:17402)|edit(*:17416)|update(*:17432)|delete(*:17448))|account/application/([^/]++)/(?|delete(*:17497)|billing(*:17514))|payment/integrations(?|([^/]++)/status/([^/]++)(*:17572)|/([^/]++)/(?|delete(*:17601)|p(?|esapal(?|(*:17624)|/update(*:17641))|aypal(?|(*:17660)|/update(*:17677)))|kepler9(?|(*:17699)|/update(*:17716))|ipay(?|(*:17734)|/update(*:17751))|mpesa(?|(*:17770)|/update(*:17787)|\\-(?|p(?|hone\\-number(?|(*:17821)|/update(*:17838))|aybill\\-number(?|(*:17866)|/update(*:17883)))|till\\-number(?|(*:17910)|/update(*:17927))))))|daraja/register/url/([^/]++)(*:17970)|integrations/telephony/([^/]++)/(?|twilio(?|(*:18024)|/update(*:18041))|africasTalking(?|(*:18069)|/update(*:18086))))|/track/(?|email/([^/]++)/([^/]++)/([^/]++)(*:18141)|invoice/([^/]++)/([^/]++)/([^/]++)(*:18185)|salesorder/([^/]++)/([^/]++)/([^/]++)(*:18232)|quote/([^/]++)/([^/]++)/([^/]++)(*:18274)))/?$}sDu',
    ),
    3 => 
    array (
      42 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'debugbar.clockwork',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      76 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'debugbar.cache.delete',
            'tags' => NULL,
          ),
          1 => 
          array (
            0 => 'key',
            1 => 'tags',
          ),
          2 => 
          array (
            'DELETE' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      102 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'debugbar.telescope',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      140 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'livewire.message',
          ),
          1 => 
          array (
            0 => 'name',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      170 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'livewire.preview-file',
          ),
          1 => 
          array (
            0 => 'filename',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      228 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'daraja.payment.callback',
          ),
          1 => 
          array (
            0 => 'businessID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      255 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'daraja.payment.cancel.callback',
          ),
          1 => 
          array (
            0 => 'businessID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      283 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'daraja.validation.url',
          ),
          1 => 
          array (
            0 => 'businessID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      328 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'application.add.cart',
          ),
          1 => 
          array (
            0 => 'moduleID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      348 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'application.remove.cart',
          ),
          1 => 
          array (
            0 => 'cartID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      383 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      397 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      409 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.show',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      423 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      454 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'model.retrive',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      481 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.details.vehicle',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      504 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.maintenances.index',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      522 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.maintenances.create',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      535 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.maintenances.store',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      559 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.maintenances.edit',
          ),
          1 => 
          array (
            0 => 'assetID',
            1 => 'editID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      573 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.maintenances.update',
          ),
          1 => 
          array (
            0 => 'assetID',
            1 => 'editID',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      590 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.event.index',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      621 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.event.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      663 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.event.checkout.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      696 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.event.checkin.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      736 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.event.lease.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      768 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'licenses.assets.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      782 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'licenses.assets.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      794 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'licenses.assets.show',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      808 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'licenses.assets.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      831 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'licenses.maintenances.index',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      849 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'licenses.maintenances.create',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      862 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'licenses.maintenances.store',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      886 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'licenses.maintenances.edit',
          ),
          1 => 
          array (
            0 => 'assetID',
            1 => 'editID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      900 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'licenses.maintenances.update',
          ),
          1 => 
          array (
            0 => 'assetID',
            1 => 'editID',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      914 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'licenses.maintenances.delete',
          ),
          1 => 
          array (
            0 => 'assetID',
            1 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      948 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.type.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      962 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.type.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      976 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.type.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1014 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'password.reset',
          ),
          1 => 
          array (
            0 => 'token',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      1074 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1089 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1108 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.show',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1121 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1143 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.remove.image',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1166 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.information',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1182 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.information.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1217 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.vacant',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1234 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.occupied',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1262 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.leases',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1281 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.leases.create',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1298 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.units',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1314 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.units.create',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1336 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.units.edit',
          ),
          1 => 
          array (
            0 => 'pid',
            1 => 'uid',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1381 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.units.document',
          ),
          1 => 
          array (
            0 => 'uid',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1394 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.units.update',
          ),
          1 => 
          array (
            0 => 'uid',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1440 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.units.delete',
          ),
          1 => 
          array (
            0 => 'pid',
            1 => 'uid',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1453 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.units.bulk.create',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1474 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.invoice.index',
          ),
          1 => 
          array (
            0 => 'propertyID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1493 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.invoice.create',
          ),
          1 => 
          array (
            0 => 'propertyID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1507 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.invoice.store',
          ),
          1 => 
          array (
            0 => 'propertyID',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1538 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.invoice.show',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'invoiceID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1551 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.invoice.delete',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'invoiceID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1567 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.invoice.tenant.leases',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'tenantID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1584 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.invoice.payment',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'invoiceID',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1601 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.invoice.create.bulk',
          ),
          1 => 
          array (
            0 => 'propertyID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1616 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.invoice.store.bulk',
          ),
          1 => 
          array (
            0 => 'propertyID',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1640 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.invoice.print',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'invoiceID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1683 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.invoice.edit',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'invoiceID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1707 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.invoice.update',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'invoiceID',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1728 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.payments',
          ),
          1 => 
          array (
            0 => 'propertyID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1747 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.payments.create',
          ),
          1 => 
          array (
            0 => 'propertyID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1769 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.payments.edit',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'paymentID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1815 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.payments.update',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'paymentID',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1864 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.payments.show',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'paymentID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1906 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::k5LXQgY3veUTzykQ',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'tenantID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      1965 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.payments.delete.file',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'fileID',
            2 => 'parentID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1989 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.payments.delete',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'parentID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2027 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.utility.billing.index',
          ),
          1 => 
          array (
            0 => 'propertyID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2043 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.utility.billing.create',
          ),
          1 => 
          array (
            0 => 'propertyID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2077 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.prepare.utility.billing',
          ),
          1 => 
          array (
            0 => 'propertyID',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2151 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.record.bulk.reading',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'utility',
            2 => 'from',
            3 => 'to',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      2182 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.utility.billing.store',
          ),
          1 => 
          array (
            0 => 'propertyID',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2230 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.utility.billing.edit',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'invoiceID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2289 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.calculate.utility.consumption',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'invoiceID',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2324 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.update.utility.consumption',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'invoiceID',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2391 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.utility.billing.show',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'invoiceID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2404 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.utility.billing.delete',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'invoiceID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2420 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.utility.billing.tenant.leases',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'tenantID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2437 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.utility.payment',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'invoiceID',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2458 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.utility.compose.mail',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'invoiceID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2480 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.utility.send.mail',
          ),
          1 => 
          array (
            0 => 'propertyID',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2499 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.documents',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2515 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.gallery',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2555 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.payment.integration.settings',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2580 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.payment.integration.settings.delete',
          ),
          1 => 
          array (
            0 => 'id',
            1 => 'integrationID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2589 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.payment.integration.settings.activation',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2631 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.invoice.settings',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2650 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.invoice.settings.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2669 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.creditnote.settings.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2690 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.creditnote.settings',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2761 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.billing.history',
          ),
          1 => 
          array (
            0 => 'id',
            1 => 'datefrom',
            2 => 'dateto',
            3 => 'type',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2777 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.billing.history.search',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2840 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.mpesaapi.integration',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'getwayID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2856 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.mpesaapi.integration.update',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2873 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.mpesatill.integration',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'getwayID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => true,
          5 => false,
          6 => NULL,
        ),
      ),
      2889 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.mpesatill.integration.update',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2909 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.mpesapaybill.integration',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'getwayID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2925 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.mpesapaybill.integration.update',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2947 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.bank1.integration',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'getwayID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2963 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.bank1.integration.update',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2977 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.bank2.integration',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'getwayID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2993 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.bank2.integration.update',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3007 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.bank3.integration',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'getwayID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3023 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.bank3.integration.update',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3037 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.bank4.integration',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'getwayID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3053 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.bank4.integration.update',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3067 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.bank5.integration',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'getwayID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3083 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.bank5.integration.update',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3103 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.images',
          ),
          1 => 
          array (
            0 => 'propertyID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3122 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.images.upload',
          ),
          1 => 
          array (
            0 => 'propertyID',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3146 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.images.delete',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3177 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.documents.upload',
          ),
          1 => 
          array (
            0 => 'propertyID',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3204 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.documents.update',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'documentID',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3219 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.documents.delete',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3241 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.expense',
          ),
          1 => 
          array (
            0 => 'propertyID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3260 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.expense.create',
          ),
          1 => 
          array (
            0 => 'propertyID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3274 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.expense.store',
          ),
          1 => 
          array (
            0 => 'propertyID',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3299 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.expense.edit',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3314 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.expense.update',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3343 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.expense.delete.file',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'parentID',
            2 => 'fileID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3358 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.expense.delete',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'parentID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3383 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.creditnote.index',
          ),
          1 => 
          array (
            0 => 'propertyID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3402 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.creditnote.create',
          ),
          1 => 
          array (
            0 => 'propertyID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3416 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.creditnote.store',
          ),
          1 => 
          array (
            0 => 'propertyID',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3441 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.creditnote.edit',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3456 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.creditnote.update',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3471 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.creditnote.delete',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3484 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.creditnote.show',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3499 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.creditnote.pdf',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3512 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.creditnote.print',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3526 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.creditnote.mail',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3551 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.reports',
          ),
          1 => 
          array (
            0 => 'propertyID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3577 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.reports.profitandloss',
          ),
          1 => 
          array (
            0 => 'propertyID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3600 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.reports.expensesummary',
          ),
          1 => 
          array (
            0 => 'propertyID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3622 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.reports.incomesummary',
          ),
          1 => 
          array (
            0 => 'propertyID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3677 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.reports.profitandloss.generate',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'to',
            2 => 'from',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      3727 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.reports.expensesummary.generate',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'to',
            2 => 'from',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      3776 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.reports.incomesummary.generate',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'to',
            2 => 'from',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      3810 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'list.property',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3854 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'list.property.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3870 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'list.property.details',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3894 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'list.property.cancel',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'listID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3927 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'list.property.delete.image',
          ),
          1 => 
          array (
            0 => 'id',
            1 => 'imageID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3941 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'list.property.image.cover',
          ),
          1 => 
          array (
            0 => 'id',
            1 => 'imageID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3957 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'list.property.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3983 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.tenants',
          ),
          1 => 
          array (
            0 => 'propertyID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4034 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.tenants.show',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'tenantID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4048 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'tenants.trash.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4071 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'tenants.notes',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'tenantID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4102 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'tenants.notes.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4135 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'tenants.notes.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4161 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'tenants.invoice.index',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'tenantID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4179 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'tenants.statement',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4202 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'tenants.units.index',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'tenantID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4215 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'tenants.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4230 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'tenants.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4245 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'tenants.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4286 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.tenant.lease',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'tenantID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4317 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.tenant.lease.show',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'tenantID',
            2 => 'leaseID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4345 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.tenant.lease.edit',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'tenantID',
            2 => 'leaseID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4376 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.tenant.lease.update',
          ),
          1 => 
          array (
            0 => 'leaseID',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4409 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.tenant.lease.delete',
          ),
          1 => 
          array (
            0 => 'leaseID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4441 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.leases.delete.utility',
          ),
          1 => 
          array (
            0 => 'leaseID',
            1 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4474 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.taxes.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4489 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.taxes.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4541 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'tenant.contactperson.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4583 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.payment.method.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4598 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.payment.method.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4640 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'tenantsperson.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      4682 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'utility.billing.index',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4699 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'utility.readings',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4722 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'utility.bill.readings',
          ),
          1 => 
          array (
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4764 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'utility.billing.history',
          ),
          1 => 
          array (
            0 => 'propertyID',
            1 => 'periodID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4796 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'utility.billing.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4826 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.utilities.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4841 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.utilities.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4856 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.utilities.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4890 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.agents.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4905 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.agents.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4920 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.agents.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4955 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.supplier.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4970 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.supplier.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4985 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.supplier.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5020 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'landlord.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5035 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'landlord.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5048 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'landlord.show',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5066 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'landlord.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5092 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'landlordperson.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5107 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'landlord.trash.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5145 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.maintenance.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5180 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pm.maintenance.get.units',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      5204 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pm.maintenance.get.units.tenant',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      5235 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pm.maintenance.get.category',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      5269 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'maintenance.category.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5284 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'maintenance.category.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5299 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'maintenance.category.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5342 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.income.category.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5357 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.income.category.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5401 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.expense.category.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5416 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.expense.category.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5431 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'property.expense.category.destroy',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5474 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'verification.verify',
          ),
          1 => 
          array (
            0 => 'id',
            1 => 'hash',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      5510 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'account.verify',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      5551 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'verify.business.email',
          ),
          1 => 
          array (
            0 => 'code',
            1 => 'email',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      5604 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.contact.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5619 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.contact.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5632 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.contact.show',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5647 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.contact.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5664 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customers.comments',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5698 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customers.comments.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5727 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customers.invoices',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5752 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customers.subscriptions',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5772 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customers.statement',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5791 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customers.statement.pdf',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5804 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customers.statement.print',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5818 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customers.statement.mail',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5831 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customers.statement.send',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5845 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customer.send',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5861 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customers.quotes',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5881 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customers.creditnotes',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5894 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customers.lpos',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5911 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customers.projects',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5927 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customer.mail',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5953 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customer.mail.details',
          ),
          1 => 
          array (
            0 => 'id',
            1 => 'customerID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5972 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customer.documents',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6010 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customer.documents.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6034 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customer.documents.delete',
          ),
          1 => 
          array (
            0 => 'id',
            1 => 'leadID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6056 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customer.sms',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6073 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customer.sms.send',
          ),
          1 => 
          array (
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6102 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customer.notes',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6121 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customer.notes.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6136 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customer.notes.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6158 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customer.calllog',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6177 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customer.calllog.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6191 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customer.calllog.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6208 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customer.events',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6246 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customer.events.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6261 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customer.events.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6285 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.contact.export',
          ),
          1 => 
          array (
            0 => 'type',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      6320 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.contact.groups.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6335 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.contact.groups.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6350 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.contact.groups.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6390 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.creditnote.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6405 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.creditnote.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6420 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.creditnote.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6433 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.creditnote.show',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6448 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.creditnote.pdf',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6461 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.creditnote.print',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6494 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.creditnote.attachment.status',
          ),
          1 => 
          array (
            0 => 'status',
            1 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      6535 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.creditnote.attachment.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6573 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.creditnote.status.change',
          ),
          1 => 
          array (
            0 => 'creditnoteID',
            1 => 'status',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6602 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.creditnote.convert',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6615 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.creditnote.mail',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6662 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.contactperson.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      6696 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.supplier.vendor.person',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      6737 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.supplier.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6752 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.supplier.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6765 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.supplier.show',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6780 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.supplier.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6794 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'vendor.trash.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6829 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.supplier.groups.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6844 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.supplier.groups.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6859 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.supplier.groups.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6884 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'supplier.export',
          ),
          1 => 
          array (
            0 => 'type',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      6912 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.stock.mail',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6951 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.salesorders.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6966 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.salesorders.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6981 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.salesorders.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6994 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.salesorders.show',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7009 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.salesorders.pdf',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7022 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.salesorders.print',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7055 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.salesorders.attachment.status',
          ),
          1 => 
          array (
            0 => 'status',
            1 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      7093 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.salesorders.attachment.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7133 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.salesorders.status.change',
          ),
          1 => 
          array (
            0 => 'salesorderID',
            1 => 'status',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7161 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.salesorders.convert',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7174 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.salesorders.mail',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7236 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.salesorders.generated.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7262 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.salesorders.defaults',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7295 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.salesorders.defaults.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7317 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.salesorders.tabs',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7346 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.salesorders.tabs.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7392 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.invoice.generated.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7418 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.invoice.defaults',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7451 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.invoice.defaults.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7477 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.invoice.workflow',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7510 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.invoice.workflow.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7536 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.invoice.payments',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7569 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.invoice.payments.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7591 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.invoice.tabs',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7620 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.invoice.tabs.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7664 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.quote.generated.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7690 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.quote.defaults',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7723 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.quote.defaults.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7745 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.quote.tabs',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7774 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.quote.tabs.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7823 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.creditnote.generated.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7849 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.creditnote.defaults',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7882 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.creditnote.defaults.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7904 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.creditnote.tabs',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7933 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.creditnote.tabs.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7965 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.taxes.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7980 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8022 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.lpo.generated.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8048 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.lpo.defaults',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8081 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.lpo.defaults.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8103 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.lpo.tabs',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8132 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.lpo.tabs.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8174 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.payment.mode.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8189 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.payment.mode.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8232 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.products.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8247 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.products.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8266 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.products.details',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8280 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.products.destroy',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8306 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.products.export',
          ),
          1 => 
          array (
            0 => 'type',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      8338 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.description',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8354 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.description.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8387 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.inventory',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8430 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.inventory.update',
          ),
          1 => 
          array (
            0 => 'id',
            1 => 'productID',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8473 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.inventory.settings.update',
          ),
          1 => 
          array (
            0 => 'productID',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8527 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.inventory.outlet.link.delete',
          ),
          1 => 
          array (
            0 => 'productID',
            1 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8559 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.images',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8574 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.images.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8590 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.images.destroy',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8620 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.settings.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8636 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.settings.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8671 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.category.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8687 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.category.destroy',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8719 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.brand.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8735 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.brand.destroy',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8766 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.tags.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8782 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.tags.destroy',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8822 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.attributes.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8837 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.attributes.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8852 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.attributes.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8867 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.attributes.value.create',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8900 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.attributes.value.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8915 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.attributes.value.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8930 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.attributes.value.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8965 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.price',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8994 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.products.variants.index',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9012 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.products.variants.store',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9034 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.products.variants.edit',
          ),
          1 => 
          array (
            0 => 'id',
            1 => 'variantID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9069 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.products.variants.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9109 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.invoice.show',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9127 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.invoice.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9145 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.invoice.deliverynote',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9161 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.invoice.pdf',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9174 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.invoice.print',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9207 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.invoice.attachment.status',
          ),
          1 => 
          array (
            0 => 'status',
            1 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      9236 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.invoice.payments.stkpush',
          ),
          1 => 
          array (
            0 => 'businessID',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      9261 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.invoice.product.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9276 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.invoice.product.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9289 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.invoice.mail',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9308 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.invoice.send.mail',
          ),
          1 => 
          array (
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9343 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.invoice.attachment.delete',
          ),
          1 => 
          array (
            0 => 'ud',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9378 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.invoice.random.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9393 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.invoice.random.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9428 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.invoice.recurring.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9443 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.invoice.recurring.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9485 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.income.category.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9500 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.income.category.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9539 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.price.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9582 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.category.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9612 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.brand.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9641 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.tags.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9679 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.payments.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9694 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.payments.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9707 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.payments.show',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9721 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.received.files',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9736 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.payments.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9753 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.payments.print',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9764 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.payments.pdf',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9778 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.payments.mail',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9812 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.payment.file.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      9842 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.payment.file.download',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      9886 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.lpo.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9901 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.lpo.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9916 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.lpo.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9929 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.lpo.show',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9944 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.lpo.pdf',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9957 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.lpo.print',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9990 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.lpo.attachment.status',
          ),
          1 => 
          array (
            0 => 'status',
            1 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      10031 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.lpo.attachment.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      10070 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.lpo.status.change',
          ),
          1 => 
          array (
            0 => 'lpoID',
            1 => 'status',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      10100 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.lpo.convert',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      10114 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.lpo.mail',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      10155 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.stock.order.show',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      10169 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.stock.order.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      10185 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.stock.order.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      10201 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.stock.order.pdf',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      10215 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.stock.order.print',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      10235 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.stock.delivered',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      10276 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.expense.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      10292 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.expense.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      10309 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.expense.destroy',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      10347 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.expense.category.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      10363 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.expense.category.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      10379 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.expense.category.destroy',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      10417 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.expense.file.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      10434 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.expense.file.download',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      10472 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.retrive.client',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      10555 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.account.statement.results',
          ),
          1 => 
          array (
            0 => 'clientID',
            1 => 'from',
            2 => 'to',
            3 => 'transaction',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      10580 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.account.statement.export.excel',
          ),
          1 => 
          array (
            0 => 'clientID',
            1 => 'from',
            2 => 'to',
            3 => 'transaction',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      10596 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.account.statement.export.pdf',
          ),
          1 => 
          array (
            0 => 'clientID',
            1 => 'from',
            2 => 'to',
            3 => 'transaction',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      10610 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.account.statement.export.print',
          ),
          1 => 
          array (
            0 => 'clientID',
            1 => 'from',
            2 => 'to',
            3 => 'transaction',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      10667 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.sales.customer.print',
          ),
          1 => 
          array (
            0 => 'to',
            1 => 'from',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      10697 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.sales.customer.pdf',
          ),
          1 => 
          array (
            0 => 'to',
            1 => 'from',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      10739 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.sales.item.print',
          ),
          1 => 
          array (
            0 => 'to',
            1 => 'from',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      10769 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.sales.item.pdf',
          ),
          1 => 
          array (
            0 => 'to',
            1 => 'from',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      10818 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.sales.salesperson.print',
          ),
          1 => 
          array (
            0 => 'to',
            1 => 'from',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      10848 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.sales.salesperson.pdf',
          ),
          1 => 
          array (
            0 => 'to',
            1 => 'from',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      10897 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.receivables.balance.print',
          ),
          1 => 
          array (
            0 => 'to',
            1 => 'from',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      10927 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.receivables.balance.pdf',
          ),
          1 => 
          array (
            0 => 'to',
            1 => 'from',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      10991 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.receivables.aging.extract',
          ),
          1 => 
          array (
            0 => 'format',
            1 => 'to',
            2 => 'from',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      11036 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.profitandloss.pdf',
          ),
          1 => 
          array (
            0 => 'to',
            1 => 'from',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      11086 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.expensesummary.extract',
          ),
          1 => 
          array (
            0 => 'to',
            1 => 'from',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      11138 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.incomesummary.extract',
          ),
          1 => 
          array (
            0 => 'to',
            1 => 'from',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11193 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.inventory.summary.print',
          ),
          1 => 
          array (
            0 => 'to',
            1 => 'from',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11205 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.inventory.summary.pdf',
          ),
          1 => 
          array (
            0 => 'to',
            1 => 'from',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11260 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.inventory.valuation.summary.print',
          ),
          1 => 
          array (
            0 => 'to',
            1 => 'from',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11272 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.inventory.valuation.summary.pdf',
          ),
          1 => 
          array (
            0 => 'to',
            1 => 'from',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11331 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.inventory.sale.summary.print',
          ),
          1 => 
          array (
            0 => 'to',
            1 => 'from',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11343 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.inventory.sale.summary.pdf',
          ),
          1 => 
          array (
            0 => 'to',
            1 => 'from',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11384 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.quotes.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11400 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.quotes.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11416 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.quotes.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11430 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.quotes.show',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11446 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.quotes.pdf',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11460 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.quotes.print',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11494 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.quotes.attachment.status',
          ),
          1 => 
          array (
            0 => 'status',
            1 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      11536 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.quotes.attachment.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11575 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.quotes.status.change',
          ),
          1 => 
          array (
            0 => 'quotesID',
            1 => 'status',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11605 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.quotes.convert',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11619 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.quotes.mail',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11655 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.account.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11671 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.account.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11687 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.account.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11740 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.employee.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11754 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.employee.show',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11768 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.employee.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11811 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.employee.company.structure.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11848 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.employee.deductions',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11882 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.employee.deductions.delete.allocate',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11923 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.experience.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11939 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.experience.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11975 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.exitdetails.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12021 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.personalinfo.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12037 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.personalinfo.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12077 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.people.show',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12094 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.people.show.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12112 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.details',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12141 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.payslip',
          ),
          1 => 
          array (
            0 => 'employeeID',
            1 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12158 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.payslip.delete',
          ),
          1 => 
          array (
            0 => 'employeeID',
            1 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12175 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12227 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.process.review',
          ),
          1 => 
          array (
            0 => 'payroll_date',
            1 => 'type',
            2 => 'branch',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12275 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.settings.deduction.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12291 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.settings.deduction.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12327 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.settings.benefits.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12343 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.settings.benefits.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12380 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.employee.salary.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12396 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.employee.salary.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12441 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.employeebankinformation.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12457 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.employeebankinformation.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12509 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.employeeacademicinformation.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12525 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.employeeacademicinformation.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12559 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.allocation.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12595 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.announcements.show',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12640 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.institution.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      12681 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.famillyinfo.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      12703 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.employeefile.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      12735 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.allocation.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12772 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.institution.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      12818 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.famillyinfo.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12846 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.employeefile.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12876 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.employeerole.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12911 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.leave.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12927 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.leave.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12944 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.leave.approve',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12962 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.leave.denay',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12976 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.leave.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13010 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.leave.apply.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13026 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.leave.apply.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13057 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.leave.settings.type.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13110 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.positions.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13126 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.positions.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13143 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.positions.destroy',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13182 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.departments.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13198 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.departments.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13214 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.departments.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13250 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.branches.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13266 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.branches.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13282 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.branches.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13323 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.companyprofile.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13359 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.travel.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13375 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.travel.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13391 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.travel.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13427 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.travel.expenses.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13443 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.travel.expenses.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13457 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.travel.expenses.show',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13476 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.travel.expenses.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13501 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.travel.expenses.delete.files',
          ),
          1 => 
          array (
            0 => 'expenseID',
            1 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13554 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.show',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13568 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13584 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13600 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13620 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.convert',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13639 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.calllog',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13658 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.calllog.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13674 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.calllog.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13695 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.notes',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13715 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.notes.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13731 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.notes.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13748 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.tasks',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13783 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.tasks.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13799 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.tasks.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13825 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.events',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13860 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.events.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13876 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.events.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13905 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.documents',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13943 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.documents.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13968 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.documents.delete',
          ),
          1 => 
          array (
            0 => 'id',
            1 => 'leadID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13998 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.mail',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14025 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.details',
          ),
          1 => 
          array (
            0 => 'id',
            1 => 'leadID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14043 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.send',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14055 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.sms',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14075 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.sms.send',
          ),
          1 => 
          array (
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14115 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.status.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14131 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.status.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14167 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.sources.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14183 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.sources.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14220 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.mail.details',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14265 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::wQEjBgy4firp3lIe',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      14307 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.publications.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14323 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.publications.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14349 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.publications.post.channel',
          ),
          1 => 
          array (
            0 => 'postID',
            1 => 'channelID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      14380 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.publications.post.publish',
          ),
          1 => 
          array (
            0 => 'postID',
            1 => 'channelID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      14415 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.account.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14431 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.account.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14447 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.marketing.account.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14481 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.medium.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14497 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.medium.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14513 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.medium.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14543 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.channel.index',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14567 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.channel.edit',
          ),
          1 => 
          array (
            0 => 'accountID',
            1 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14604 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.channel.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14620 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.channel.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14661 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14677 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14691 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.show',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14721 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.persons',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14738 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.comments',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14754 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customer.notes',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14770 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14805 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.comments.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14835 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.invoices',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14861 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.subscriptions',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14882 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.statement',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14902 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.statement.pdf',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14916 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.statement.print',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14931 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.statement.mail',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14945 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.statement.send',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14960 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customer.send',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14977 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.quotes',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14998 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.creditnotes',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15012 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.lpos',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15030 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.projects',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15047 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customer.mail',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15074 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customer.details',
          ),
          1 => 
          array (
            0 => 'id',
            1 => 'customerID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15094 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customer.documents',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15133 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customer.documents.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15158 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customer.documents.delete',
          ),
          1 => 
          array (
            0 => 'id',
            1 => 'leadID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15181 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customer.sms',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15199 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customer.sms.send',
          ),
          1 => 
          array (
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15224 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.export',
          ),
          1 => 
          array (
            0 => 'type',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      15259 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.groups.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15275 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.groups.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15291 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.groups.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15329 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customer.notes.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15345 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customer.notes.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15367 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customer.calllog',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15387 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customer.calllog.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15402 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customer.calllog.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15420 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customer.events',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15456 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customer.events.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15472 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customer.events.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15512 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::ehR7EHztxE2Tw4b4',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      15542 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'url.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15565 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'url.get',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      15597 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.deals.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15613 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.deals.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15630 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.deals.show',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15645 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.deals.stages',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15662 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.deals.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15683 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.deals.calllog.index',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15702 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.deals.calllog.store',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15718 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.deals.calllog.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15734 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.deals.calllog.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15754 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.deals.notes.index',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15773 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.deals.notes.store',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15789 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.deals.notes.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15805 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.deals.notes.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15824 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.deals.task.index',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15843 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.deals.task.store',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15859 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.deals.task.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15875 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.deals.task.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15902 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.deals.appointments.index',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15921 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.deals.appointments.store',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15937 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.deals.appointments.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15953 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.deals.appointments.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15994 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.pipeline.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16010 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.pipeline.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16024 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.pipeline.show',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16040 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.pipeline.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16074 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.pipeline.stage.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16090 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.pipeline.stage.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16106 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.pipeline.stage.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16181 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.reports.leads.status.export',
          ),
          1 => 
          array (
            0 => 'statusID',
            1 => 'start',
            2 => 'end',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      16230 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.reports.leads.source.export',
          ),
          1 => 
          array (
            0 => 'sourceID',
            1 => 'start',
            2 => 'end',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      16283 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.reports.leads.industry.export',
          ),
          1 => 
          array (
            0 => 'sourceID',
            1 => 'start',
            2 => 'end',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      16342 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cms.groups.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16358 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cms.groups.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16374 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cms.groups.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16401 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cms.knowledgebase.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16417 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cms.knowledgebase.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16433 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cms.knowledgebase.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16447 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cms.knowledgebase.show',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16487 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cms.proposal.show',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16501 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cms.proposal.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16517 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cms.proposal.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16533 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cms.proposal.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16564 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cms.page.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16597 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cms.posts.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16627 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cms.post.tags.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16678 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cms.page.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16695 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cms.page.destroy',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16730 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cms.posts.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16746 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cms.posts.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16763 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'posts.comments',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16783 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'posts.attachment',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16819 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cms.post.category.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16835 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cms.post.category.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16852 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cms.post.category.destroy',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16886 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'custom.field.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      16919 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cms.slider.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16936 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cms.slider.destroy',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16973 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'affiliate.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16989 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'affiliate.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17028 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cms.post.tags.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17045 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cms.post.tags.destroy',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17079 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cms.slider.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17114 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'affiliate.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17173 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.business.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17194 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.business.delete.logo',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17227 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.users.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17243 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.users.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17283 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'language.show',
          ),
          1 => 
          array (
            0 => 'id',
            1 => 'section',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      17310 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'language.translate.section',
          ),
          1 => 
          array (
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17336 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'language.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17352 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'language.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17368 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'language.destroy',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17402 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.roles.show',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17416 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.roles.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17432 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.roles.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17448 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.roles.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17497 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.application.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17514 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.applications.billing',
          ),
          1 => 
          array (
            0 => 'applicationID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17572 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.integrations.payments.status',
          ),
          1 => 
          array (
            0 => 'id',
            1 => 'statusID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      17601 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.integrations.payments.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17624 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.integrations.payments.pesapal.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17641 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.integrations.payments.pesapal.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17660 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.integrations.payments.paypal.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17677 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.integrations.payments.paypal.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17699 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.payments.integrations.kepler9',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17716 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.integrations.payments.kepler9.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17734 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.payments.integrations.ipay',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17751 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.payments.integrations.ipay.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17770 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.integrations.payments.mpesa.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17787 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.integrations.payments.mpesa.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17821 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.payments.integrations.mpesa.phonenumber',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17838 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.payments.integrations.mpesa.phonenumber.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17866 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.payments.integrations.mpesa.paybillnumber',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17883 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.payments.integrations.mpesa.paybillnumber.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17910 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.payments.integrations.mpesa.tillnumber',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17927 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.payments.integrations.mpesa.tillnumber.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17970 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.integrations.daraja.register.urls',
          ),
          1 => 
          array (
            0 => 'businessID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      18024 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.integrations.telephony.twilio.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      18041 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.integrations.telephony.twilio.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      18069 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.integrations.telephony.africasTalking.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      18086 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.integrations.telephony.africasTalking.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      18141 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::7oD4ashBAQmFYwwu',
          ),
          1 => 
          array (
            0 => 'code',
            1 => 'businessID',
            2 => 'mailID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      18185 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::0HwDt6d9rCsrCVPp',
          ),
          1 => 
          array (
            0 => 'trackCode',
            1 => 'businessID',
            2 => 'invoiceID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      18232 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::9vzrQn4StBUIBrT9',
          ),
          1 => 
          array (
            0 => 'trackCode',
            1 => 'businessID',
            2 => 'salesID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      18274 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::HF59kESkMSXmKaZ0',
          ),
          1 => 
          array (
            0 => 'trackCode',
            1 => 'businessID',
            2 => 'quoteID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
        1 => 
        array (
          0 => NULL,
          1 => NULL,
          2 => NULL,
          3 => NULL,
          4 => false,
          5 => false,
          6 => 0,
        ),
      ),
    ),
    4 => NULL,
  ),
  'attributes' => 
  array (
    'debugbar.openhandler' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => '_debugbar/open',
      'action' => 
      array (
        'domain' => NULL,
        'middleware' => 
        array (
          0 => 'Barryvdh\\Debugbar\\Middleware\\DebugbarEnabled',
        ),
        'uses' => 'Barryvdh\\Debugbar\\Controllers\\OpenHandlerController@handle',
        'as' => 'debugbar.openhandler',
        'controller' => 'Barryvdh\\Debugbar\\Controllers\\OpenHandlerController@handle',
        'namespace' => 'Barryvdh\\Debugbar\\Controllers',
        'prefix' => '_debugbar',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'debugbar.clockwork' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => '_debugbar/clockwork/{id}',
      'action' => 
      array (
        'domain' => NULL,
        'middleware' => 
        array (
          0 => 'Barryvdh\\Debugbar\\Middleware\\DebugbarEnabled',
        ),
        'uses' => 'Barryvdh\\Debugbar\\Controllers\\OpenHandlerController@clockwork',
        'as' => 'debugbar.clockwork',
        'controller' => 'Barryvdh\\Debugbar\\Controllers\\OpenHandlerController@clockwork',
        'namespace' => 'Barryvdh\\Debugbar\\Controllers',
        'prefix' => '_debugbar',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'debugbar.telescope' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => '_debugbar/telescope/{id}',
      'action' => 
      array (
        'domain' => NULL,
        'middleware' => 
        array (
          0 => 'Barryvdh\\Debugbar\\Middleware\\DebugbarEnabled',
        ),
        'uses' => 'Barryvdh\\Debugbar\\Controllers\\TelescopeController@show',
        'as' => 'debugbar.telescope',
        'controller' => 'Barryvdh\\Debugbar\\Controllers\\TelescopeController@show',
        'namespace' => 'Barryvdh\\Debugbar\\Controllers',
        'prefix' => '_debugbar',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'debugbar.assets.css' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => '_debugbar/assets/stylesheets',
      'action' => 
      array (
        'domain' => NULL,
        'middleware' => 
        array (
          0 => 'Barryvdh\\Debugbar\\Middleware\\DebugbarEnabled',
        ),
        'uses' => 'Barryvdh\\Debugbar\\Controllers\\AssetController@css',
        'as' => 'debugbar.assets.css',
        'controller' => 'Barryvdh\\Debugbar\\Controllers\\AssetController@css',
        'namespace' => 'Barryvdh\\Debugbar\\Controllers',
        'prefix' => '_debugbar',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'debugbar.assets.js' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => '_debugbar/assets/javascript',
      'action' => 
      array (
        'domain' => NULL,
        'middleware' => 
        array (
          0 => 'Barryvdh\\Debugbar\\Middleware\\DebugbarEnabled',
        ),
        'uses' => 'Barryvdh\\Debugbar\\Controllers\\AssetController@js',
        'as' => 'debugbar.assets.js',
        'controller' => 'Barryvdh\\Debugbar\\Controllers\\AssetController@js',
        'namespace' => 'Barryvdh\\Debugbar\\Controllers',
        'prefix' => '_debugbar',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'debugbar.cache.delete' => 
    array (
      'methods' => 
      array (
        0 => 'DELETE',
      ),
      'uri' => '_debugbar/cache/{key}/{tags?}',
      'action' => 
      array (
        'domain' => NULL,
        'middleware' => 
        array (
          0 => 'Barryvdh\\Debugbar\\Middleware\\DebugbarEnabled',
        ),
        'uses' => 'Barryvdh\\Debugbar\\Controllers\\CacheController@delete',
        'as' => 'debugbar.cache.delete',
        'controller' => 'Barryvdh\\Debugbar\\Controllers\\CacheController@delete',
        'namespace' => 'Barryvdh\\Debugbar\\Controllers',
        'prefix' => '_debugbar',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'livewire.message' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'livewire/message/{name}',
      'action' => 
      array (
        'uses' => 'Livewire\\Controllers\\HttpConnectionHandler@__invoke',
        'controller' => 'Livewire\\Controllers\\HttpConnectionHandler',
        'as' => 'livewire.message',
        'middleware' => 
        array (
          0 => 'web',
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'livewire.upload-file' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'livewire/upload-file',
      'action' => 
      array (
        'uses' => 'Livewire\\Controllers\\FileUploadHandler@handle',
        'controller' => 'Livewire\\Controllers\\FileUploadHandler@handle',
        'as' => 'livewire.upload-file',
        'middleware' => 
        array (
          0 => 'web',
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'livewire.preview-file' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'livewire/preview-file/{filename}',
      'action' => 
      array (
        'uses' => 'Livewire\\Controllers\\FilePreviewHandler@handle',
        'controller' => 'Livewire\\Controllers\\FilePreviewHandler@handle',
        'as' => 'livewire.preview-file',
        'middleware' => 
        array (
          0 => 'web',
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'generated::zovbhLSUbZHWEl9y' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'livewire/livewire.js',
      'action' => 
      array (
        'uses' => 'Livewire\\Controllers\\LivewireJavaScriptAssets@source',
        'controller' => 'Livewire\\Controllers\\LivewireJavaScriptAssets@source',
        'as' => 'generated::zovbhLSUbZHWEl9y',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'generated::PsBZe5vyNM09iBju' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'livewire/livewire.js.map',
      'action' => 
      array (
        'uses' => 'Livewire\\Controllers\\LivewireJavaScriptAssets@maps',
        'controller' => 'Livewire\\Controllers\\LivewireJavaScriptAssets@maps',
        'as' => 'generated::PsBZe5vyNM09iBju',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'generated::xnoESdsc8K2ssdij' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'api/user',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'api',
          1 => 'auth:api',
        ),
        'uses' => 'C:32:"Opis\\Closure\\SerializableClosure":288:{@O/RplrA682VJSnd39S62pPPIhcjXVDtQAZBh/zbwuSo=.a:5:{s:3:"use";a:0:{}s:8:"function";s:76:"function (\\Illuminate\\Http\\Request $request) {
   return $request->user();
}";s:5:"scope";s:37:"Illuminate\\Routing\\RouteFileRegistrar";s:4:"this";N;s:4:"self";s:32:"00000000749b347900000000121f0e19";}}',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'api',
        'where' => 
        array (
        ),
        'as' => 'generated::xnoESdsc8K2ssdij',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'daraja.payment.callback' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'api/daraja/payment/callback/{businessID}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'api',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\mpesa\\daraja\\callbackController@payment_confirmation',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\mpesa\\daraja\\callbackController@payment_confirmation',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'api',
        'where' => 
        array (
        ),
        'as' => 'daraja.payment.callback',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'daraja.payment.cancel.callback' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'api/daraja/payment/cancellation/{businessID}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'api',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\mpesa\\daraja\\callbackController@payment_cancel',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\mpesa\\daraja\\callbackController@payment_cancel',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'api',
        'where' => 
        array (
        ),
        'as' => 'daraja.payment.cancel.callback',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'daraja.validation.url' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'api/daraja/validation/{businessID}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'api',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\mpesa\\daraja\\callbackController@url_validation',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\mpesa\\daraja\\callbackController@url_validation',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'api',
        'where' => 
        array (
        ),
        'as' => 'daraja.validation.url',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'callback.kepler9' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'api/callbacks/kepler9',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'api',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\callbacks\\callbacksController@kepler9',
        'as' => 'callback.kepler9',
        'controller' => 'App\\Http\\Controllers\\app\\callbacks\\callbacksController@kepler9',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'api',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'home.page' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => '/',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Auth\\LoginController@showLoginForm',
        'controller' => 'App\\Http\\Controllers\\Auth\\LoginController@showLoginForm',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => NULL,
        'where' => 
        array (
        ),
        'as' => 'home.page',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'login' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'login',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Auth\\LoginController@showLoginForm',
        'controller' => 'App\\Http\\Controllers\\Auth\\LoginController@showLoginForm',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => NULL,
        'where' => 
        array (
        ),
        'as' => 'login',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'generated::P2wBOIxUFNpuoFNl' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'login',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Auth\\LoginController@login',
        'controller' => 'App\\Http\\Controllers\\Auth\\LoginController@login',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => NULL,
        'where' => 
        array (
        ),
        'as' => 'generated::P2wBOIxUFNpuoFNl',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'logout' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'logout',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Auth\\LoginController@logout',
        'controller' => 'App\\Http\\Controllers\\Auth\\LoginController@logout',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => NULL,
        'where' => 
        array (
        ),
        'as' => 'logout',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'register' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'register',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Auth\\RegisterController@showRegistrationForm',
        'controller' => 'App\\Http\\Controllers\\Auth\\RegisterController@showRegistrationForm',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => NULL,
        'where' => 
        array (
        ),
        'as' => 'register',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'generated::xNzn08nospkso2vT' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'register',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Auth\\RegisterController@register',
        'controller' => 'App\\Http\\Controllers\\Auth\\RegisterController@register',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => NULL,
        'where' => 
        array (
        ),
        'as' => 'generated::xNzn08nospkso2vT',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'password.request' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'password/reset',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Auth\\ForgotPasswordController@showLinkRequestForm',
        'controller' => 'App\\Http\\Controllers\\Auth\\ForgotPasswordController@showLinkRequestForm',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => NULL,
        'where' => 
        array (
        ),
        'as' => 'password.request',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'password.email' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'password/email',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Auth\\ForgotPasswordController@sendResetLinkEmail',
        'controller' => 'App\\Http\\Controllers\\Auth\\ForgotPasswordController@sendResetLinkEmail',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => NULL,
        'where' => 
        array (
        ),
        'as' => 'password.email',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'password.reset' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'password/reset/{token}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Auth\\ResetPasswordController@showResetForm',
        'controller' => 'App\\Http\\Controllers\\Auth\\ResetPasswordController@showResetForm',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => NULL,
        'where' => 
        array (
        ),
        'as' => 'password.reset',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'password.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'password/reset',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Auth\\ResetPasswordController@reset',
        'controller' => 'App\\Http\\Controllers\\Auth\\ResetPasswordController@reset',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => NULL,
        'where' => 
        array (
        ),
        'as' => 'password.update',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'password.confirm' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'password/confirm',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Auth\\ConfirmPasswordController@showConfirmForm',
        'controller' => 'App\\Http\\Controllers\\Auth\\ConfirmPasswordController@showConfirmForm',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => NULL,
        'where' => 
        array (
        ),
        'as' => 'password.confirm',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'generated::4cy4y3906anlfu7t' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'password/confirm',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Auth\\ConfirmPasswordController@confirm',
        'controller' => 'App\\Http\\Controllers\\Auth\\ConfirmPasswordController@confirm',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => NULL,
        'where' => 
        array (
        ),
        'as' => 'generated::4cy4y3906anlfu7t',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'verification.notice' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'email/verify',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Auth\\VerificationController@show',
        'controller' => 'App\\Http\\Controllers\\Auth\\VerificationController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => NULL,
        'where' => 
        array (
        ),
        'as' => 'verification.notice',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'verification.verify' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'email/verify/{id}/{hash}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Auth\\VerificationController@verify',
        'controller' => 'App\\Http\\Controllers\\Auth\\VerificationController@verify',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => NULL,
        'where' => 
        array (
        ),
        'as' => 'verification.verify',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'verification.resend' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'email/resend',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Auth\\VerificationController@resend',
        'controller' => 'App\\Http\\Controllers\\Auth\\VerificationController@resend',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => NULL,
        'where' => 
        array (
        ),
        'as' => 'verification.resend',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'generated::5J6K21X7KhKamVwf' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'logout',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Auth\\LoginController@logout',
        'controller' => 'App\\Http\\Controllers\\Auth\\LoginController@logout',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => NULL,
        'where' => 
        array (
        ),
        'as' => 'generated::5J6K21X7KhKamVwf',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'signup' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'signup/account',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Auth\\RegisterController@signup',
        'controller' => 'App\\Http\\Controllers\\Auth\\RegisterController@signup',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => NULL,
        'where' => 
        array (
        ),
        'as' => 'signup',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'signup.page' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'signup',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Auth\\RegisterController@signup_form',
        'controller' => 'App\\Http\\Controllers\\Auth\\RegisterController@signup_form',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => NULL,
        'where' => 
        array (
        ),
        'as' => 'signup.page',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'account.verify' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'verify/account/{code}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Auth\\LoginController@verify_account',
        'controller' => 'App\\Http\\Controllers\\Auth\\LoginController@verify_account',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => NULL,
        'where' => 
        array (
        ),
        'as' => 'account.verify',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'verify.business.email' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'verify/business/email/{code}/{email}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Auth\\LoginController@verify_business_email',
        'controller' => 'App\\Http\\Controllers\\Auth\\LoginController@verify_business_email',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => NULL,
        'where' => 
        array (
        ),
        'as' => 'verify.business.email',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'wingu.dashboard' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'dashboard',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\dashboard\\dashboardController@dashboard',
        'controller' => 'App\\Http\\Controllers\\app\\dashboard\\dashboardController@dashboard',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/dashboard',
        'where' => 
        array (
        ),
        'as' => 'wingu.dashboard',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/dashboard',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:access-finance',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\dashboard\\dashboardController@home',
        'as' => 'finance.index',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\dashboard\\dashboardController@home',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.ajax.product.price' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/ajax/price',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@productPrice',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@productPrice',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
        'as' => 'finance.ajax.product.price',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.contact.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-contact',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@index',
        'as' => 'finance.contact.index',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.contact.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-contact',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@create',
        'as' => 'finance.contact.create',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.contact.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/post-customer',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-contact',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@store',
        'as' => 'finance.contact.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.contact.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-contact',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@edit',
        'as' => 'finance.contact.edit',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.contact.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/customer/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-contact',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@update',
        'as' => 'finance.contact.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.contact.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/{id}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-contact',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@show',
        'as' => 'finance.contact.show',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.contact.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-contact',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@delete',
        'as' => 'finance.contact.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.contactperson.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/delete-contact-person/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-contact',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@delete_contact_person',
        'as' => 'finance.contactperson.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@delete_contact_person',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.contact.express' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/express/customer',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-contact',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@express_list',
        'as' => 'finance.contact.express',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@express_list',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.contact.express.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/express/customer/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-contact',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@express_store',
        'as' => 'finance.contact.express.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@express_store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.customers.comments' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/{id}/comments',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-contact',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\commentsController@index',
        'as' => 'finance.customers.comments',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\commentsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.customers.comments.post' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/customer/comments/post',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-contact',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\commentsController@store',
        'as' => 'finance.customers.comments.post',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\commentsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.customers.comments.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/comments/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-contact',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\commentsController@delete',
        'as' => 'finance.customers.comments.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\commentsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.customers.invoices' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/{id}/invoices',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@show',
        'as' => 'finance.customers.invoices',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.customers.subscriptions' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/{id}/subscriptions',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@show',
        'as' => 'finance.customers.subscriptions',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.customers.quotes' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/{id}/quotes',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@show',
        'as' => 'finance.customers.quotes',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.customers.creditnotes' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/{id}/creditnotes',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@show',
        'as' => 'finance.customers.creditnotes',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.customers.lpos' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/{id}/lpos',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@show',
        'as' => 'finance.customers.lpos',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.customers.projects' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/{id}/projects',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@show',
        'as' => 'finance.customers.projects',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.customers.statement' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/{id}/statement',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\statementController@index',
        'as' => 'finance.customers.statement',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\statementController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.customers.statement.pdf' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/{id}/statement/pdf',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\statementController@pdf',
        'as' => 'finance.customers.statement.pdf',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\statementController@pdf',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.customers.statement.print' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/{id}/statement/print',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\statementController@print',
        'as' => 'finance.customers.statement.print',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\statementController@print',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.customers.statement.mail' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/{id}/statement/mail',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\statementController@mail',
        'as' => 'finance.customers.statement.mail',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\statementController@mail',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.customers.statement.send' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/customer/{id}/statement/send',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\statementController@send',
        'as' => 'finance.customers.statement.send',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\statementController@send',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.customer.mail' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/{id}/mail',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\mailController@index',
        'as' => 'finance.customer.mail',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\mailController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.customer.mail.details' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/{id}/mail/{customerID}/details',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\mailController@details',
        'as' => 'finance.customer.mail.details',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\mailController@details',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.customer.send' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/{id}/send',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\mailController@send',
        'as' => 'finance.customer.send',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\mailController@send',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.customer.mail.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/customer/mail/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\mailController@store',
        'as' => 'finance.customer.mail.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\mailController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.customer.documents' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/{id}/documents',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\documentsController@index',
        'as' => 'finance.customer.documents',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\documentsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.customer.documents.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/customer/documents/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\documentsController@store',
        'as' => 'finance.customer.documents.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\documentsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.customer.documents.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/customer/documents/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\documentsController@update',
        'as' => 'finance.customer.documents.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\documentsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.customer.documents.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/documents/{id}/{leadID}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\documentsController@delete',
        'as' => 'finance.customer.documents.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\documentsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.customer.sms' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/{id}/sms',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\smsController@index',
        'as' => 'finance.customer.sms',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\smsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.customer.sms.send' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/customer/sms/send',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\smsController@send',
        'as' => 'finance.customer.sms.send',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\smsController@send',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.customer.notes' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/{id}/notes',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\notesController@index',
        'as' => 'finance.customer.notes',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\notesController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.customer.notes.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/customer/notes/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\notesController@store',
        'as' => 'finance.customer.notes.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\notesController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.customer.notes.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/customer/{id}/notes/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\notesController@update',
        'as' => 'finance.customer.notes.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\notesController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.customer.notes.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/{id}/notes/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\notesController@delete',
        'as' => 'finance.customer.notes.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\notesController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.customer.calllog' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/{id}/calllogs',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\calllogController@index',
        'as' => 'finance.customer.calllog',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\calllogController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.customer.calllog.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/customer/calllog/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\calllogController@store',
        'as' => 'finance.customer.calllog.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\calllogController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.customer.calllog.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/customer/{id}/calllog/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\calllogController@update',
        'as' => 'finance.customer.calllog.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\calllogController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.customer.calllog.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/{id}/calllog/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\calllogController@delete',
        'as' => 'finance.customer.calllog.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\calllogController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.customer.events' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/{id}/events',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\eventsController@index',
        'as' => 'finance.customer.events',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\eventsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.customer.events.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/customer/events/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\eventsController@store',
        'as' => 'finance.customer.events.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\eventsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.customer.events.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/customer/events/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\eventsController@update',
        'as' => 'finance.customer.events.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\eventsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.customer.events.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/events/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\eventsController@delete',
        'as' => 'finance.customer.events.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\eventsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.contact.import' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/import',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-contact',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\importController@import',
        'as' => 'finance.contact.import',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\importController@import',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.contact.import.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/customer/import/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-contact',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\importController@import_contact',
        'as' => 'finance.contact.import.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\importController@import_contact',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.customer.download.sample.import' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/download/import/sample',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-contact',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\importController@download_import_sample',
        'as' => 'finance.customer.download.sample.import',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\importController@download_import_sample',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.contact.export' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/export/{type}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-contact',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\importController@export',
        'as' => 'finance.contact.export',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\importController@export',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.contact.groups.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/category',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-customercategory',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\groupsController@index',
        'as' => 'finance.contact.groups.index',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\groupsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.contact.groups.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/customer/category/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-customercategory',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\groupsController@store',
        'as' => 'finance.contact.groups.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\groupsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.contact.groups.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/category/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-customercategory',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\groupsController@edit',
        'as' => 'finance.contact.groups.edit',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\groupsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.contact.groups.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/customer/category/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-customercategory',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\groupsController@update',
        'as' => 'finance.contact.groups.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\groupsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.contact.groups.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/category/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-customercategory',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\groupsController@delete',
        'as' => 'finance.contact.groups.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\groupsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.supplier.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/supplier',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-vendors',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\supplier\\supplierController@index',
        'as' => 'finance.supplier.index',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\supplier\\supplierController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.supplier.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/supplier/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-vendors',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\supplier\\supplierController@create',
        'as' => 'finance.supplier.create',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\supplier\\supplierController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.supplier.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/post-supplier',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-vendors',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\supplier\\supplierController@store',
        'as' => 'finance.supplier.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\supplier\\supplierController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.supplier.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/supplier/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-vendors',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\supplier\\supplierController@edit',
        'as' => 'finance.supplier.edit',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\supplier\\supplierController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.supplier.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/supplier/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-vendors',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\supplier\\supplierController@update',
        'as' => 'finance.supplier.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\supplier\\supplierController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.supplier.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/supplier/{id}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-vendors',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\supplier\\supplierController@show',
        'as' => 'finance.supplier.show',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\supplier\\supplierController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.supplier.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/supplier/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-vendors',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\supplier\\supplierController@delete',
        'as' => 'finance.supplier.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\supplier\\supplierController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.supplier.vendor.person' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/delete-supplier-person/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-vendors',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\supplier\\supplierController@delete_contact_person',
        'as' => 'finance.supplier.vendor.person',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\supplier\\supplierController@delete_contact_person',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'vendor.trash.update' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/supplier/{id}/trash',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-vendors',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\supplier\\supplierController@trash',
        'as' => 'vendor.trash.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\supplier\\supplierController@trash',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.supplier.download.sample.import' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/supplier/download/import/sample',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\supplier\\importController@download_import_sample',
        'as' => 'finance.supplier.download.sample.import',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\supplier\\importController@download_import_sample',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.supplier.express.list' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/express/supplier/list',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-vendors',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\supplier\\supplierController@express_list',
        'as' => 'finance.supplier.express.list',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\supplier\\supplierController@express_list',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.supplier.express.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/express/supplier/save',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-vendors',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\supplier\\supplierController@express_save',
        'as' => 'finance.supplier.express.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\supplier\\supplierController@express_save',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.supplier.groups.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/supplier/category',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\supplier\\groupsController@index',
        'as' => 'finance.supplier.groups.index',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\supplier\\groupsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.supplier.groups.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/supplier/category/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\supplier\\groupsController@store',
        'as' => 'finance.supplier.groups.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\supplier\\groupsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.supplier.groups.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/supplier/category/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\supplier\\groupsController@edit',
        'as' => 'finance.supplier.groups.edit',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\supplier\\groupsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.supplier.groups.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/supplier/category/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\supplier\\groupsController@update',
        'as' => 'finance.supplier.groups.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\supplier\\groupsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.supplier.groups.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/supplier/category/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\supplier\\groupsController@delete',
        'as' => 'finance.supplier.groups.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\supplier\\groupsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'supplier.import.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/supplier/import',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-vendors',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\supplier\\importController@index',
        'as' => 'supplier.import.index',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\supplier\\importController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'supplier.import' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/supplier/post/import',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-vendors',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\supplier\\importController@import',
        'as' => 'supplier.import',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\supplier\\importController@import',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'supplier.export' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/supplier/export/{type}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-vendors',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\supplier\\importController@export',
        'as' => 'supplier.export',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\supplier\\importController@export',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.product.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-products',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@index',
        'as' => 'finance.product.index',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.products.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-products',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@create',
        'as' => 'finance.products.create',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.products.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/items/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-products',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@store',
        'as' => 'finance.products.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.products.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-products',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@edit',
        'as' => 'finance.products.edit',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.products.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/items/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-products',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@update',
        'as' => 'finance.products.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.products.details' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/{id}/details',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-products',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@details',
        'as' => 'finance.products.details',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@details',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.products.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/{id}/destroy',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-products',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@destroy',
        'as' => 'finance.products.destroy',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@destroy',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.product.express.list' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/express/items',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-products',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@express_list',
        'as' => 'finance.product.express.list',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@express_list',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.products.express.create' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/express/items/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-products',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@express_store',
        'as' => 'finance.products.express.create',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@express_store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.products.import' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/import',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-products',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\importController@index',
        'as' => 'finance.products.import',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\importController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.products.post.import' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/items/post/import',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-products',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\importController@import',
        'as' => 'finance.products.post.import',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\importController@import',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.products.export' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/export/{type}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-products',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\importController@export',
        'as' => 'finance.products.export',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\importController@export',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.products.sample.download' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/download/import/sample',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-products',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\importController@download_import_sample',
        'as' => 'finance.products.sample.download',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\importController@download_import_sample',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.description' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/{id}/description',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-products',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@description',
        'as' => 'finance.description',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@description',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.description.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/items/{id}/description/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-products',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@description_update',
        'as' => 'finance.description.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@description_update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.price' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/item/price/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-products',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@price',
        'as' => 'finance.price',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@price',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.price.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/price/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-products',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@price_update',
        'as' => 'finance.price.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@price_update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.products.variants.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/item/{id}/variants',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-products',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\variantsController@index',
        'as' => 'finance.products.variants.index',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\variantsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.products.variants.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/item/{id}/variants/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-products',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\variantsController@store',
        'as' => 'finance.products.variants.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\variantsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.products.variants.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/item/{id}/variants/{variantID}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-products',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\variantsController@edit',
        'as' => 'finance.products.variants.edit',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\variantsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.products.variants.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/item/variants/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-products',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\variantsController@update',
        'as' => 'finance.products.variants.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\variantsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.inventory' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/inventory/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-products',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\inventoryController@inventory',
        'as' => 'finance.inventory',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\inventoryController@inventory',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.inventory.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/items/{id}/inventory/{productID}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-products',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\inventoryController@inventroy_update',
        'as' => 'finance.inventory.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\inventoryController@inventroy_update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.inventory.settings.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/items/inventory/settings/{productID}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-products',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\inventoryController@inventory_settings',
        'as' => 'finance.inventory.settings.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\inventoryController@inventory_settings',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.inventory.outlet.link' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/items/inventory/outlet/link',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-products',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\inventoryController@inventory_outlet_link',
        'as' => 'finance.inventory.outlet.link',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\inventoryController@inventory_outlet_link',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.inventory.outlet.link.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/{productID}/inventory/outle/{id}/link/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-products',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\inventoryController@delete_inventroy',
        'as' => 'finance.inventory.outlet.link.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\inventoryController@delete_inventroy',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.product.images' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/images/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-products',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\imagesController@edit',
        'as' => 'finance.product.images',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\imagesController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.product.images.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/items/images/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-products',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\imagesController@update',
        'as' => 'finance.product.images.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\imagesController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.product.images.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/items/images/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-products',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\imagesController@store',
        'as' => 'finance.product.images.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\imagesController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.product.images.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/items/images/{id}/destroy',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-products',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\imagesController@destroy',
        'as' => 'finance.product.images.destroy',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\imagesController@destroy',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.product.settings.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/{id}/settings',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-products',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\settingsController@edit',
        'as' => 'finance.product.settings.edit',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\settingsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.product.settings.update' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/{id}/settings/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-products',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\settingsController@update',
        'as' => 'finance.product.settings.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\settingsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.product.stock.control' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/stock/control',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-stockcontrol',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\stockcontrolController@index',
        'as' => 'finance.product.stock.control',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\stockcontrolController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.product.stock.order' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/order/stock',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-stockcontrol',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\stockcontrolController@order',
        'as' => 'finance.product.stock.order',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\stockcontrolController@order',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.product.stock.order.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/order/stock/{id}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-stockcontrol',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\stockcontrolController@show',
        'as' => 'finance.product.stock.order.show',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\stockcontrolController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.product.stock.order.post' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/post/order/stock',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-stockcontrol',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\stockcontrolController@store',
        'as' => 'finance.product.stock.order.post',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\stockcontrolController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.ajax.product.stock.price' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/lpo/ajax/price',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\stockcontrolController@productPrice',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\stockcontrolController@productPrice',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
        'as' => 'finance.ajax.product.stock.price',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.product.stock.order.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/order/stock/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-stockcontrol',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\stockcontrolController@edit',
        'as' => 'finance.product.stock.order.edit',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\stockcontrolController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.product.stock.order.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/order/stock/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-stockcontrol',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\stockcontrolController@update',
        'as' => 'finance.product.stock.order.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\stockcontrolController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.product.stock.order.pdf' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/order/stock/{id}/pdf',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-stockcontrol',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\stockcontrolController@pdf',
        'as' => 'finance.product.stock.order.pdf',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\stockcontrolController@pdf',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.product.stock.order.print' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/order/stock/{id}/print',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-stockcontrol',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\stockcontrolController@print',
        'as' => 'finance.product.stock.order.print',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\stockcontrolController@print',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.stock.delivered' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/order/stock/{id}/delivered',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-stockcontrol',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\stockcontrolController@delivered',
        'as' => 'finance.stock.delivered',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\stockcontrolController@delivered',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.stock.mail' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/stock/{id}/mail',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-stockcontrol',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\stockcontrolController@mail',
        'as' => 'finance.stock.mail',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\stockcontrolController@mail',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.stock.mail.send' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/stock/mail/send',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-stockcontrol',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\stockcontrolController@send',
        'as' => 'finance.stock.mail.send',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\stockcontrolController@send',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.stock.attach' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/stock/attach/files',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-stockcontrol',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\stockcontrolController@attachment_files',
        'as' => 'finance.stock.attach',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\stockcontrolController@attachment_files',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.product.category' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/category',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-productcategory',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\categoryController@index',
        'as' => 'finance.product.category',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\categoryController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.product.category.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/items/category/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-productcategory',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\categoryController@store',
        'as' => 'finance.product.category.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\categoryController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.product.category.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/category/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-productcategory',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\categoryController@edit',
        'as' => 'finance.product.category.edit',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\categoryController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.product.category.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/product.category/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-productcategory',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\categoryController@update',
        'as' => 'finance.product.category.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\categoryController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.product.category.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/category/{id}/destroy',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-productcategory',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\categoryController@destroy',
        'as' => 'finance.product.category.destroy',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\categoryController@destroy',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.product.brand' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/brand',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-productbrand',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\brandController@index',
        'as' => 'finance.product.brand',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\brandController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.product.brand.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/items/brand/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-productbrand',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\brandController@store',
        'as' => 'finance.product.brand.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\brandController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.product.brand.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/brand/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-productbrand',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\brandController@edit',
        'as' => 'finance.product.brand.edit',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\brandController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.product.brand.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/product.brand/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-productbrand',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\brandController@update',
        'as' => 'finance.product.brand.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\brandController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.product.brand.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/brand/{id}/destroy',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-productbrand',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\brandController@destroy',
        'as' => 'finance.product.brand.destroy',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\brandController@destroy',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.product.tags' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/tags',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-producttags',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\tagsController@index',
        'as' => 'finance.product.tags',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\tagsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.product.tags.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/items/tags/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-producttags',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\tagsController@store',
        'as' => 'finance.product.tags.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\tagsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.product.tags.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/tags/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-producttags',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\tagsController@edit',
        'as' => 'finance.product.tags.edit',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\tagsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.product.tags.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/product.tags/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-producttags',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\tagsController@update',
        'as' => 'finance.product.tags.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\tagsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.product.tags.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/tags/{id}/destroy',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-producttags',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\tagsController@destroy',
        'as' => 'finance.product.tags.destroy',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\tagsController@destroy',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.product.attributes' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/attributes',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-productattributes',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\attributeController@index',
        'as' => 'finance.product.attributes',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\attributeController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.product.attributes.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/items/attributes/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-productattributes',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\attributeController@store',
        'as' => 'finance.product.attributes.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\attributeController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.product.attributes.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/attributes/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-productattributes',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\attributeController@edit',
        'as' => 'finance.product.attributes.edit',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\attributeController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.product.attributes.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/items/attributes/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-productattributes',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\attributeController@update',
        'as' => 'finance.product.attributes.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\attributeController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.product.attributes.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/attributes/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-productattributes',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\attributeController@delete',
        'as' => 'finance.product.attributes.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\attributeController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.product.attributes.value.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/attributes/{id}/values',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-productattributevalues',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\attributeValueController@create',
        'as' => 'finance.product.attributes.value.create',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\attributeValueController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.product.attributes.value.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/items/attributes/values/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-productattributevalues',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\attributeValueController@store',
        'as' => 'finance.product.attributes.value.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\attributeValueController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.product.attributes.value.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/attributes/values/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-productattributevalues',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\attributeValueController@edit',
        'as' => 'finance.product.attributes.value.edit',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\attributeValueController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.product.attributes.value.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/items/attributes/values/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-productattributevalues',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\attributeValueController@update',
        'as' => 'finance.product.attributes.value.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\attributeValueController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.product.attributes.value.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/attributes/values/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-productattributevalues',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\attributeValueController@delete',
        'as' => 'finance.product.attributes.value.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\attributeValueController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.expense.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/expense',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-expense',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseController@index',
        'as' => 'finance.expense.index',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.expense.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/expense/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-expense',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseController@create',
        'as' => 'finance.expense.create',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.expense.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/expense/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-expense',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseController@store',
        'as' => 'finance.expense.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.expense.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/expense/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-expense',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseController@edit',
        'as' => 'finance.expense.edit',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.expense.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/expense/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-expense',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseController@update',
        'as' => 'finance.expense.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.expense.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/expense/{id}/destroy',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-expense',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseController@destroy',
        'as' => 'finance.expense.destroy',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseController@destroy',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.expense.file.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/expence/{id}/file/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseController@file_delete',
        'as' => 'finance.expense.file.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseController@file_delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.expense.file.download' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/expence/{id}/file/download',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseController@download',
        'as' => 'finance.expense.file.download',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseController@download',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.expense.category.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/expense/category',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-expensecategory',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseCategoryController@index',
        'as' => 'finance.expense.category.index',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseCategoryController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.expense.category.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/expense/category/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-expensecategory',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseCategoryController@store',
        'as' => 'finance.expense.category.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseCategoryController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.expense.category.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/expense-category/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-expensecategory',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseCategoryController@edit',
        'as' => 'finance.expense.category.edit',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseCategoryController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.expense.category.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/expense-category/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-expensecategory',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseCategoryController@update',
        'as' => 'finance.expense.category.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseCategoryController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.expense.category.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/expense-category/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-expensecategory',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseCategoryController@destroy',
        'as' => 'finance.expense.category.destroy',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseCategoryController@destroy',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.express.expense.category.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/express/expense/category/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-expensecategory',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseCategoryController@express',
        'as' => 'finance.express.expense.category.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseCategoryController@express',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.express.expense.category.list' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/express/expense/category/list',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-expensecategory',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseCategoryController@list',
        'as' => 'finance.express.expense.category.list',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseCategoryController@list',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.payments.received' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/payments',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-payments',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@index',
        'as' => 'finance.payments.received',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.payments.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/payments/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-payments',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@create',
        'as' => 'finance.payments.create',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.payments.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/payments/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-payments',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@store',
        'as' => 'finance.payments.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.payments.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/payments/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-payments',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@edit',
        'as' => 'finance.payments.edit',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.payments.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/payments/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-payments',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@update',
        'as' => 'finance.payments.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.payments.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/payments/{id}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-payments',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@show',
        'as' => 'finance.payments.show',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.received.files' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/payments/{id}/files',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-payments',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@files',
        'as' => 'finance.received.files',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@files',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.receivedfile.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/paymentsfile/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-payments',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@file_store',
        'as' => 'finance.receivedfile.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@file_store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.retrive.client' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/retrive_client/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-payments',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@retrive_client',
        'as' => 'finance.retrive.client',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@retrive_client',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.payment.file.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/payment/delete/file/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-payments',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@file_delete',
        'as' => 'finance.payment.file.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@file_delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.payment.file.download' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/payment/download/file/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-payments',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@download',
        'as' => 'finance.payment.file.download',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@download',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.payments.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/payments/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-payments',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@delete',
        'as' => 'finance.payments.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.payments.print' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/payments/{id}/print',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-payments',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@print',
        'as' => 'finance.payments.print',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@print',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.payments.pdf' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/payments/{id}/pdf',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-payments',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@pdf',
        'as' => 'finance.payments.pdf',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@pdf',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.payments.mail' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/payments/{id}/mail',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-payments',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@mail',
        'as' => 'finance.payments.mail',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@mail',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.payments.send' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/payments/send',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-payments',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@send',
        'as' => 'finance.payments.send',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@send',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.invoice.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/invoices',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-invoice',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceController@index',
        'as' => 'finance.invoice.index',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.invoice.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/invoice/{id}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-invoice',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceController@show',
        'as' => 'finance.invoice.show',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.invoice.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/invoice/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-invoice',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceController@delete_invoice',
        'as' => 'finance.invoice.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceController@delete_invoice',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.invoice.pdf' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/invoice/{id}/pdf',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-invoice',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceController@pdf',
        'as' => 'finance.invoice.pdf',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceController@pdf',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.invoice.print' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/invoice/{id}/print',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-invoice',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceController@print',
        'as' => 'finance.invoice.print',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceController@print',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.invoice.deliverynote' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/invoice/{id}/deliverynote',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-invoice',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceController@deliverynote',
        'as' => 'finance.invoice.deliverynote',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceController@deliverynote',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.invoice.attachment.status' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/invoice/file/{status}/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-invoice',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceController@update_file_status',
        'as' => 'finance.invoice.attachment.status',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceController@update_file_status',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.invoice.payment' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/invoice/payment',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-invoice',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceController@payment',
        'as' => 'finance.invoice.payment',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceController@payment',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.invoice.payments.stkpush' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/invoice/payment/stk/{businessID}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-invoice',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\mpesa\\daraja\\stkpushController@stkpush',
        'as' => 'finance.invoice.payments.stkpush',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\mpesa\\daraja\\stkpushController@stkpush',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.invoice.product.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/invoice/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-invoice',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\invoice\\productinvoiceController@create',
        'as' => 'finance.invoice.product.create',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\invoice\\productinvoiceController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.invoice.product.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/invoice/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-invoice',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\invoice\\productinvoiceController@store',
        'as' => 'finance.invoice.product.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\invoice\\productinvoiceController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.invoice.product.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/invoice/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-invoice',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\invoice\\productinvoiceController@edit',
        'as' => 'finance.invoice.product.edit',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\invoice\\productinvoiceController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.invoice.product.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/invoice/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-invoice',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\invoice\\productinvoiceController@update',
        'as' => 'finance.invoice.product.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\invoice\\productinvoiceController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.invoice.mail' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/invoice/{id}/mail',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-invoice',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceController@mail',
        'as' => 'finance.invoice.mail',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceController@mail',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.invoice.send.mail' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/invoice/send/mail',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-invoice',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceController@send',
        'as' => 'finance.invoice.send.mail',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceController@send',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.invoice.attachment' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/invoice/invoice/attachment',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-invoice',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceController@attachment',
        'as' => 'finance.invoice.attachment',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceController@attachment',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.invoice.attachment.files' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/invoice/attachment/files',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-invoice',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceController@attachment_files',
        'as' => 'finance.invoice.attachment.files',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceController@attachment_files',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.invoice.attachment.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/invoice/attachment/{ud}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-invoice',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceController@delete_file',
        'as' => 'finance.invoice.attachment.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceController@delete_file',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.invoice.product.test' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/invoice/create/test',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-invoice',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceTestController@create',
        'as' => 'finance.invoice.product.test',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceTestController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.invoice.random.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/invoice/random/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-invoice',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\invoice\\randominvoiceController@create',
        'as' => 'finance.invoice.random.create',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\invoice\\randominvoiceController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.invoice.random.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/invoice/random/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-invoice',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\invoice\\randominvoiceController@store',
        'as' => 'finance.invoice.random.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\invoice\\randominvoiceController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.invoice.random.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/invoice/random/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-invoice',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\invoice\\randominvoiceController@edit',
        'as' => 'finance.invoice.random.edit',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\invoice\\randominvoiceController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.invoice.random.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/invoice/random/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-invoice',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\invoice\\randominvoiceController@update',
        'as' => 'finance.invoice.random.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\invoice\\randominvoiceController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.invoice.recurring.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/invoice/recurring/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-invoice',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\invoice\\recurringController@create',
        'as' => 'finance.invoice.recurring.create',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\invoice\\recurringController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.invoice.recurring.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/invoice/recurring/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-invoice',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\invoice\\recurringController@store',
        'as' => 'finance.invoice.recurring.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\invoice\\recurringController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.invoice.recurring.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/invoice/recurring/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-invoice',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\invoice\\recurringController@edit',
        'as' => 'finance.invoice.recurring.edit',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\invoice\\recurringController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.invoice.recurring.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/invoice/recurring/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-invoice',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\invoice\\recurringController@update',
        'as' => 'finance.invoice.recurring.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\invoice\\recurringController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.salesorders.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/salesorders',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@index',
        'as' => 'finance.salesorders.index',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.salesorders.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/salesorders/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@create',
        'as' => 'finance.salesorders.create',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.salesorders.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/salesorders/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@store',
        'as' => 'finance.salesorders.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.salesorders.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/salesorders/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@edit',
        'as' => 'finance.salesorders.edit',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.salesorders.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/salesorders/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@update',
        'as' => 'finance.salesorders.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.salesorders.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/salesorders/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@delete_salesorder',
        'as' => 'finance.salesorders.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@delete_salesorder',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.salesorders.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/salesorders/{id}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@show',
        'as' => 'finance.salesorders.show',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.salesorders.pdf' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/salesorders/{id}/pdf',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@pdf',
        'as' => 'finance.salesorders.pdf',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@pdf',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.salesorders.print' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/salesorders/{id}/print',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@print',
        'as' => 'finance.salesorders.print',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@print',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.salesorders.attachment' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/salesorders/attachment',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@attachment',
        'as' => 'finance.salesorders.attachment',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@attachment',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.salesorders.attachment.files' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/salesorders/attachment/files',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@attachment_files',
        'as' => 'finance.salesorders.attachment.files',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@attachment_files',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.salesorders.attachment.status' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/salesorders/file/{status}/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@update_file_status',
        'as' => 'finance.salesorders.attachment.status',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@update_file_status',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.salesorders.attachment.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/salesorders/attached/file/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@delete_file',
        'as' => 'finance.salesorders.attachment.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@delete_file',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.salesorders.status.change' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/salesorders/status/{salesorderID}/{status}/change',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@change_status',
        'as' => 'finance.salesorders.status.change',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@change_status',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.salesorders.convert' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/salesorders/{id}/convert',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@convert_to_invoice',
        'as' => 'finance.salesorders.convert',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@convert_to_invoice',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.salesorders.mail' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/salesorders/{id}/mail',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@mail',
        'as' => 'finance.salesorders.mail',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@mail',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.salesorders.mail.send' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/salesorders/mail/send',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@send',
        'as' => 'finance.salesorders.mail.send',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@send',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.settings.salesorders' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/settings/salesorders',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\salesordersController@index',
        'as' => 'finance.settings.salesorders',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\salesordersController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.settings.salesorders.generated.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/settings/salesorders/generated/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\salesordersController@update_generated_number',
        'as' => 'finance.settings.salesorders.generated.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\salesordersController@update_generated_number',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.settings.salesorders.defaults' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/settings/salesorders/{id}/defaults',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\salesordersController@index',
        'as' => 'finance.settings.salesorders.defaults',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\salesordersController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.settings.salesorders.defaults.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/settings/salesorders/defaults/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\salesordersController@update_defaults',
        'as' => 'finance.settings.salesorders.defaults.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\salesordersController@update_defaults',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.settings.salesorders.tabs' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/settings/salesorders/{id}/tabs',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\salesordersController@index',
        'as' => 'finance.settings.salesorders.tabs',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\salesordersController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.settings.salesorders.tabs.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/settings/salesorders/tabs/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\salesordersController@update_tabs',
        'as' => 'finance.settings.salesorders.tabs.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\salesordersController@update_tabs',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.quotes.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/quotes',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-quotes',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@index',
        'as' => 'finance.quotes.index',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.quotes.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/quotes/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-quotes',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@create',
        'as' => 'finance.quotes.create',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.quotes.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/quotes/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-quotes',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@store',
        'as' => 'finance.quotes.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.quotes.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/quotes/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-quotes',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@edit',
        'as' => 'finance.quotes.edit',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.quotes.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/quotes/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-quotes',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@update',
        'as' => 'finance.quotes.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.quotes.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/quotes/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-quotes',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@delete_quotes',
        'as' => 'finance.quotes.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@delete_quotes',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.quotes.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/quotes/{id}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-quotes',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@show',
        'as' => 'finance.quotes.show',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.quotes.pdf' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/quotes/{id}/pdf',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-quotes',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@pdf',
        'as' => 'finance.quotes.pdf',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@pdf',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.quotes.print' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/quotes/{id}/print',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-quotes',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@print',
        'as' => 'finance.quotes.print',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@print',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.quotes.attachment' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/quotes/attachment',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-quotes',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@attachment',
        'as' => 'finance.quotes.attachment',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@attachment',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.quotes.attachment.files' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/quotes/attachment/files',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-quotes',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@attachment_files',
        'as' => 'finance.quotes.attachment.files',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@attachment_files',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.quotes.attachment.status' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/quotes/file/{status}/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-quotes',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@update_file_status',
        'as' => 'finance.quotes.attachment.status',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@update_file_status',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.quotes.attachment.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/quotes/attached/file/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-quotes',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@delete_file',
        'as' => 'finance.quotes.attachment.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@delete_file',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.quotes.status.change' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/quotes/attachment/{quotesID}/{status}/change',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-quotes',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@change_status',
        'as' => 'finance.quotes.status.change',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@change_status',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.quotes.convert' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/quotes/{id}/convert',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-quotes',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@convert_to_invoice',
        'as' => 'finance.quotes.convert',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@convert_to_invoice',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.quotes.mail' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/quotes/{id}/mail',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@mail',
        'as' => 'finance.quotes.mail',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@mail',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.quotes.mail.send' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/quotes/mail/send',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@send',
        'as' => 'finance.quotes.mail.send',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@send',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.lpo.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/purchaseorders',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-lpo',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@index',
        'as' => 'finance.lpo.index',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.lpo.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/purchaseorders/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-lpo',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@create',
        'as' => 'finance.lpo.create',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.lpo.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/purchaseorders/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-lpo',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@store',
        'as' => 'finance.lpo.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.lpo.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/purchaseorders/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-lpo',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@edit',
        'as' => 'finance.lpo.edit',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.lpo.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/purchaseorders/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-lpo',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@update',
        'as' => 'finance.lpo.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.lpo.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/purchaseorders/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-lpo',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@delete_lpo',
        'as' => 'finance.lpo.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@delete_lpo',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.lpo.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/purchaseorders/{id}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-lpo',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@show',
        'as' => 'finance.lpo.show',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.lpo.pdf' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/purchaseorders/{id}/pdf',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-lpo',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@pdf',
        'as' => 'finance.lpo.pdf',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@pdf',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.lpo.print' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/purchaseorders/{id}/print',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-lpo',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@print',
        'as' => 'finance.lpo.print',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@print',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.lpo.attachment' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/purchaseorders/attachment',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-lpo',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@attachment',
        'as' => 'finance.lpo.attachment',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@attachment',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.lpo.attachment.files' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/purchaseorders/attachment/files',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-lpo',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@attachment_files',
        'as' => 'finance.lpo.attachment.files',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@attachment_files',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.lpo.attachment.status' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/purchaseorders/file/{status}/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-lpo',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@update_file_status',
        'as' => 'finance.lpo.attachment.status',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@update_file_status',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.lpo.attachment.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/purchaseorders/attached/file/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-lpo',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@delete_file',
        'as' => 'finance.lpo.attachment.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@delete_file',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.lpo.status.change' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/purchaseorders/attachment/{lpoID}/{status}/change',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-lpo',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@change_status',
        'as' => 'finance.lpo.status.change',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@change_status',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.lpo.convert' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/purchaseorders/{id}/convert',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-lpo',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@convert',
        'as' => 'finance.lpo.convert',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@convert',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.lpo.mail' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/purchaseorders/{id}/mail',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-lpo',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@mail',
        'as' => 'finance.lpo.mail',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@mail',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.lpo.mail.send' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/purchaseorders/mail/send',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-lpo',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@send',
        'as' => 'finance.lpo.mail.send',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@send',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.creditnote.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/creditnote',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-creditnote',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@index',
        'as' => 'finance.creditnote.index',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.creditnote.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/creditnote/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-creditnote',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@create',
        'as' => 'finance.creditnote.create',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.creditnote.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/creditnote/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-creditnote',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@store',
        'as' => 'finance.creditnote.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.creditnote.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/creditnote/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-creditnote',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@edit',
        'as' => 'finance.creditnote.edit',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.creditnote.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/creditnote/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-creditnote',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@update',
        'as' => 'finance.creditnote.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.creditnote.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/creditnote/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-creditnote',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@delete_creditnote',
        'as' => 'finance.creditnote.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@delete_creditnote',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.creditnote.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/creditnote/{id}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-creditnote',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@show',
        'as' => 'finance.creditnote.show',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.creditnote.pdf' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/creditnote/{id}/pdf',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-creditnote',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@pdf',
        'as' => 'finance.creditnote.pdf',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@pdf',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.creditnote.print' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/creditnote/{id}/print',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-creditnote',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@print',
        'as' => 'finance.creditnote.print',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@print',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.creditnote.attachment' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/creditnote/attachment',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-creditnote',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@attachment',
        'as' => 'finance.creditnote.attachment',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@attachment',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.creditnote.attachment.files' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/creditnote/attachment/files',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-creditnote',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@attachment_files',
        'as' => 'finance.creditnote.attachment.files',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@attachment_files',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.creditnote.attachment.status' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/creditnote/file/{status}/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-creditnote',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@update_file_status',
        'as' => 'finance.creditnote.attachment.status',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@update_file_status',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.creditnote.attachment.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/creditnote/attached/file/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-creditnote',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@delete_file',
        'as' => 'finance.creditnote.attachment.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@delete_file',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.creditnote.status.change' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/creditnote/attachment/{creditnoteID}/{status}/change',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-creditnote',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@change_status',
        'as' => 'finance.creditnote.status.change',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@change_status',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.creditnote.convert' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/creditnote/{id}/convert',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-creditnote',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@convert_to_invoice',
        'as' => 'finance.creditnote.convert',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@convert_to_invoice',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.creditnote.apply.credit' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/creditnote/apply/credit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-creditnote',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@apply_credit',
        'as' => 'finance.creditnote.apply.credit',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@apply_credit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.creditnote.mail' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/creditnote/{id}/mail',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-creditnote',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@mail',
        'as' => 'finance.creditnote.mail',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@mail',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.creditnote.mail.send' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/creditnote/mail/send',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-creditnote',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@send',
        'as' => 'finance.creditnote.mail.send',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@send',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.settings.invoice' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/settings/invoice',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-invoice',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\invoiceController@index',
        'as' => 'finance.settings.invoice',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\invoiceController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.settings.invoice.generated.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/settings/invoice/generated/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-invoice',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\invoiceController@update_generated_number',
        'as' => 'finance.settings.invoice.generated.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\invoiceController@update_generated_number',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.settings.invoice.defaults' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/settings/invoice/{id}/defaults',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-invoice',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\invoiceController@index',
        'as' => 'finance.settings.invoice.defaults',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\invoiceController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.settings.invoice.defaults.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/settings/invoice/defaults/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-invoice',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\invoiceController@update_defaults',
        'as' => 'finance.settings.invoice.defaults.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\invoiceController@update_defaults',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.settings.invoice.workflow' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/settings/invoice/{id}/workflow',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-invoice',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\invoiceController@index',
        'as' => 'finance.settings.invoice.workflow',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\invoiceController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.settings.invoice.workflow.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/settings/invoice/workflow/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-invoice',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\invoiceController@update_workflow',
        'as' => 'finance.settings.invoice.workflow.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\invoiceController@update_workflow',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.settings.invoice.payments' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/settings/invoice/{id}/payments',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-invoice',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\invoiceController@index',
        'as' => 'finance.settings.invoice.payments',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\invoiceController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.settings.invoice.payments.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/settings/invoice/payments/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-invoice',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\invoiceController@update_payments',
        'as' => 'finance.settings.invoice.payments.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\invoiceController@update_payments',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.settings.invoice.tabs' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/settings/invoice/{id}/tabs',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-invoice',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\invoiceController@index',
        'as' => 'finance.settings.invoice.tabs',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\invoiceController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.settings.invoice.tabs.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/settings/invoice/tabs/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-invoice',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\invoiceController@update_tabs',
        'as' => 'finance.settings.invoice.tabs.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\invoiceController@update_tabs',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.settings.quote' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/settings/quote',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-quotes',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\quoteController@index',
        'as' => 'finance.settings.quote',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\quoteController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.settings.quote.generated.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/settings/quote/generated/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-quotes',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\quoteController@update_generated_number',
        'as' => 'finance.settings.quote.generated.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\quoteController@update_generated_number',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.settings.quote.defaults' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/settings/quote/{id}/defaults',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-quotes',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\quoteController@index',
        'as' => 'finance.settings.quote.defaults',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\quoteController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.settings.quote.defaults.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/settings/quote/defaults/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-quotes',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\quoteController@update_defaults',
        'as' => 'finance.settings.quote.defaults.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\quoteController@update_defaults',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.settings.quote.tabs' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/settings/quote/{id}/tabs',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-quotes',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\quoteController@index',
        'as' => 'finance.settings.quote.tabs',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\quoteController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.settings.quote.tabs.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/settings/quote/tabs/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-quotes',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\quoteController@update_tabs',
        'as' => 'finance.settings.quote.tabs.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\quoteController@update_tabs',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.settings.creditnote' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/settings/creditnote',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-creditnote',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\creditnoteController@index',
        'as' => 'finance.settings.creditnote',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\creditnoteController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.settings.creditnote.generated.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/settings/creditnote/generated/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-creditnote',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\creditnoteController@update_generated_number',
        'as' => 'finance.settings.creditnote.generated.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\creditnoteController@update_generated_number',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.settings.creditnote.defaults' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/settings/creditnote/{id}/defaults',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-creditnote',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\creditnoteController@index',
        'as' => 'finance.settings.creditnote.defaults',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\creditnoteController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.settings.creditnote.defaults.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/settings/creditnote/defaults/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-creditnote',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\creditnoteController@update_defaults',
        'as' => 'finance.settings.creditnote.defaults.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\creditnoteController@update_defaults',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.settings.creditnote.tabs' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/settings/creditnote/{id}/tabs',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-creditnote',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\creditnoteController@index',
        'as' => 'finance.settings.creditnote.tabs',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\creditnoteController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.settings.creditnote.tabs.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/settings/creditnote/tabs/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-creditnote',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\creditnoteController@update_tabs',
        'as' => 'finance.settings.creditnote.tabs.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\creditnoteController@update_tabs',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.settings.taxes' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/settings/taxes',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-taxes',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\taxesController@index',
        'as' => 'finance.settings.taxes',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\taxesController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.settings.taxes.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/settings/taxes/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-taxes',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\taxesController@store',
        'as' => 'finance.settings.taxes.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\taxesController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.settings.taxes.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/settings/taxes/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-taxes',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\taxesController@edit',
        'as' => 'finance.settings.taxes.edit',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\taxesController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.settings.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/settings/taxes/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-taxes',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\taxesController@update',
        'as' => 'finance.settings.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\taxesController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.settings.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/settings/taxes/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-taxes',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\taxesController@delete',
        'as' => 'finance.settings.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\taxesController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.settings.taxes.express' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/taxes/express',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-taxes',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\taxesController@express_list',
        'as' => 'finance.settings.taxes.express',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\taxesController@express_list',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.settings.taxes.express.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/taxes/express/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-taxes',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\taxesController@store_express',
        'as' => 'finance.settings.taxes.express.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\taxesController@store_express',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.settings.lpo' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/settings/lpo',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-lpo',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\lpoController@index',
        'as' => 'finance.settings.lpo',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\lpoController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.settings.lpo.generated.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/settings/lpo/generated/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-lpo',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\lpoController@update_generated_number',
        'as' => 'finance.settings.lpo.generated.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\lpoController@update_generated_number',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.settings.lpo.defaults' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/settings/lpo/{id}/defaults',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-lpo',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\lpoController@index',
        'as' => 'finance.settings.lpo.defaults',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\lpoController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.settings.lpo.defaults.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/settings/lpo/defaults/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-lpo',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\lpoController@update_defaults',
        'as' => 'finance.settings.lpo.defaults.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\lpoController@update_defaults',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.settings.lpo.tabs' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/settings/lpo/{id}/tabs',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-lpo',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\lpoController@index',
        'as' => 'finance.settings.lpo.tabs',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\lpoController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.settings.lpo.tabs.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/settings/lpo/tabs/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-lpo',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\lpoController@update_tabs',
        'as' => 'finance.settings.lpo.tabs.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\lpoController@update_tabs',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.account' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/account',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-bankaccount',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\account\\accountController@index',
        'as' => 'finance.account',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\account\\accountController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.account.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/account/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-bankaccount',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\account\\accountController@create',
        'as' => 'finance.account.create',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\account\\accountController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.account.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/account/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-bankaccount',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\account\\accountController@store',
        'as' => 'finance.account.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\account\\accountController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.account.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/account/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-bankaccount',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\account\\accountController@edit',
        'as' => 'finance.account.edit',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\account\\accountController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.account.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/account/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-bankaccount',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\account\\accountController@update',
        'as' => 'finance.account.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\account\\accountController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.account.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/account/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-bankaccount',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\account\\accountController@delete',
        'as' => 'finance.account.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\account\\accountController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.account.express' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/express/account/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-bankaccount',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\account\\accountController@express',
        'as' => 'finance.account.express',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\account\\accountController@express',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.bank.account.access' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/access/bank/account',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\account\\accountController@list',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\account\\accountController@list',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
        'as' => 'finance.bank.account.access',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.income.category' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/income/category',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-incomecategory',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\income\\incomeController@index',
        'as' => 'finance.income.category',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\income\\incomeController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.income.category.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/income/category/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-incomecategory',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\income\\incomeController@create',
        'as' => 'finance.income.category.create',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\income\\incomeController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.income.category.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/income/category/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-incomecategory',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\income\\incomeController@store',
        'as' => 'finance.income.category.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\income\\incomeController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.income.category.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/income/category/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-incomecategory',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\income\\incomeController@edit',
        'as' => 'finance.income.category.edit',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\income\\incomeController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.income.category.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/income/category/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-incomecategory',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\income\\incomeController@update',
        'as' => 'finance.income.category.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\income\\incomeController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.income.category.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/income/category/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-incomecategory',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\income\\incomeController@delete',
        'as' => 'finance.income.category.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\income\\incomeController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'generated::Gb6EQ75OLdhwGOgh' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/express/income/category/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-incomecategory',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\income\\incomeController@express',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\income\\incomeController@express',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
        'as' => 'generated::Gb6EQ75OLdhwGOgh',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.income.express.category' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/express/income/category/get',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-incomecategory',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\income\\incomeController@get_express',
        'as' => 'finance.income.express.category',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\income\\incomeController@get_express',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.payment.mode' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/settings/payment/modes',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-paymentmode',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentModeController@index',
        'as' => 'finance.payment.mode',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentModeController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.payment.mode.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/settings/payment/modes/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-paymentmode',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentModeController@store',
        'as' => 'finance.payment.mode.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentModeController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.payment.mode.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/settings/payment/modes/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-paymentmode',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentModeController@update',
        'as' => 'finance.payment.mode.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentModeController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.payment.mode.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/settings/payment/modes/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-paymentmode',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentModeController@delete',
        'as' => 'finance.payment.mode.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentModeController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.payment.mode.express' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/express/payment/list',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-paymentmode',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentModeController@express_list',
        'as' => 'finance.payment.mode.express',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentModeController@express_list',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.payment.mode.express.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/express/payment/modes/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-paymentmode',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentModeController@express_store',
        'as' => 'finance.payment.mode.express.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentModeController@express_store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.report' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/reports',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-financereport',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\reportsController@dashboard',
        'as' => 'finance.report',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\reportsController@dashboard',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.report.account.statement' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/account-statement',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-financereport',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\accountStatementController@index',
        'as' => 'finance.report.account.statement',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\accountStatementController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.report.account.statement.process' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/report/account-statement/process',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-financereport',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\accountStatementController@process',
        'as' => 'finance.report.account.statement.process',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\accountStatementController@process',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.report.account.statement.results' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/account-statement/{clientID}/{from}/{to}/{transaction}/results',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-financereport',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\accountStatementController@results',
        'as' => 'finance.report.account.statement.results',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\accountStatementController@results',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.report.account.statement.export.excel' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/account-statement/{clientID}/{from}/{to}/{transaction}/export/excel',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-financereport',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\accountStatementController@excel',
        'as' => 'finance.report.account.statement.export.excel',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\accountStatementController@excel',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.report.account.statement.export.pdf' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/account-statement/{clientID}/{from}/{to}/{transaction}/export/pdf',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-financereport',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\accountStatementController@pdf',
        'as' => 'finance.report.account.statement.export.pdf',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\accountStatementController@pdf',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.report.account.statement.export.print' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/account-statement/{clientID}/{from}/{to}/{transaction}/export/print',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-financereport',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\accountStatementController@print',
        'as' => 'finance.report.account.statement.export.print',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\accountStatementController@print',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.report.balancesheet' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/balancesheet',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-financereport',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\balancesheetController@index',
        'as' => 'finance.report.balancesheet',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\balancesheetController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.report.sales.customer' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/sales/customer',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\sales\\customerController@salesbycustomer',
        'as' => 'finance.report.sales.customer',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\sales\\customerController@salesbycustomer',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.report.sales.customer.print' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/sales/customer/print/{to}/{from}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\sales\\customerController@print',
        'as' => 'finance.report.sales.customer.print',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\sales\\customerController@print',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.report.sales.customer.pdf' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/sales/customer/pdf/{to}/{from}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\sales\\customerController@pdf',
        'as' => 'finance.report.sales.customer.pdf',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\sales\\customerController@pdf',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.report.sales.item' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/sales/item',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\sales\\itemController@salesbyitem',
        'as' => 'finance.report.sales.item',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\sales\\itemController@salesbyitem',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.report.sales.item.print' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/sales/item/print/{to}/{from}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\sales\\itemController@print',
        'as' => 'finance.report.sales.item.print',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\sales\\itemController@print',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.report.sales.item.pdf' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/sales/item/pdf/{to}/{from}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\sales\\itemController@pdf',
        'as' => 'finance.report.sales.item.pdf',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\sales\\itemController@pdf',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.report.sales.salesperson' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/sales/salesperson',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\sales\\salespersonController@salesbysalesperson',
        'as' => 'finance.report.sales.salesperson',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\sales\\salespersonController@salesbysalesperson',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.report.sales.salesperson.print' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/sales/salesperson/print/{to}/{from}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\sales\\salespersonController@print',
        'as' => 'finance.report.sales.salesperson.print',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\sales\\salespersonController@print',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.report.sales.salesperson.pdf' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/sales/salesperson/pdf/{to}/{from}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\sales\\salespersonController@pdf',
        'as' => 'finance.report.sales.salesperson.pdf',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\sales\\salespersonController@pdf',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.report.receivables.balance' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/receivables/customerbalances',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\receivables\\customerbalancesController@balance',
        'as' => 'finance.report.receivables.balance',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\receivables\\customerbalancesController@balance',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.report.receivables.balance.print' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/sales/receivables/print/{to}/{from}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\receivables\\customerbalancesController@print',
        'as' => 'finance.report.receivables.balance.print',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\receivables\\customerbalancesController@print',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.report.receivables.balance.pdf' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/sales/receivables/pdf/{to}/{from}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\receivables\\customerbalancesController@pdf',
        'as' => 'finance.report.receivables.balance.pdf',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\receivables\\customerbalancesController@pdf',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.report.receivables.aging' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/receivables/aging',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\receivables\\agingController@report',
        'as' => 'finance.report.receivables.aging',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\receivables\\agingController@report',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.report.receivables.aging.extract' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/receivables/aging/extract/{format}/{to}/{from}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\receivables\\agingController@extract',
        'as' => 'finance.report.receivables.aging.extract',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\receivables\\agingController@extract',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.report.profitandloss' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/profilandloss',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\profitandlossController@details',
        'as' => 'finance.report.profitandloss',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\profitandlossController@details',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.report.profitandloss.pdf' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/profilandloss/pdf/{to}/{from}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\profitandlossController@pdf',
        'as' => 'finance.report.profitandloss.pdf',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\profitandlossController@pdf',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.report.expensesummary' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/expensesummary',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\expensesummaryController@details',
        'as' => 'finance.report.expensesummary',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\expensesummaryController@details',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.report.expensesummary.extract' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/expensesummary/extract/{to}/{from}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\expensesummaryController@extract',
        'as' => 'finance.report.expensesummary.extract',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\expensesummaryController@extract',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.report.incomesummary' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/incomesummary',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\incomesummaryController@report',
        'as' => 'finance.report.incomesummary',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\incomesummaryController@report',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.report.incomesummary.extract' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/incomesummary/{to}/{from}/extract',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\incomesummaryController@extract',
        'as' => 'finance.report.incomesummary.extract',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\incomesummaryController@extract',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.report.inventory.summary' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/inventory/summary',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\inventory\\summaryController@report',
        'as' => 'finance.report.inventory.summary',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\inventory\\summaryController@report',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.report.inventory.summary.print' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/inventory/summary/{to}/{from}/print',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\inventory\\summaryController@print',
        'as' => 'finance.report.inventory.summary.print',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\inventory\\summaryController@print',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.report.inventory.summary.pdf' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/inventory/summary/{to}/{from}/pdf',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\inventory\\summaryController@pdf',
        'as' => 'finance.report.inventory.summary.pdf',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\inventory\\summaryController@pdf',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.report.inventory.valuation.summary' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/inventory/valuation/summary',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\inventory\\valuationController@report',
        'as' => 'finance.report.inventory.valuation.summary',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\inventory\\valuationController@report',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.report.inventory.valuation.summary.print' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/inventory/valuation/summary/{to}/{from}/print',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\inventory\\valuationController@print',
        'as' => 'finance.report.inventory.valuation.summary.print',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\inventory\\valuationController@print',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.report.inventory.valuation.summary.pdf' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/inventory/valuation/summary/{to}/{from}/pdf',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\inventory\\valuationController@pdf',
        'as' => 'finance.report.inventory.valuation.summary.pdf',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\inventory\\valuationController@pdf',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.report.inventory.sale.summary' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/inventory/product-sale/summary',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\inventory\\productsaleController@report',
        'as' => 'finance.report.inventory.sale.summary',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\inventory\\productsaleController@report',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.report.inventory.sale.summary.print' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/inventory/product-sale/summary/{to}/{from}/print',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\inventory\\productsaleController@print',
        'as' => 'finance.report.inventory.sale.summary.print',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\inventory\\productsaleController@print',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'finance.report.inventory.sale.summary.pdf' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/inventory/product-sale/summary/{to}/{from}/pdf',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\inventory\\productsaleController@pdf',
        'as' => 'finance.report.inventory.sale.summary.pdf',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\inventory\\productsaleController@pdf',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.dashboard' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:access-humanresource',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\dashboard\\dashboardController@dashboard',
        'as' => 'hrm.dashboard',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\dashboard\\dashboardController@dashboard',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.employee.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/employee/list',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-employee',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\employeeController@index',
        'as' => 'hrm.employee.index',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\employeeController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.employee.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/employee/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-employee',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\employeeController@create',
        'as' => 'hrm.employee.create',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\employeeController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.employee.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/employee/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-employee',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\employeeController@store',
        'as' => 'hrm.employee.store',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\employeeController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.employee.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/employee/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-employee',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\employeeController@update',
        'as' => 'hrm.employee.update',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\employeeController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.employee.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/employee/{id}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-employee',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\employeeController@show',
        'as' => 'hrm.employee.show',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\employeeController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.employee.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/employee/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-employee',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\employeeController@edit',
        'as' => 'hrm.employee.edit',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\employeeController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.personalinfo.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/personal-info/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-employeepersonalinformation',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\personalinfoController@edit',
        'as' => 'hrm.personalinfo.edit',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\personalinfoController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.personalinfo.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/personal-info/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-employeepersonalinformation',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\personalinfoController@update',
        'as' => 'hrm.personalinfo.update',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\personalinfoController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.employee.company.structure.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/employee/company-structure/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-employeecompanystructure',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\companyStructureController@edit',
        'as' => 'hrm.employee.company.structure.edit',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\companyStructureController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.employee.company.structure.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/employee/company/structure/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-employeecompanystructure',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\companyStructureController@update',
        'as' => 'hrm.employee.company.structure.update',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\companyStructureController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.employee.salary.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/salary/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-employeesalary',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\salaryController@edit',
        'as' => 'hrm.employee.salary.edit',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\salaryController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.employee.salary.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/salary/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-employeesalary',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\salaryController@update',
        'as' => 'hrm.employee.salary.update',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\salaryController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.employeebankinformation.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/bank-information/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-employeebankinformation',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\bankinformationController@edit',
        'as' => 'hrm.employeebankinformation.edit',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\bankinformationController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.employeebankinformation.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/bank-information/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-employeebankinformation',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\bankinformationController@update',
        'as' => 'hrm.employeebankinformation.update',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\bankinformationController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.employeeacademicinformation.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/academic-information/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-employeeacademicinformation',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\academicinformationController@edit',
        'as' => 'hrm.employeeacademicinformation.edit',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\academicinformationController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.employeeacademicinformation.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/academic-information/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-employeeacademicinformation',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\academicinformationController@update',
        'as' => 'hrm.employeeacademicinformation.update',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\academicinformationController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.institutioninformation.post' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/institution-information-post',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-employeeacademicinformation',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\academicinformationController@post_institution',
        'as' => 'hrm.institutioninformation.post',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\academicinformationController@post_institution',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.institution.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/delete-institution/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-employeeacademicinformation',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\academicinformationController@delete_institution',
        'as' => 'hrm.institution.delete',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\academicinformationController@delete_institution',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.institution.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/institution-edit/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-employeeacademicinformation',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\academicinformationController@edit_institution',
        'as' => 'hrm.institution.edit',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\academicinformationController@edit_institution',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.experience.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/experience/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-employeeworkexperience',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\workexperienceController@edit',
        'as' => 'hrm.experience.edit',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\workexperienceController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.experience.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/experience/post',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:store-employeeworkexperience',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\workexperienceController@store',
        'as' => 'hrm.experience.store',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\workexperienceController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.experience.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/experience/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-employeeworkexperience',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\workexperienceController@delete',
        'as' => 'hrm.experience.delete',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\workexperienceController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.allocation.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/allocation/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-employeealocations',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\allocationController@edit',
        'as' => 'hrm.allocation.edit',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\allocationController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.allocation.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/allocation/post',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-employeealocations',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\allocationController@store',
        'as' => 'hrm.allocation.store',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\allocationController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.allocation.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/delete/{id}/allocation',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-employeealocations',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\allocationController@delete',
        'as' => 'hrm.allocation.delete',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\allocationController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.famillyinfo.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/family-information/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-employeefamilyinformation',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\familyController@edit',
        'as' => 'hrm.famillyinfo.edit',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\familyController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.famillyinfo.post' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/family-information-post',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-employeefamilyinformation',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\familyController@post_family',
        'as' => 'hrm.famillyinfo.post',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\familyController@post_family',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.famillyinfo.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/delete-family-information/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-employeefamilyinformation',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\familyController@delete_family_information',
        'as' => 'hrm.famillyinfo.delete',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\familyController@delete_family_information',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.employeefile.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/files/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-employeefiles',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\filesController@edit',
        'as' => 'hrm.employeefile.edit',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\filesController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.employeefile.post' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/file-post',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\filesController@post_file',
        'as' => 'hrm.employeefile.post',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\filesController@post_file',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.employeefile.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/delete-file/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-employeefiles',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\filesController@delete_file',
        'as' => 'hrm.employeefile.delete',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\filesController@delete_file',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.employeerole.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/roles/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-employeeroles',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\employeerolesController@edit',
        'as' => 'hrm.employeerole.edit',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\employeerolesController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.employee.deductions' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/employee/deductions/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-employeedeductions',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\deductionsController@index',
        'as' => 'hrm.employee.deductions',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\deductionsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.employee.deductions.allocate' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/employee/deductions/allocate',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-employeedeductions',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\deductionsController@allocate',
        'as' => 'hrm.employee.deductions.allocate',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\deductionsController@allocate',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.employee.deductions.delete.allocate' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/employee/deductions/delete/{id}/allocate',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-employeedeductions',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\deductionsController@delete',
        'as' => 'hrm.employee.deductions.delete.allocate',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\deductionsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.leave.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/leave',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-leave',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveController@index',
        'as' => 'hrm.leave.index',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.leave.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/leave/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-leave',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveController@create',
        'as' => 'hrm.leave.create',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.leave.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/leave/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-leave',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveController@store',
        'as' => 'hrm.leave.store',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.leave.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/leave/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-leave',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveController@edit',
        'as' => 'hrm.leave.edit',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.leave.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/leave/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-leave',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveController@update',
        'as' => 'hrm.leave.update',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.leave.balance' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/leave/balance',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-leave',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveController@balance',
        'as' => 'hrm.leave.balance',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveController@balance',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.leave.calendar' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/leave/calendar',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-leave',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveController@calendar',
        'as' => 'hrm.leave.calendar',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveController@calendar',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.leave.approve' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/leave/{id}/approve',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-leave',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveController@approve',
        'as' => 'hrm.leave.approve',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveController@approve',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.leave.denay' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/leave/{id}/denay',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-leave',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveController@denay',
        'as' => 'hrm.leave.denay',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveController@denay',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.leave.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/leave/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-leave',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveController@delete',
        'as' => 'hrm.leave.delete',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.leave.apply' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/leave/apply',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveapplyController@application',
        'as' => 'hrm.leave.apply',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveapplyController@application',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.leave.apply.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/leave/apply/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveapplyController@store',
        'as' => 'hrm.leave.apply.store',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveapplyController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.leave.apply.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/leave/apply/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveapplyController@edit',
        'as' => 'hrm.leave.apply.edit',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveapplyController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.leave.apply.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/leave/apply/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveapplyController@update',
        'as' => 'hrm.leave.apply.update',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveapplyController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.leave.apply.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/leave/my-leave-list',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveapplyController@my_list',
        'as' => 'hrm.leave.apply.index',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveapplyController@my_list',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.leave.settings' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/leave/settings',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-leavesettings',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\leave\\settingsController@index',
        'as' => 'hrm.leave.settings',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\leave\\settingsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.leave.settings.holiday' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/leave/holiday',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-leavesettings',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\leave\\settingsController@index',
        'as' => 'hrm.leave.settings.holiday',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\leave\\settingsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.leave.settings.holiday.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/leave/holiday/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-leavesettings',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\leave\\settingsController@store_holiday',
        'as' => 'hrm.leave.settings.holiday.store',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\leave\\settingsController@store_holiday',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.leave.settings.workdays' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/leave/workdays',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-leavesettings',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\leave\\settingsController@index',
        'as' => 'hrm.leave.settings.workdays',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\leave\\settingsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.leave.settings.type' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/leave/type',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-leavetype',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\leave\\settingsController@index',
        'as' => 'hrm.leave.settings.type',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\leave\\settingsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.leave.settings.type.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/leave/type/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-leavetype',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\leave\\settingsController@store_type',
        'as' => 'hrm.leave.settings.type.store',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\leave\\settingsController@store_type',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.leave.settings.type.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/leave/type/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-leavetype',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\leave\\settingsController@delete',
        'as' => 'hrm.leave.settings.type.delete',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\leave\\settingsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.payroll.people' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/payroll/people',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-payroll',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\peopleController@index',
        'as' => 'hrm.payroll.people',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\peopleController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.payroll.people.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/payroll/{id}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-payroll',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\peopleController@show',
        'as' => 'hrm.payroll.people.show',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\peopleController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.payroll.people.show.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/payroll/{id}/show/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-payroll',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\peopleController@update',
        'as' => 'hrm.payroll.people.show.update',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\peopleController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.payroll.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/payrolls',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-payroll',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\runPayrollController@index',
        'as' => 'hrm.payroll.index',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\runPayrollController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.payroll.details' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/payroll/{id}/details',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-payroll',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\runPayrollController@payroll_details',
        'as' => 'hrm.payroll.details',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\runPayrollController@payroll_details',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.payroll.payslip' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/payroll/{employeeID}/{id}/payslip',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-payroll',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\runPayrollController@payslip',
        'as' => 'hrm.payroll.payslip',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\runPayrollController@payslip',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.payroll.payslip.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/payroll/{employeeID}/{id}/payslip/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-payroll',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\runPayrollController@payslip_delete',
        'as' => 'hrm.payroll.payslip.delete',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\runPayrollController@payslip_delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.payroll.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/payroll/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-payroll',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\runPayrollController@delete_payroll',
        'as' => 'hrm.payroll.delete',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\runPayrollController@delete_payroll',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.payroll.mpesa.payment' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/payroll/mpesa/payment',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-payroll',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\mpesaPaymentController@process_payment',
        'as' => 'hrm.payroll.mpesa.payment',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\mpesaPaymentController@process_payment',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.payroll.process' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/payroll/process',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-payroll',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\runPayrollController@create',
        'as' => 'hrm.payroll.process',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\runPayrollController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.payroll.process.post' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/payroll/process/post',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-payroll',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\runPayrollController@run',
        'as' => 'hrm.payroll.process.post',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\runPayrollController@run',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.payroll.process.review' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/payroll/process/{payroll_date}/{type}/{branch}/review',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-payroll',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\runPayrollController@review',
        'as' => 'hrm.payroll.process.review',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\runPayrollController@review',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.payroll.process.run' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/payroll/process/run',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-payroll',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\runPayrollController@process',
        'as' => 'hrm.payroll.process.run',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\runPayrollController@process',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.payroll.settings.payday' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/payroll/settings',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-payrollsettings',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\settingsController@payday',
        'as' => 'hrm.payroll.settings.payday',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\settingsController@payday',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.payroll.settings.payday.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/payroll/settings/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-payrollsettings',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\settingsController@update',
        'as' => 'hrm.payroll.settings.payday.update',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\settingsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.payroll.settings.approval' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/payroll/settings/approval',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-payrollsettings',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\settingsController@approval',
        'as' => 'hrm.payroll.settings.approval',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\settingsController@approval',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.payroll.settings.approval.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/payroll/settings/approval/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-payrollsettings',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\settingsController@approval_update',
        'as' => 'hrm.payroll.settings.approval.update',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\settingsController@approval_update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.payroll.settings.deduction' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/payroll/settings/deduction',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-payrolldeductions',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\deductionsController@index',
        'as' => 'hrm.payroll.settings.deduction',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\deductionsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.payroll.settings.deduction.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/payroll/settings/deduction/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-payrolldeductions',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\deductionsController@store',
        'as' => 'hrm.payroll.settings.deduction.store',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\deductionsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.payroll.settings.deduction.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/payroll/settings/deduction/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-payrolldeductions',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\deductionsController@edit',
        'as' => 'hrm.payroll.settings.deduction.edit',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\deductionsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.payroll.settings.deduction.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/payroll/settings/deduction/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-payrolldeductions',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\deductionsController@update',
        'as' => 'hrm.payroll.settings.deduction.update',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\deductionsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.payroll.settings.deduction.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/payroll/settings/deduction/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-payrolldeductions',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\deductionsController@delete',
        'as' => 'hrm.payroll.settings.deduction.delete',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\deductionsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.payroll.settings.benefits' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/payroll/settings/benefits',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-payrollbenefits',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\benefitsController@index',
        'as' => 'hrm.payroll.settings.benefits',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\benefitsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.payroll.settings.benefits.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/payroll/settings/benefits/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-payrollbenefits',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\benefitsController@store',
        'as' => 'hrm.payroll.settings.benefits.store',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\benefitsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.payroll.settings.benefits.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/payroll/settings/benefits/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-payrollbenefits',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\benefitsController@edit',
        'as' => 'hrm.payroll.settings.benefits.edit',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\benefitsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.payroll.settings.benefits.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/payroll/settings/benefits/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-payrollbenefits',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\benefitsController@update',
        'as' => 'hrm.payroll.settings.benefits.update',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\benefitsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.payroll.settings.benefits.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/payroll/settings/benefits/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-payrollbenefits',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\benefitsController@delete',
        'as' => 'hrm.payroll.settings.benefits.delete',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\benefitsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.calendar' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/calendar',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-hrcalendar',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\calendar\\calendarController@index',
        'as' => 'hrm.calendar',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\calendar\\calendarController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.positions' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/organization/positions',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\organization\\positionsController@index',
        'as' => 'hrm.positions',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\organization\\positionsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.positions.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/organization/positions/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\organization\\positionsController@store',
        'as' => 'hrm.positions.store',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\organization\\positionsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.positions.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/organization/positions/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\organization\\positionsController@edit',
        'as' => 'hrm.positions.edit',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\organization\\positionsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.positions.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/organization/positions/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\organization\\positionsController@update',
        'as' => 'hrm.positions.update',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\organization\\positionsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.positions.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/organization/positions/{id}/destroy',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\organization\\positionsController@destroy',
        'as' => 'hrm.positions.destroy',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\organization\\positionsController@destroy',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.departments' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/organization/departments',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-departments',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\organization\\departmentsController@index',
        'as' => 'hrm.departments',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\organization\\departmentsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.departments.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/organization/departments/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-departments',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\organization\\departmentsController@create',
        'as' => 'hrm.departments.create',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\organization\\departmentsController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.departments.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/organization/departments/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-departments',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\organization\\departmentsController@store',
        'as' => 'hrm.departments.store',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\organization\\departmentsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.departments.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/organization/departments/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-departments',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\organization\\departmentsController@edit',
        'as' => 'hrm.departments.edit',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\organization\\departmentsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.departments.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/organization/departments/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-departments',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\organization\\departmentsController@update',
        'as' => 'hrm.departments.update',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\organization\\departmentsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.departments.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/organization/departments/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-departments',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\organization\\departmentsController@delete',
        'as' => 'hrm.departments.delete',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\organization\\departmentsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.branches' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/organization/branches',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-branches',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\organization\\branchesController@index',
        'as' => 'hrm.branches',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\organization\\branchesController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.branches.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/organization/branches/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-branches',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\organization\\branchesController@create',
        'as' => 'hrm.branches.create',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\organization\\branchesController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.branches.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/organization/branches/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-branches',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\organization\\branchesController@store',
        'as' => 'hrm.branches.store',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\organization\\branchesController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.branches.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/organization/branches/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-branches',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\organization\\branchesController@edit',
        'as' => 'hrm.branches.edit',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\organization\\branchesController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.branches.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/organization/branches/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-branches',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\organization\\branchesController@update',
        'as' => 'hrm.branches.update',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\organization\\branchesController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.branches.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/organization/branches/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-branches',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\organization\\branchesController@delete',
        'as' => 'hrm.branches.delete',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\organization\\branchesController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.announcements.list' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/announcements',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-hrannouncements',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\Announcements\\AnnouncementsController@announcements_list',
        'as' => 'hrm.announcements.list',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\Announcements\\AnnouncementsController@announcements_list',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.announcements.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/announcements/{id}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-hrannouncements',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\Announcements\\AnnouncementsController@show',
        'as' => 'hrm.announcements.show',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\Announcements\\AnnouncementsController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.exitdetails.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/exit-details',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-hrexitdetails',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\ExitDetails\\ExitdetailsController@index',
        'as' => 'hrm.exitdetails.index',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\ExitDetails\\ExitdetailsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.exitdetails.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/exit-details/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-hrexitdetails',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\ExitDetails\\ExitdetailsController@create',
        'as' => 'hrm.exitdetails.create',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\ExitDetails\\ExitdetailsController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.exitdetails.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/exit-details/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-hrexitdetails',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\ExitDetails\\ExitdetailsController@edit',
        'as' => 'hrm.exitdetails.edit',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\ExitDetails\\ExitdetailsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.companyprofile.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/company-policy',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-companyprolicy',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\CompanyProfile\\CompanyProfileController@index',
        'as' => 'hrm.companyprofile.index',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\CompanyProfile\\CompanyProfileController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.companyprofile.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/company-policy/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-companyprolicy',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\CompanyProfile\\CompanyProfileController@create',
        'as' => 'hrm.companyprofile.create',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\CompanyProfile\\CompanyProfileController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.companyprofile.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/company-policy/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-companyprolicy',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\CompanyProfile\\CompanyProfileController@edit',
        'as' => 'hrm.companyprofile.edit',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\CompanyProfile\\CompanyProfileController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.travel.my' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/travel/myTravels',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-travel',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\travel\\travelController@my_travels',
        'as' => 'hrm.travel.my',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\travel\\travelController@my_travels',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.travel.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/travel',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-travel',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\travel\\travelController@index',
        'as' => 'hrm.travel.index',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\travel\\travelController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.travel.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/travel/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-travel',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\travel\\travelController@create',
        'as' => 'hrm.travel.create',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\travel\\travelController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.travel.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/travel/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-travel',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\travel\\travelController@store',
        'as' => 'hrm.travel.store',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\travel\\travelController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.travel.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/travel/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-travel',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\travel\\travelController@edit',
        'as' => 'hrm.travel.edit',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\travel\\travelController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.travel.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/travel/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-travel',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\travel\\travelController@update',
        'as' => 'hrm.travel.update',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\travel\\travelController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.travel.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/travel/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-travel',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\travel\\travelController@delete',
        'as' => 'hrm.travel.delete',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\travel\\travelController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.travel.expenses' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/travel/expenses',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\travel\\expensesController@index',
        'as' => 'hrm.travel.expenses',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\travel\\expensesController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.travel.expenses.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/travel/expenses/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\travel\\expensesController@create',
        'as' => 'hrm.travel.expenses.create',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\travel\\expensesController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.travel.expenses.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/travel/expenses/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\travel\\expensesController@store',
        'as' => 'hrm.travel.expenses.store',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\travel\\expensesController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.travel.expenses.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/travel/expenses/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\travel\\expensesController@edit',
        'as' => 'hrm.travel.expenses.edit',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\travel\\expensesController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.travel.expenses.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/travel/expenses/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\travel\\expensesController@update',
        'as' => 'hrm.travel.expenses.update',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\travel\\expensesController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.travel.expenses.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/travel/expenses/{id}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\travel\\expensesController@show',
        'as' => 'hrm.travel.expenses.show',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\travel\\expensesController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.travel.expenses.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/travel/expenses/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\travel\\expensesController@delete',
        'as' => 'hrm.travel.expenses.delete',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\travel\\expensesController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'hrm.travel.expenses.delete.files' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/travel/expenses/{expenseID}/delete/{id}/files',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\travel\\expensesController@delete_file',
        'as' => 'hrm.travel.expenses.delete.files',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\travel\\expensesController@delete_file',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.dashboard' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\dashboard\\dashboardController@dashboard',
        'as' => 'crm.dashboard',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\dashboard\\dashboardController@dashboard',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.leads.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/leads',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-leads',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\leadsController@index',
        'as' => 'crm.leads.index',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\leadsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.leads.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/leads/{id}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-leads',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\leadsController@show',
        'as' => 'crm.leads.show',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\leadsController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.leads.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/leads/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-leads',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\leadsController@create',
        'as' => 'crm.leads.create',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\leadsController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.leads.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/leads/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-leads',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\leadsController@store',
        'as' => 'crm.leads.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\leadsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.leads.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/leads/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\leadsController@edit',
        'as' => 'crm.leads.edit',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\leadsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.leads.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/leads/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-leads',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\leadsController@update',
        'as' => 'crm.leads.update',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\leadsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.leads.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/leads/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-leads',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\leadsController@delete',
        'as' => 'crm.leads.delete',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\leadsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.leads.convert' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/leads/{id}/convert',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-leads',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\leadsController@convert',
        'as' => 'crm.leads.convert',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\leadsController@convert',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.leads.notes' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/leads/{id}/notes',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-leadnotes',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\notesController@notes',
        'as' => 'crm.leads.notes',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\notesController@notes',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.leads.notes.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/leads/notes/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-leadnotes',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\notesController@store',
        'as' => 'crm.leads.notes.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\notesController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.leads.notes.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/leads/{id}/notes/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-leadnotes',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\notesController@update',
        'as' => 'crm.leads.notes.update',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\notesController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.leads.notes.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/leads/{id}/notes/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-leadnotes',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\notesController@delete',
        'as' => 'crm.leads.notes.delete',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\notesController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.leads.calllog' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/leads/{id}/calllog',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-leadnotes',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\calllogController@calllog',
        'as' => 'crm.leads.calllog',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\calllogController@calllog',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.leads.calllog.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/leads/calllog/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-leadnotes',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\calllogController@store_calllog',
        'as' => 'crm.leads.calllog.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\calllogController@store_calllog',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.leads.calllog.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/leads/{id}/calllog/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\calllogController@update_calllog',
        'as' => 'crm.leads.calllog.update',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\calllogController@update_calllog',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.leads.calllog.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/leads/{id}/calllog/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\calllogController@delete',
        'as' => 'crm.leads.calllog.delete',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\calllogController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.leads.status' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/lead/status',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-leadstatus',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\statusController@index',
        'as' => 'crm.leads.status',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\statusController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.leads.status.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/lead/status/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-leadstatus',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\statusController@store',
        'as' => 'crm.leads.status.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\statusController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.leads.status.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/lead/status/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-leadstatus',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\statusController@update',
        'as' => 'crm.leads.status.update',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\statusController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.leads.status.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/lead/status/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-leadstatus',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\statusController@delete',
        'as' => 'crm.leads.status.delete',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\statusController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.leads.sources' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/lead/sources',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-leadsources',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\sourcesController@index',
        'as' => 'crm.leads.sources',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\sourcesController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.leads.sources.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/lead/sources/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-leadsources',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\sourcesController@store',
        'as' => 'crm.leads.sources.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\sourcesController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.leads.sources.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/lead/sources/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-leadsources',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\sourcesController@update',
        'as' => 'crm.leads.sources.update',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\sourcesController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.leads.sources.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/lead/sources/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-leadsources',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\sourcesController@delete',
        'as' => 'crm.leads.sources.delete',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\sourcesController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.leads.tasks' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/leads/{id}/tasks',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-leadtasks',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\tasksController@index',
        'as' => 'crm.leads.tasks',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\tasksController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.leads.tasks.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/leads/tasks/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\tasksController@store',
        'as' => 'crm.leads.tasks.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\tasksController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.leads.tasks.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/leads/tasks/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-leadtasks',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\tasksController@update',
        'as' => 'crm.leads.tasks.update',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\tasksController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.leads.tasks.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/leads/tasks/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-leadtasks',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\tasksController@delete',
        'as' => 'crm.leads.tasks.delete',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\tasksController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.leads.events' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/leads/{id}/events',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-leadevents',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\eventsController@index',
        'as' => 'crm.leads.events',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\eventsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.leads.events.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/leads/events/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-leadevents',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\eventsController@store',
        'as' => 'crm.leads.events.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\eventsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.leads.events.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/leads/events/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-leadevents',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\eventsController@update',
        'as' => 'crm.leads.events.update',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\eventsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.leads.events.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/leads/events/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-leadevents',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\eventsController@delete',
        'as' => 'crm.leads.events.delete',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\eventsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.leads.documents' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/leads/{id}/documents',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-leaddocuments',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\documentsController@index',
        'as' => 'crm.leads.documents',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\documentsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.leads.documents.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/leads/documents/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-leaddocuments',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\documentsController@store',
        'as' => 'crm.leads.documents.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\documentsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.leads.documents.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/leads/documents/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-leaddocuments',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\documentsController@update',
        'as' => 'crm.leads.documents.update',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\documentsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.leads.documents.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/leads/documents/{id}/{leadID}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-leaddocuments',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\documentsController@delete',
        'as' => 'crm.leads.documents.delete',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\documentsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.leads.mail' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/leads/{id}/mail',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-leadmails',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\mailController@index',
        'as' => 'crm.leads.mail',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\mailController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.leads.details' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/leads/{id}/mail/{leadID}/details',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-leadmails',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\mailController@details',
        'as' => 'crm.leads.details',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\mailController@details',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.leads.send' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/leads/{id}/send',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-leadmails',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\mailController@send',
        'as' => 'crm.leads.send',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\mailController@send',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.leads.mail.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/leads/mail/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-leadmails',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\mailController@store',
        'as' => 'crm.leads.mail.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\mailController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.leads.sms' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/leads/{id}/sms',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\smsController@index',
        'as' => 'crm.leads.sms',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\smsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.leads.sms.send' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/leads/sms/send',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\smsController@send',
        'as' => 'crm.leads.sms.send',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\smsController@send',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.mail.inbox' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/mail/inbox',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-mail',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\mail\\mailController@inbox',
        'as' => 'crm.mail.inbox',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\mail\\mailController@inbox',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.mail.sent' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/mail/sent',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-mail',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\mail\\mailController@sent',
        'as' => 'crm.mail.sent',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\mail\\mailController@sent',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.mail.compose' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/mail/compose',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-mail',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\mail\\mailController@compose',
        'as' => 'crm.mail.compose',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\mail\\mailController@compose',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.mail.details' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/mail/{id}/details',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-mail',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\mail\\mailController@details',
        'as' => 'crm.mail.details',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\mail\\mailController@details',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.customers.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-crmcustomers',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@index',
        'as' => 'crm.customers.index',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.customers.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-crmcustomers',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@create',
        'as' => 'crm.customers.create',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.customers.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/customer/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-crmcustomers',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@contact_store',
        'as' => 'crm.customers.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@contact_store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.customers.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-crmcustomers',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@edit',
        'as' => 'crm.customers.edit',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.customers.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/customer/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-crmcustomers',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@contact_update',
        'as' => 'crm.customers.update',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@contact_update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.customers.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/{id}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-crmcustomers',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@show',
        'as' => 'crm.customers.show',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.customers.persons' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/{id}/customer-persons',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-crmcustomers',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@show',
        'as' => 'crm.customers.persons',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.customer.notes' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/{id}/notes',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\notesController@index',
        'as' => 'crm.customer.notes',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\notesController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.customer.notes.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/customer/notes/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\notesController@store',
        'as' => 'crm.customer.notes.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\notesController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.customers.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-crmcustomers',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@delete',
        'as' => 'crm.customers.delete',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.customers.comments' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/{id}/comments',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-contact',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\commentsController@index',
        'as' => 'crm.customers.comments',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\commentsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.customers.comments.post' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/customer/comments/post',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-contact',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\commentsController@store',
        'as' => 'crm.customers.comments.post',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\commentsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.customers.comments.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/comments/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-contact',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\commentsController@delete',
        'as' => 'crm.customers.comments.delete',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\commentsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.customers.invoices' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/{id}/invoices',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@show',
        'as' => 'crm.customers.invoices',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.customers.subscriptions' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/{id}/subscriptions',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@show',
        'as' => 'crm.customers.subscriptions',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.customers.quotes' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/{id}/quotes',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@show',
        'as' => 'crm.customers.quotes',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.customers.creditnotes' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/{id}/creditnotes',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@show',
        'as' => 'crm.customers.creditnotes',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.customers.lpos' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/{id}/lpos',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@show',
        'as' => 'crm.customers.lpos',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.customers.projects' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/{id}/projects',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@show',
        'as' => 'crm.customers.projects',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.customers.statement' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/{id}/statement',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\statementController@index',
        'as' => 'crm.customers.statement',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\statementController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.customers.statement.pdf' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/{id}/statement/pdf',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\statementController@pdf',
        'as' => 'crm.customers.statement.pdf',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\statementController@pdf',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.customers.statement.print' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/{id}/statement/print',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\statementController@print',
        'as' => 'crm.customers.statement.print',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\statementController@print',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.customers.statement.mail' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/{id}/statement/mail',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\statementController@mail',
        'as' => 'crm.customers.statement.mail',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\statementController@mail',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.customers.statement.send' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/customer/{id}/statement/send',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\statementController@send',
        'as' => 'crm.customers.statement.send',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\statementController@send',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.customer.mail' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/{id}/mail',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\mailController@index',
        'as' => 'crm.customer.mail',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\mailController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.customer.details' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/{id}/mail/{customerID}/details',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\mailController@details',
        'as' => 'crm.customer.details',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\mailController@details',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.customer.send' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/{id}/send',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\mailController@send',
        'as' => 'crm.customer.send',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\mailController@send',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.customer.mail.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/customer/mail/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\mailController@store',
        'as' => 'crm.customer.mail.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\mailController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.customer.documents' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/{id}/documents',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\documentsController@index',
        'as' => 'crm.customer.documents',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\documentsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.customer.documents.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/customer/documents/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\documentsController@store',
        'as' => 'crm.customer.documents.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\documentsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.customer.documents.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/customer/documents/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\documentsController@update',
        'as' => 'crm.customer.documents.update',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\documentsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.customer.documents.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/documents/{id}/{leadID}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\documentsController@delete',
        'as' => 'crm.customer.documents.delete',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\documentsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.customer.sms' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/{id}/sms',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\smsController@index',
        'as' => 'crm.customer.sms',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\smsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.customer.sms.send' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/customer/sms/send',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\smsController@send',
        'as' => 'crm.customer.sms.send',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\smsController@send',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.customers.import' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/import',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\importController@import',
        'as' => 'crm.customers.import',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\importController@import',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.customers.import.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/customer/import/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\importController@import_contact',
        'as' => 'crm.customers.import.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\importController@import_contact',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.customer.download.sample.import' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/download/import/sample',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\importController@download_import_sample',
        'as' => 'crm.customer.download.sample.import',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\importController@download_import_sample',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.customers.export' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/export/{type}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\importController@export',
        'as' => 'crm.customers.export',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\importController@export',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.customers.groups.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/category',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\groupsController@index',
        'as' => 'crm.customers.groups.index',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\groupsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.customers.groups.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/customer/category/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\groupsController@store',
        'as' => 'crm.customers.groups.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\groupsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.customers.groups.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/category/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\groupsController@edit',
        'as' => 'crm.customers.groups.edit',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\groupsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.customers.groups.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/customer/category/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\groupsController@update',
        'as' => 'crm.customers.groups.update',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\groupsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.customers.groups.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/category/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\groupsController@delete',
        'as' => 'crm.customers.groups.delete',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\groupsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.customer.notes.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/customer/{id}/notes/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\notesController@update',
        'as' => 'crm.customer.notes.update',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\notesController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.customer.notes.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/{id}/notes/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\notesController@delete',
        'as' => 'crm.customer.notes.delete',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\notesController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.customer.calllog' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/{id}/calllogs',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\calllogController@index',
        'as' => 'crm.customer.calllog',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\calllogController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.customer.calllog.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/customer/calllog/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\calllogController@store',
        'as' => 'crm.customer.calllog.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\calllogController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.customer.calllog.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/customer/{id}/calllog/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\calllogController@update',
        'as' => 'crm.customer.calllog.update',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\calllogController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.customer.calllog.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/{id}/calllog/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\calllogController@delete',
        'as' => 'crm.customer.calllog.delete',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\calllogController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.customer.events' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/{id}/events',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\eventsController@index',
        'as' => 'crm.customer.events',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\eventsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.customer.events.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/customer/events/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\eventsController@store',
        'as' => 'crm.customer.events.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\eventsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.customer.events.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/customer/events/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\eventsController@update',
        'as' => 'crm.customer.events.update',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\eventsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.customer.events.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/events/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\eventsController@delete',
        'as' => 'crm.customer.events.delete',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\eventsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.sms.sent' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/sms',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\sms\\smsController@sent',
        'as' => 'crm.sms.sent',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\sms\\smsController@sent',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.sms.send.single' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/sms/send/single',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\sms\\smsController@send',
        'as' => 'crm.sms.send.single',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\sms\\smsController@send',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.sms.send.bulk' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/sms/send/bulk',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\sms\\smsController@sent',
        'as' => 'crm.sms.send.bulk',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\sms\\smsController@sent',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'generated::ehR7EHztxE2Tw4b4' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/sms/retreve/from/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\sms\\smsController@retrieve_from',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\sms\\smsController@retrieve_from',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
        'as' => 'generated::ehR7EHztxE2Tw4b4',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.social.dashboard' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/social/dashboard',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\social\\dashboardController@dashboard',
        'as' => 'crm.social.dashboard',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\social\\dashboardController@dashboard',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.social.post.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/social/posts',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\social\\postsController@index',
        'as' => 'crm.social.post.index',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\social\\postsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.social.post.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/social/posts/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\social\\postsController@create',
        'as' => 'crm.social.post.create',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\social\\postsController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.social.post.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/social/social/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\social\\postsController@store',
        'as' => 'crm.social.post.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\social\\postsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'generated::wQEjBgy4firp3lIe' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/marketing/retrive/channel/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\publicationsController@retrieve_channels',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\publicationsController@retrieve_channels',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
        'as' => 'generated::wQEjBgy4firp3lIe',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.publications.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/marketing/publications/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\publicationsController@edit',
        'as' => 'crm.publications.edit',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\publicationsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.publications.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/marketing/publications/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\publicationsController@update',
        'as' => 'crm.publications.update',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\publicationsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.publications.post.channel' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/marketing/publications/{postID}/channel/{channelID}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\publicationsController@post_per_channel',
        'as' => 'crm.publications.post.channel',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\publicationsController@post_per_channel',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.publications.post.publish' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/marketing/publish/{postID}/{channelID}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\publicationsController@publish',
        'as' => 'crm.publications.post.publish',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\publicationsController@publish',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.account.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/marketing/account',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\accountController@index',
        'as' => 'crm.account.index',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\accountController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.account.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/marketing/account/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\accountController@create',
        'as' => 'crm.account.create',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\accountController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.account.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/marketing/account/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\accountController@store',
        'as' => 'crm.account.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\accountController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.account.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/marketing/account/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\accountController@edit',
        'as' => 'crm.account.edit',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\accountController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.account.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/marketing/account/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\accountController@update',
        'as' => 'crm.account.update',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\accountController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.marketing.account.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/marketing/account/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\accountController@delete',
        'as' => 'crm.marketing.account.delete',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\accountController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.medium.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/marketing/medium',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\mediumController@index',
        'as' => 'crm.medium.index',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\mediumController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.medium.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/marketing/medium/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\mediumController@create',
        'as' => 'crm.medium.create',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\mediumController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.medium.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/marketing/medium/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\mediumController@store',
        'as' => 'crm.medium.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\mediumController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.medium.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/marketing/medium/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\mediumController@edit',
        'as' => 'crm.medium.edit',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\mediumController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.medium.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/marketing/medium/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\mediumController@update',
        'as' => 'crm.medium.update',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\mediumController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.medium.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/marketing/medium/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\mediumController@delete',
        'as' => 'crm.medium.delete',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\mediumController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.channel.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/marketing/{id}/channel',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\channelController@index',
        'as' => 'crm.channel.index',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\channelController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.channel.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/marketing/channel/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\channelController@store',
        'as' => 'crm.channel.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\channelController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.channel.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/marketing/{accountID}/channel/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\channelController@edit',
        'as' => 'crm.channel.edit',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\channelController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.channel.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/marketing/channel/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\channelController@update',
        'as' => 'crm.channel.update',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\channelController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.channel.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/marketing/channel/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\channelController@delete',
        'as' => 'crm.channel.delete',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\channelController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'url.shortener' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/shortener',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\shortener\\ShortenerController@index',
        'as' => 'url.shortener',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\shortener\\ShortenerController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'url.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/store/url',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\shortener\\ShortenerController@store',
        'as' => 'url.store',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\shortener\\ShortenerController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'url.get' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/url/{code}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\shortener\\ShortenerController@get',
        'as' => 'url.get',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\shortener\\ShortenerController@get',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'url.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/short/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\shortener\\ShortenerController@delete',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\shortener\\ShortenerController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
        'as' => 'url.delete',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.deals.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/deals',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\dealsController@index',
        'as' => 'crm.deals.index',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\dealsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.deals.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/deals/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\dealsController@create',
        'as' => 'crm.deals.create',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\dealsController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.deals.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/deals/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\dealsController@store',
        'as' => 'crm.deals.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\dealsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.deals.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/deals/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\dealsController@edit',
        'as' => 'crm.deals.edit',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\dealsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.deals.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/deals/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\dealsController@update',
        'as' => 'crm.deals.update',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\dealsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.deals.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/deals/{id}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\dealsController@show',
        'as' => 'crm.deals.show',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\dealsController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.deals.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/deals/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\dealsController@delete',
        'as' => 'crm.deals.delete',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\dealsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.deals.stages' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/deals/{id}/stages',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\dealsController@stages',
        'as' => 'crm.deals.stages',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\dealsController@stages',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.deals.calllog.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/deals/{id}/call_log',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\calllogController@index',
        'as' => 'crm.deals.calllog.index',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\calllogController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.deals.calllog.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/deals/{id}/call_log/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\calllogController@store',
        'as' => 'crm.deals.calllog.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\calllogController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.deals.calllog.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/deals/{id}/call_log/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\calllogController@update',
        'as' => 'crm.deals.calllog.update',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\calllogController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.deals.calllog.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/deals/{id}/call_log/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\calllogController@delete',
        'as' => 'crm.deals.calllog.delete',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\calllogController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.deals.notes.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/deals/{id}/notes',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\notesController@index',
        'as' => 'crm.deals.notes.index',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\notesController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.deals.notes.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/deals/{id}/notes/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\notesController@store',
        'as' => 'crm.deals.notes.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\notesController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.deals.notes.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/deals/{id}/notes/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\notesController@update',
        'as' => 'crm.deals.notes.update',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\notesController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.deals.notes.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/deals/{id}/notes/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\notesController@delete',
        'as' => 'crm.deals.notes.delete',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\notesController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.deals.task.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/deals/{id}/task',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\tasksController@index',
        'as' => 'crm.deals.task.index',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\tasksController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.deals.task.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/deals/{id}/task/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\tasksController@store',
        'as' => 'crm.deals.task.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\tasksController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.deals.task.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/deals/{id}/task/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\tasksController@update',
        'as' => 'crm.deals.task.update',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\tasksController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.deals.task.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/deals/{id}/task/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\tasksController@delete',
        'as' => 'crm.deals.task.delete',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\tasksController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.deals.appointments.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/deals/{id}/appointments',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\appointmentsController@index',
        'as' => 'crm.deals.appointments.index',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\appointmentsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.deals.appointments.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/deals/{id}/appointments/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\appointmentsController@store',
        'as' => 'crm.deals.appointments.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\appointmentsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.deals.appointments.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/deals/{id}/appointments/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\appointmentsController@update',
        'as' => 'crm.deals.appointments.update',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\appointmentsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.deals.appointments.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/deals/{id}/appointments/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\appointmentsController@delete',
        'as' => 'crm.deals.appointments.delete',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\appointmentsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.pipeline.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/pipeline',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\pipelineController@index',
        'as' => 'crm.pipeline.index',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\pipelineController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.pipeline.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/pipeline/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\pipelineController@store',
        'as' => 'crm.pipeline.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\pipelineController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.pipeline.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/pipeline/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\pipelineController@edit',
        'as' => 'crm.pipeline.edit',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\pipelineController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.pipeline.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/pipeline/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\pipelineController@update',
        'as' => 'crm.pipeline.update',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\pipelineController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.pipeline.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/pipeline/{id}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\pipelineController@show',
        'as' => 'crm.pipeline.show',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\pipelineController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.pipeline.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/pipeline/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\pipelineController@delete',
        'as' => 'crm.pipeline.delete',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\pipelineController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.pipeline.stage.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/pipeline/stages/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\stagesController@store',
        'as' => 'crm.pipeline.stage.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\stagesController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.pipeline.stage.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/pipeline/stages/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\stagesController@edit',
        'as' => 'crm.pipeline.stage.edit',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\stagesController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.pipeline.stage.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/pipeline/stages/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\stagesController@update',
        'as' => 'crm.pipeline.stage.update',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\stagesController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.pipeline.stage.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/pipeline/stages/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\stagesController@delete',
        'as' => 'crm.pipeline.stage.delete',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\stagesController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'stage_position_update' => 
    array (
      'methods' => 
      array (
        0 => 'PUT',
      ),
      'uri' => 'crm/pipeline/stages/position',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\stagesController@position',
        'as' => 'stage_position_update',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\stagesController@position',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.reports' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/reports',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\reports\\dashboardController@dashboard',
        'as' => 'crm.reports',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\reports\\dashboardController@dashboard',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.reports.leads.status.filter' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/reports/leads_by_status',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\reports\\leadsByStatusController@filter',
        'as' => 'crm.reports.leads.status.filter',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\reports\\leadsByStatusController@filter',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.reports.leads.status.export' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/reports/leads_by_status/export/{statusID}/{start}/{end}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\reports\\leadsByStatusController@export',
        'as' => 'crm.reports.leads.status.export',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\reports\\leadsByStatusController@export',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.reports.leads.source.filter' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/reports/leads_by_source',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\reports\\leadsBySourceController@filter',
        'as' => 'crm.reports.leads.source.filter',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\reports\\leadsBySourceController@filter',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.reports.leads.source.export' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/reports/leads_by_source/export/{sourceID}/{start}/{end}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\reports\\leadsBySourceController@export',
        'as' => 'crm.reports.leads.source.export',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\reports\\leadsBySourceController@export',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.reports.leads.industry.filter' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/reports/leads_by_industry',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\reports\\leadsByIndustryController@filter',
        'as' => 'crm.reports.leads.industry.filter',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\reports\\leadsByIndustryController@filter',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.reports.leads.industry.export' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/reports/leads_by_industry/export/{sourceID}/{start}/{end}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\reports\\leadsByIndustryController@export',
        'as' => 'crm.reports.leads.industry.export',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\reports\\leadsByIndustryController@export',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'cms.dashboard' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cms',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-crm',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\dashboard\\dashboardController@dashboard',
        'as' => 'cms.dashboard',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\dashboard\\dashboardController@dashboard',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'cms.groups.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cms/knowledge_base/groups',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-groupknowledgebase',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\knowledgebase\\groupsController@index',
        'as' => 'cms.groups.index',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\knowledgebase\\groupsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'cms.groups.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'cms/knowledge_base/groups/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-groupknowledgebase',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\knowledgebase\\groupsController@store',
        'as' => 'cms.groups.store',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\knowledgebase\\groupsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'cms.groups.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cms/knowledge_base/groups/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-groupknowledgebase',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\knowledgebase\\groupsController@edit',
        'as' => 'cms.groups.edit',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\knowledgebase\\groupsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'cms.groups.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'cms/knowledge_base/groups/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-groupknowledgebase',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\knowledgebase\\groupsController@update',
        'as' => 'cms.groups.update',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\knowledgebase\\groupsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'cms.groups.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cms/knowledge_base/groups/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-groupknowledgebase',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\knowledgebase\\groupsController@destroy',
        'as' => 'cms.groups.delete',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\knowledgebase\\groupsController@destroy',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'cms.knowledgebase.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cms/knowledge_base',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-knowledgebase',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\knowledgebase\\knowledgebaseController@index',
        'as' => 'cms.knowledgebase.index',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\knowledgebase\\knowledgebaseController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'cms.knowledgebase.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cms/knowledge_base/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-knowledgebase',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\knowledgebase\\knowledgebaseController@create',
        'as' => 'cms.knowledgebase.create',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\knowledgebase\\knowledgebaseController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'cms.knowledgebase.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'cms/knowledge_base/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-knowledgebase',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\knowledgebase\\knowledgebaseController@store',
        'as' => 'cms.knowledgebase.store',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\knowledgebase\\knowledgebaseController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'cms.knowledgebase.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cms/knowledge_base/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-knowledgebase',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\knowledgebase\\knowledgebaseController@edit',
        'as' => 'cms.knowledgebase.edit',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\knowledgebase\\knowledgebaseController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'cms.knowledgebase.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'cms/knowledge_base/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-knowledgebase',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\knowledgebase\\knowledgebaseController@update',
        'as' => 'cms.knowledgebase.update',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\knowledgebase\\knowledgebaseController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'cms.knowledgebase.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cms/knowledge_base/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-knowledgebase',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\knowledgebase\\knowledgebaseController@destroy',
        'as' => 'cms.knowledgebase.delete',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\knowledgebase\\knowledgebaseController@destroy',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'cms.knowledgebase.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cms/knowledge_base/{id}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-knowledgebase',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\knowledgebase\\knowledgebaseController@show',
        'as' => 'cms.knowledgebase.show',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\knowledgebase\\knowledgebaseController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'cms.proposal.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cms/proposals',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\proposals\\proposalController@index',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\proposals\\proposalController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
        'as' => 'cms.proposal.index',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'cms.proposal.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cms/proposal/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\proposals\\proposalController@create',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\proposals\\proposalController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
        'as' => 'cms.proposal.create',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'cms.proposal.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'cms/proposal/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\proposals\\proposalController@store',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\proposals\\proposalController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
        'as' => 'cms.proposal.store',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'cms.proposal.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cms/proposal/{id}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\proposals\\proposalController@show',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\proposals\\proposalController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
        'as' => 'cms.proposal.show',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'cms.proposal.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cms/proposal/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\proposals\\proposalController@edit',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\proposals\\proposalController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
        'as' => 'cms.proposal.edit',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'cms.proposal.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'cms/proposal/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\proposals\\proposalController@update',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\proposals\\proposalController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
        'as' => 'cms.proposal.update',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'cms.proposal.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cms/proposal/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\proposals\\proposalController@destroy',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\proposals\\proposalController@destroy',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
        'as' => 'cms.proposal.delete',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'cms.page.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cms/website/pages',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\website\\pageController@index',
        'as' => 'cms.page.index',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\website\\pageController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'cms.page.new' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cms/website/page/new',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\website\\pageController@create',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\website\\pageController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
        'as' => 'cms.page.new',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'cms.page.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cms/website/pages/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\website\\pageController@edit',
        'as' => 'cms.page.edit',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\website\\pageController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'cms.page.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'cms/pages/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\website\\pageController@update',
        'as' => 'cms.page.update',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\website\\pageController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'cms.page.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cms/website/pages/{id}/destroy',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\website\\pageController@destroy',
        'as' => 'cms.page.destroy',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\website\\pageController@destroy',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'custom.page.field' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'cms/page/custom/field',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\website\\pageController@custom_field',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\website\\pageController@custom_field',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
        'as' => 'custom.page.field',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'custom.field.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cms/website/field/delete/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\website\\pageController@custom_field_delete',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\website\\pageController@custom_field_delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
        'as' => 'custom.field.delete',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'post.page.template' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'cms/page/template/post',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\website\\templateController@store',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\website\\templateController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
        'as' => 'post.page.template',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'cms.slider.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cms/website/slider',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\website\\sliderController@index',
        'as' => 'cms.slider.index',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\website\\sliderController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'cms.slider.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cms/website/slider/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\website\\sliderController@create',
        'as' => 'cms.slider.create',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\website\\sliderController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'cms.slider.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'cms/slider/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\website\\sliderController@store',
        'as' => 'cms.slider.store',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\website\\sliderController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'cms.slider.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cms/website/slider/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\website\\sliderController@edit',
        'as' => 'cms.slider.edit',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\website\\sliderController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'cms.slider.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'cms/slider/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\website\\sliderController@update',
        'as' => 'cms.slider.update',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\website\\sliderController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'cms.slider.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cms/website/slider/{id}/destroy',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\website\\sliderController@destroy',
        'as' => 'cms.slider.destroy',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\website\\sliderController@destroy',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'cms.posts.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cms/website/posts',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\website\\postsController@index',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\website\\postsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
        'as' => 'cms.posts.index',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'cms.posts.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cms/website/posts/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\website\\postsController@create',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\website\\postsController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
        'as' => 'cms.posts.create',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'cms.posts.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'cms/posts/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\website\\postsController@store',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\website\\postsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
        'as' => 'cms.posts.store',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'cms.posts.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cms/website/posts/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\website\\postsController@edit',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\website\\postsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
        'as' => 'cms.posts.edit',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'cms.posts.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'cms/posts/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\website\\postsController@update',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\website\\postsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
        'as' => 'cms.posts.update',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'cms.posts.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cms/website/posts/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\website\\postsController@destroy',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\website\\postsController@destroy',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
        'as' => 'cms.posts.delete',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'posts.comments' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cms/website/posts/{id}/comment',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\website\\postsController@comment',
        'as' => 'posts.comments',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\website\\postsController@comment',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'postscomment.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'cms/posts/comment/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\website\\postsController@comment_store',
        'as' => 'postscomment.store',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\website\\postsController@comment_store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'posts.attachment' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cms/website/posts/{id}/attachment',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\website\\postsController@attachment',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\website\\postsController@attachment',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
        'as' => 'posts.attachment',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'attachment.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'cms/attachment/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\website\\AttachmentController@store',
        'as' => 'attachment.store',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\website\\AttachmentController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'cms.post.category.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cms/website/posts/category',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\website\\categoryController@index',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\website\\categoryController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
        'as' => 'cms.post.category.index',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'cms.post.category.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cms/website/posts/category/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\website\\categoryController@create',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\website\\categoryController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
        'as' => 'cms.post.category.create',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'cms.post.category.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'cms/website/posts/category/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\website\\categoryController@store',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\website\\categoryController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
        'as' => 'cms.post.category.store',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'cms.post.category.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cms/website/posts/category/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\website\\categoryController@edit',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\website\\categoryController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
        'as' => 'cms.post.category.edit',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'cms.post.category.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'cms/website/posts/category/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\website\\categoryController@update',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\website\\categoryController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
        'as' => 'cms.post.category.update',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'cms.post.category.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cms/website/posts/category/{id}/destroy',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\website\\categoryController@destroy',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\website\\categoryController@destroy',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
        'as' => 'cms.post.category.destroy',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'cms.post.tags.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cms/websiteposts/tags',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\website\\tagsController@index',
        'as' => 'cms.post.tags.index',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\website\\tagsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'cms.post.tags.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cms/websiteposts/tags/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\website\\tagsController@edit',
        'as' => 'cms.post.tags.edit',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\website\\tagsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'cms.post.tags.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'cms/posts/tags/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\website\\tagsController@store',
        'as' => 'cms.post.tags.store',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\website\\tagsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'cms.post.tags.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'cms/posts/tags/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\website\\tagsController@update',
        'as' => 'cms.post.tags.update',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\website\\tagsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'cms.post.tags.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cms/websiteposts/tags/{id}/destroy',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\website\\tagsController@destroy',
        'as' => 'cms.post.tags.destroy',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\website\\tagsController@destroy',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'cms.media.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cms/websitemedia',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\website\\MediaController@index',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\website\\MediaController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
        'as' => 'cms.media.index',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'cms.media.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'cms/media/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\website\\MediaController@store',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\website\\MediaController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
        'as' => 'cms.media.store',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'affiliate.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cms/website/affiliate',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\Modules\\affiliate\\AffiliateController@index',
        'controller' => 'App\\Http\\Controllers\\Modules\\affiliate\\AffiliateController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
        'as' => 'affiliate.index',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'affiliate.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cms/website/affiliate/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\Modules\\affiliate\\AffiliateController@create',
        'controller' => 'App\\Http\\Controllers\\Modules\\affiliate\\AffiliateController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
        'as' => 'affiliate.create',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'affiliate.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'cms/affiliate/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\Modules\\affiliate\\AffiliateController@store',
        'controller' => 'App\\Http\\Controllers\\Modules\\affiliate\\AffiliateController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
        'as' => 'affiliate.store',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'affiliate.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cms/website/affiliate/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\Modules\\affiliate\\AffiliateController@edit',
        'controller' => 'App\\Http\\Controllers\\Modules\\affiliate\\AffiliateController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
        'as' => 'affiliate.edit',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'affiliate.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'cms/affiliate/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\Modules\\affiliate\\AffiliateController@update',
        'controller' => 'App\\Http\\Controllers\\Modules\\affiliate\\AffiliateController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
        'as' => 'affiliate.update',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'affiliate.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cms/website/affiliate/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\Modules\\affiliate\\AffiliateController@delete',
        'controller' => 'App\\Http\\Controllers\\Modules\\affiliate\\AffiliateController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/cms',
        'where' => 
        array (
        ),
        'as' => 'affiliate.delete',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'assets.dashboard' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/dashboard',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:access-assets',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@index',
        'as' => 'assets.dashboard',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'assets.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/list',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-assets',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@index',
        'as' => 'assets.index',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'assets.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-assets',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@create',
        'as' => 'assets.create',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'assets.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'assets/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-assets',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@store',
        'as' => 'assets.store',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'assets.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-assets',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@edit',
        'as' => 'assets.edit',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'assets.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'assets/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-assets',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@update',
        'as' => 'assets.update',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'assets.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/{id}/view',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-assets',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@show',
        'as' => 'assets.show',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'assets.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-assets',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@delete',
        'as' => 'assets.delete',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'model.retrive' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/retrive/model/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@retrive_model',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@retrive_model',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
        'as' => 'model.retrive',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'assets.details.vehicle' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/{id}/vehicle',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@vehicle',
        'as' => 'assets.details.vehicle',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@vehicle',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'assets.maintenances.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/{id}/maintenances',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@show',
        'as' => 'assets.maintenances.index',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'assets.maintenances.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/{id}/maintenance/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@show',
        'as' => 'assets.maintenances.create',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'assets.maintenances.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'assets/{id}/maintenance/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\maintenancesController@store',
        'as' => 'assets.maintenances.store',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\maintenancesController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'assets.maintenances.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/{assetID}/maintenance/{editID}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\maintenancesController@edit',
        'as' => 'assets.maintenances.edit',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\maintenancesController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'assets.maintenances.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'assets/{assetID}/maintenance/{editID}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\maintenancesController@update',
        'as' => 'assets.maintenances.update',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\maintenancesController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'assets.event.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/{id}/events',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@show',
        'as' => 'assets.event.index',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'assets.event.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/events/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\eventController@delete',
        'as' => 'assets.event.delete',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\eventController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'assets.event.checkout.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'assets/checkout/events/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\eventController@check_out_store',
        'as' => 'assets.event.checkout.store',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\eventController@check_out_store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'assets.event.checkout.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'assets/checkout/{id}/events/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\eventController@check_out_update',
        'as' => 'assets.event.checkout.update',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\eventController@check_out_update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'assets.event.checkin.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'assets/checkin/events/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\eventController@check_in_store',
        'as' => 'assets.event.checkin.store',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\eventController@check_in_store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'assets.event.checkin.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'assets/checkin/{id}/events/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\eventController@check_in_update',
        'as' => 'assets.event.checkin.update',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\eventController@check_in_update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'assets.event.lease.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'assets/lease/events/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\eventController@lease_store',
        'as' => 'assets.event.lease.store',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\eventController@lease_store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'assets.event.lease.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'assets/lease/{id}/events/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\eventController@lease_update',
        'as' => 'assets.event.lease.update',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\eventController@lease_update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'licenses.assets.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/licenses',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-assets',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\license\\licensesController@index',
        'as' => 'licenses.assets.index',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\license\\licensesController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'licenses.assets.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/licenses/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-assets',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\license\\licensesController@create',
        'as' => 'licenses.assets.create',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\license\\licensesController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'licenses.assets.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'assets/licenses/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-assets',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\license\\licensesController@store',
        'as' => 'licenses.assets.store',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\license\\licensesController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'licenses.assets.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/licenses/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-assets',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\license\\licensesController@edit',
        'as' => 'licenses.assets.edit',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\license\\licensesController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'licenses.assets.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'assets/licenses/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-assets',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\license\\licensesController@update',
        'as' => 'licenses.assets.update',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\license\\licensesController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'licenses.assets.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/licenses/{id}/view',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:read-assets',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\license\\licensesController@show',
        'as' => 'licenses.assets.show',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\license\\licensesController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'licenses.assets.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/licenses/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-assets',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\license\\licensesController@delete',
        'as' => 'licenses.assets.delete',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\license\\licensesController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'licenses.maintenances.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/licenses/{id}/maintenances',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\license\\licensesController@show',
        'as' => 'licenses.maintenances.index',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\license\\licensesController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'licenses.maintenances.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/licenses/{id}/maintenance/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\license\\maintenancesController@show',
        'as' => 'licenses.maintenances.create',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\license\\maintenancesController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'licenses.maintenances.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'assets/licenses/{id}/maintenance/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\license\\maintenancesController@store',
        'as' => 'licenses.maintenances.store',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\license\\maintenancesController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'licenses.maintenances.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/licenses/{assetID}/maintenance/{editID}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\license\\maintenancesController@edit',
        'as' => 'licenses.maintenances.edit',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\license\\maintenancesController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'licenses.maintenances.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'assets/licenses/{assetID}/maintenance/{editID}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\license\\maintenancesController@update',
        'as' => 'licenses.maintenances.update',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\license\\maintenancesController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'licenses.maintenances.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/licenses/{assetID}/maintenance/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\license\\maintenancesController@delete',
        'as' => 'licenses.maintenances.delete',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\license\\maintenancesController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'assets.type.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/types',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\typeController@index',
        'as' => 'assets.type.index',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\typeController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'assets.type.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'assets/type/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\typeController@store',
        'as' => 'assets.type.store',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\typeController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'assets.type.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/type/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\typeController@edit',
        'as' => 'assets.type.edit',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\typeController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'assets.type.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'assets/type/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\typeController@update',
        'as' => 'assets.type.update',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\typeController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'assets.type.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/type/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\typeController@delete',
        'as' => 'assets.type.delete',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\typeController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'dashboard.property' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/dashboard',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\dashboardController@dashboard',
        'as' => 'dashboard.property',
        'controller' => 'App\\Http\\Controllers\\app\\property\\dashboardController@dashboard',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/properties',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\propertyController@index',
        'as' => 'property.index',
        'controller' => 'App\\Http\\Controllers\\app\\property\\propertyController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/property/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\propertyController@create',
        'as' => 'property.create',
        'controller' => 'App\\Http\\Controllers\\app\\property\\propertyController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/property/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\propertyController@store',
        'as' => 'property.store',
        'controller' => 'App\\Http\\Controllers\\app\\property\\propertyController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/property/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\propertyController@edit',
        'as' => 'property.edit',
        'controller' => 'App\\Http\\Controllers\\app\\property\\propertyController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/property/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\propertyController@update',
        'as' => 'property.update',
        'controller' => 'App\\Http\\Controllers\\app\\property\\propertyController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/property/{id}/details',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\propertyController@show',
        'as' => 'property.show',
        'controller' => 'App\\Http\\Controllers\\app\\property\\propertyController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.remove.image' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/property/{id}/remove/image',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\propertyController@remove_image',
        'as' => 'property.remove.image',
        'controller' => 'App\\Http\\Controllers\\app\\property\\propertyController@remove_image',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.information' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/property/{id}/information',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\propertyController@information',
        'as' => 'property.information',
        'controller' => 'App\\Http\\Controllers\\app\\property\\propertyController@information',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.information.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/property/{id}/information/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\propertyController@update_information',
        'as' => 'property.information.update',
        'controller' => 'App\\Http\\Controllers\\app\\property\\propertyController@update_information',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/property/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\propertyController@delete',
        'as' => 'property.delete',
        'controller' => 'App\\Http\\Controllers\\app\\property\\propertyController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.vacant' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/property/units/{id}/vacant',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\propertyController@vacant',
        'as' => 'property.vacant',
        'controller' => 'App\\Http\\Controllers\\app\\property\\propertyController@vacant',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.occupied' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/property/units/{id}/occupied',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\propertyController@occupied',
        'as' => 'property.occupied',
        'controller' => 'App\\Http\\Controllers\\app\\property\\propertyController@occupied',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.document.upload' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/property/document/upload',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\propertyController@document_upload',
        'as' => 'property.document.upload',
        'controller' => 'App\\Http\\Controllers\\app\\property\\propertyController@document_upload',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.leases' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/property/{id}/leases',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\leasesController@index',
        'as' => 'property.leases',
        'controller' => 'App\\Http\\Controllers\\app\\property\\leasesController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.leases.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/property/{id}/add/leases',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\leasesController@create',
        'as' => 'property.leases.create',
        'controller' => 'App\\Http\\Controllers\\app\\property\\leasesController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.leases.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/property/store/lease',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\leasesController@store',
        'as' => 'property.leases.store',
        'controller' => 'App\\Http\\Controllers\\app\\property\\leasesController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.units' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/property/{id}/units',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\property\\unitsController@index',
        'as' => 'property.units',
        'controller' => 'App\\Http\\Controllers\\app\\property\\property\\unitsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.units.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/property/{id}/units/add',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\property\\unitsController@create',
        'as' => 'property.units.create',
        'controller' => 'App\\Http\\Controllers\\app\\property\\property\\unitsController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.units.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/property/units/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\property\\unitsController@store',
        'as' => 'property.units.store',
        'controller' => 'App\\Http\\Controllers\\app\\property\\property\\unitsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.units.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/property/{pid}/units/{uid}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\property\\unitsController@edit',
        'as' => 'property.units.edit',
        'controller' => 'App\\Http\\Controllers\\app\\property\\property\\unitsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.units.document' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/property/units/{uid}/upload_document',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\property\\unitsController@edit',
        'as' => 'property.units.document',
        'controller' => 'App\\Http\\Controllers\\app\\property\\property\\unitsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.units.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/property/units/{uid}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\property\\unitsController@update',
        'as' => 'property.units.update',
        'controller' => 'App\\Http\\Controllers\\app\\property\\property\\unitsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.units.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/property/{pid}/units/{uid}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\property\\unitsController@delete',
        'as' => 'property.units.delete',
        'controller' => 'App\\Http\\Controllers\\app\\property\\property\\unitsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.units.bulk.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/property/{id}/units/bulk',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\property\\unitsController@bulk',
        'as' => 'property.units.bulk.create',
        'controller' => 'App\\Http\\Controllers\\app\\property\\property\\unitsController@bulk',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.units.bulk.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/property/units/bulk/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\property\\unitsController@store_bulk',
        'as' => 'property.units.bulk.store',
        'controller' => 'App\\Http\\Controllers\\app\\property\\property\\unitsController@store_bulk',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.invoice.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/property/{propertyID}/invoices',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\invoicesController@index',
        'as' => 'property.invoice.index',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\invoicesController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.invoice.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/property/{propertyID}/invoices/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\invoicesController@create',
        'as' => 'property.invoice.create',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\invoicesController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.invoice.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/property/{propertyID}/invoices/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\invoicesController@store',
        'as' => 'property.invoice.store',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\invoicesController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.invoice.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/property/{propertyID}/rental/{invoiceID}/edit/invoices',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\invoicesController@edit',
        'as' => 'property.invoice.edit',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\invoicesController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.invoice.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/property/{propertyID}/rental/{invoiceID}/update/invoices',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\invoicesController@update',
        'as' => 'property.invoice.update',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\invoicesController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.invoice.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/property/{propertyID}/invoices/{invoiceID}/details',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\invoicesController@show',
        'as' => 'property.invoice.show',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\invoicesController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.invoice.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/property/{propertyID}/invoices/{invoiceID}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\invoicesController@delete',
        'as' => 'property.invoice.delete',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\invoicesController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.invoice.tenant.leases' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/property/{propertyID}/invoices/{tenantID}/leases',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\invoicesController@get_leases',
        'as' => 'property.invoice.tenant.leases',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\invoicesController@get_leases',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.invoice.payment' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/property/{propertyID}/invoices/{invoiceID}/payments',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\invoicesController@payments',
        'as' => 'property.invoice.payment',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\invoicesController@payments',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.invoice.create.bulk' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/property/{propertyID}/invoices/bulk',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\invoicesController@create_bulk',
        'as' => 'property.invoice.create.bulk',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\invoicesController@create_bulk',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.invoice.store.bulk' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/property/{propertyID}/invoices/bulk/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\invoicesController@store_bulk',
        'as' => 'property.invoice.store.bulk',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\invoicesController@store_bulk',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.invoice.print' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/property/{propertyID}/invoices/{invoiceID}/print',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\invoicesController@print',
        'as' => 'property.invoice.print',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\invoicesController@print',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.payments' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/property/{propertyID}/payments',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\paymentsController@index',
        'as' => 'property.payments',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\paymentsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.payments.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/property/{propertyID}/payments/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\paymentsController@create',
        'as' => 'property.payments.create',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\paymentsController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.payments.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/payments/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\paymentsController@store',
        'as' => 'property.payments.store',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\paymentsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.payments.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/property/{propertyID}/payments/{paymentID}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\paymentsController@edit',
        'as' => 'property.payments.edit',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\paymentsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.payments.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/{propertyID}/payments/{paymentID}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\paymentsController@update',
        'as' => 'property.payments.update',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\paymentsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.payments.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/property/{propertyID}/payments/{paymentID}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\paymentsController@show',
        'as' => 'property.payments.show',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\paymentsController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'generated::k5LXQgY3veUTzykQ' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/retrive/{propertyID}/invoice/{tenantID}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\paymentsController@retrive_tenant_invoice',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\paymentsController@retrive_tenant_invoice',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
        'as' => 'generated::k5LXQgY3veUTzykQ',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.payments.delete.file' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/{propertyID}/payments/file/{fileID}/{parentID}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\paymentsController@delete_file',
        'as' => 'property.payments.delete.file',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\paymentsController@delete_file',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.payments.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/{propertyID}/payments/{parentID}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\paymentsController@destroy',
        'as' => 'property.payments.delete',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\paymentsController@destroy',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.utility.billing.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/property/{propertyID}/utility',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\utilityController@index',
        'as' => 'property.utility.billing.index',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\utilityController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.utility.billing.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/property/{propertyID}/utility/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\utilityController@create',
        'as' => 'property.utility.billing.create',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\utilityController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.prepare.utility.billing' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/{propertyID}/prepare/utility',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\utilityController@prepare_bulk_billing',
        'as' => 'property.prepare.utility.billing',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\utilityController@prepare_bulk_billing',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.record.bulk.reading' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/property/{propertyID}/prepare/{utility}/utility/bill/{from}/{to}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\utilityController@record_bulk_reading',
        'as' => 'property.record.bulk.reading',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\utilityController@record_bulk_reading',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.utility.billing.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/{propertyID}/utility/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\utilityController@store',
        'as' => 'property.utility.billing.store',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\utilityController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.utility.billing.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/property/{propertyID}/{invoiceID}/edit/utility',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\utilityController@edit',
        'as' => 'property.utility.billing.edit',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\utilityController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.calculate.utility.consumption' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/{propertyID}/{invoiceID}/calculate/utility/consumption',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\utilityController@calculate_consumption',
        'as' => 'property.calculate.utility.consumption',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\utilityController@calculate_consumption',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.update.utility.consumption' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/{propertyID}/{invoiceID}/update/utility/consumption',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\utilityController@update_utility_billing',
        'as' => 'property.update.utility.consumption',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\utilityController@update_utility_billing',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.utility.billing.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/property/{propertyID}/utility/{invoiceID}/details',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\utilityController@show',
        'as' => 'property.utility.billing.show',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\utilityController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.utility.billing.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/property/{propertyID}/utility/{invoiceID}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\utilityController@delete',
        'as' => 'property.utility.billing.delete',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\utilityController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.utility.billing.tenant.leases' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/property/{propertyID}/utility/{tenantID}/leases',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\utilityController@get_leases',
        'as' => 'property.utility.billing.tenant.leases',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\utilityController@get_leases',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.utility.payment' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/property/{propertyID}/utility/{invoiceID}/payments',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\utilityController@pay_utility',
        'as' => 'property.utility.payment',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\utilityController@pay_utility',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.utility.compose.mail' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/property/{propertyID}/utility/{invoiceID}/compose/mail',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\utilityController@compose_mail',
        'as' => 'property.utility.compose.mail',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\utilityController@compose_mail',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.utility.send.mail' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/property/{propertyID}/utility/compose/send',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\utilityController@send_mail',
        'as' => 'property.utility.send.mail',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\utilityController@send_mail',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.invoice.settings' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/settings/{id}/invoice',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\settings\\invoiceSettingsController@edit',
        'as' => 'property.invoice.settings',
        'controller' => 'App\\Http\\Controllers\\app\\property\\settings\\invoiceSettingsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.invoice.settings.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/settings/{id}/invoice/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\settings\\invoiceSettingsController@update',
        'as' => 'property.invoice.settings.update',
        'controller' => 'App\\Http\\Controllers\\app\\property\\settings\\invoiceSettingsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.creditnote.settings' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/settings/{id}/creditnote',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\settings\\creditnoteSettingsController@edit',
        'as' => 'property.creditnote.settings',
        'controller' => 'App\\Http\\Controllers\\app\\property\\settings\\creditnoteSettingsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.creditnote.settings.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/settings/{id}/invoice/creditnote',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\settings\\creditnoteSettingsController@update',
        'as' => 'property.creditnote.settings.update',
        'controller' => 'App\\Http\\Controllers\\app\\property\\settings\\creditnoteSettingsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.billing.process' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/rental/billing/process',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\rentController@bulk_process',
        'as' => 'property.billing.process',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\rentController@bulk_process',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.billing.history' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/rental/{id}/billing/{datefrom}/{dateto}/{type}/history',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\rentController@history',
        'as' => 'property.billing.history',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\rentController@history',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.billing.history.search' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/rental/{id}/billing/history',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\rentController@search_history',
        'as' => 'property.billing.history.search',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\rentController@search_history',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.billing.history.search.results' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/rental/billing/search/results',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\rentController@search_results',
        'as' => 'property.billing.history.search.results',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\rentController@search_results',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.billing.missing.invoice' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/property/billing/missing/invoice',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\rentController@missing_billings',
        'as' => 'property.billing.missing.invoice',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\rentController@missing_billings',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.documents' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/property/{id}/documents',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\documentsController@index',
        'as' => 'property.documents',
        'controller' => 'App\\Http\\Controllers\\app\\property\\documentsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.gallery' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/property/{id}/gallery',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\galleryController@index',
        'as' => 'property.gallery',
        'controller' => 'App\\Http\\Controllers\\app\\property\\galleryController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.payment.integration.settings' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/payment/{id}/integration',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\settings\\paymentIntegrationController@index',
        'as' => 'property.payment.integration.settings',
        'controller' => 'App\\Http\\Controllers\\app\\property\\settings\\paymentIntegrationController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.payment.integration.settings.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/payment/{id}/integration/{integrationID}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\settings\\paymentIntegrationController@delete',
        'as' => 'property.payment.integration.settings.delete',
        'controller' => 'App\\Http\\Controllers\\app\\property\\settings\\paymentIntegrationController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.payment.integration.settings.activation' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/payment/{id}/integration',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\settings\\paymentIntegrationController@activation',
        'as' => 'property.payment.integration.settings.activation',
        'controller' => 'App\\Http\\Controllers\\app\\property\\settings\\paymentIntegrationController@activation',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.mpesaapi.integration' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/{propertyID}/integration/{getwayID}/mpesaapi',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\integration\\payments\\mpesaController@api',
        'as' => 'property.mpesaapi.integration',
        'controller' => 'App\\Http\\Controllers\\app\\property\\integration\\payments\\mpesaController@api',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.mpesaapi.integration.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/{propertyID}/integration/{id}/mpesaapi/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\integration\\payments\\mpesaController@api_update',
        'as' => 'property.mpesaapi.integration.update',
        'controller' => 'App\\Http\\Controllers\\app\\property\\integration\\payments\\mpesaController@api_update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.mpesatill.integration' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/{propertyID}/integration/{getwayID}/mpesatill/ ',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\integration\\payments\\mpesaController@till',
        'as' => 'property.mpesatill.integration',
        'controller' => 'App\\Http\\Controllers\\app\\property\\integration\\payments\\mpesaController@till',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.mpesatill.integration.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/{propertyID}/integration/{id}/mpesatill/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\integration\\payments\\mpesaController@till_update',
        'as' => 'property.mpesatill.integration.update',
        'controller' => 'App\\Http\\Controllers\\app\\property\\integration\\payments\\mpesaController@till_update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.mpesapaybill.integration' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/{propertyID}/integration/{getwayID}/mpesapaybill',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\integration\\payments\\mpesaController@paybill',
        'as' => 'property.mpesapaybill.integration',
        'controller' => 'App\\Http\\Controllers\\app\\property\\integration\\payments\\mpesaController@paybill',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.mpesapaybill.integration.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/{propertyID}/integration/{id}/mpesapaybill/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\integration\\payments\\mpesaController@paybill_update',
        'as' => 'property.mpesapaybill.integration.update',
        'controller' => 'App\\Http\\Controllers\\app\\property\\integration\\payments\\mpesaController@paybill_update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.bank1.integration' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/{propertyID}/integration/{getwayID}/bank1',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\integration\\payments\\bankController@bank',
        'as' => 'property.bank1.integration',
        'controller' => 'App\\Http\\Controllers\\app\\property\\integration\\payments\\bankController@bank',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.bank1.integration.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/{propertyID}/integration/{id}/bank1/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\integration\\payments\\bankController@bank1_update',
        'as' => 'property.bank1.integration.update',
        'controller' => 'App\\Http\\Controllers\\app\\property\\integration\\payments\\bankController@bank1_update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.bank2.integration' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/{propertyID}/integration/{getwayID}/bank2',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\integration\\payments\\bankController@bank',
        'as' => 'property.bank2.integration',
        'controller' => 'App\\Http\\Controllers\\app\\property\\integration\\payments\\bankController@bank',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.bank2.integration.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/{propertyID}/integration/{id}/bank2/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\integration\\payments\\bankController@bank2_update',
        'as' => 'property.bank2.integration.update',
        'controller' => 'App\\Http\\Controllers\\app\\property\\integration\\payments\\bankController@bank2_update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.bank3.integration' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/{propertyID}/integration/{getwayID}/bank3',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\integration\\payments\\bankController@bank',
        'as' => 'property.bank3.integration',
        'controller' => 'App\\Http\\Controllers\\app\\property\\integration\\payments\\bankController@bank',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.bank3.integration.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/{propertyID}/integration/{id}/bank3/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\integration\\payments\\bankController@bank3_update',
        'as' => 'property.bank3.integration.update',
        'controller' => 'App\\Http\\Controllers\\app\\property\\integration\\payments\\bankController@bank3_update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.bank4.integration' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/{propertyID}/integration/{getwayID}/bank4',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\integration\\payments\\bankController@bank',
        'as' => 'property.bank4.integration',
        'controller' => 'App\\Http\\Controllers\\app\\property\\integration\\payments\\bankController@bank',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.bank4.integration.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/{propertyID}/integration/{id}/bank4/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\integration\\payments\\bankController@bank4_update',
        'as' => 'property.bank4.integration.update',
        'controller' => 'App\\Http\\Controllers\\app\\property\\integration\\payments\\bankController@bank4_update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.bank5.integration' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/{propertyID}/integration/{getwayID}/bank5',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\integration\\payments\\bankController@bank',
        'as' => 'property.bank5.integration',
        'controller' => 'App\\Http\\Controllers\\app\\property\\integration\\payments\\bankController@bank',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.bank5.integration.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/{propertyID}/integration/{id}/bank5/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\integration\\payments\\bankController@bank5_update',
        'as' => 'property.bank5.integration.update',
        'controller' => 'App\\Http\\Controllers\\app\\property\\integration\\payments\\bankController@bank5_update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.images' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/{propertyID}/images',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\imagesController@index',
        'as' => 'property.images',
        'controller' => 'App\\Http\\Controllers\\app\\property\\imagesController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.images.upload' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/{propertyID}/images/upload',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\imagesController@upload_image',
        'as' => 'property.images.upload',
        'controller' => 'App\\Http\\Controllers\\app\\property\\imagesController@upload_image',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.images.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/{propertyID}/images/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\imagesController@delete',
        'as' => 'property.images.delete',
        'controller' => 'App\\Http\\Controllers\\app\\property\\imagesController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.documents.upload' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/{propertyID}/documents/upload',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\documentsController@upload_document',
        'as' => 'property.documents.upload',
        'controller' => 'App\\Http\\Controllers\\app\\property\\documentsController@upload_document',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.documents.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/{propertyID}/documents/{documentID}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\documentsController@update',
        'as' => 'property.documents.update',
        'controller' => 'App\\Http\\Controllers\\app\\property\\documentsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.documents.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/{propertyID}/documents/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\documentsController@delete',
        'as' => 'property.documents.delete',
        'controller' => 'App\\Http\\Controllers\\app\\property\\documentsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.expense' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/{propertyID}/expenses',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\expenseController@index',
        'as' => 'property.expense',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\expenseController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.expense.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/{propertyID}/expenses/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\expenseController@create',
        'as' => 'property.expense.create',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\expenseController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.expense.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/{propertyID}/expenses/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\expenseController@store',
        'as' => 'property.expense.store',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\expenseController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.expense.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/{propertyID}/expenses/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\expenseController@edit',
        'as' => 'property.expense.edit',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\expenseController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.expense.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/{propertyID}/expenses/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\expenseController@update',
        'as' => 'property.expense.update',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\expenseController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.expense.delete.file' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/{propertyID}/expenses/{parentID}/file/{fileID}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\expenseController@delete_file',
        'as' => 'property.expense.delete.file',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\expenseController@delete_file',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.expense.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/{propertyID}/expenses/{parentID}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\expenseController@destroy',
        'as' => 'property.expense.delete',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\expenseController@destroy',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.creditnote.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/{propertyID}/creditnote',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\creditnoteController@index',
        'as' => 'property.creditnote.index',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\creditnoteController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.creditnote.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/{propertyID}/creditnote/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\creditnoteController@create',
        'as' => 'property.creditnote.create',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\creditnoteController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.creditnote.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/{propertyID}/creditnote/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\creditnoteController@store',
        'as' => 'property.creditnote.store',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\creditnoteController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.creditnote.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/{propertyID}/creditnote/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\creditnoteController@edit',
        'as' => 'property.creditnote.edit',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\creditnoteController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.creditnote.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/{propertyID}/creditnote/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\creditnoteController@update',
        'as' => 'property.creditnote.update',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\creditnoteController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.creditnote.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/{propertyID}/creditnote/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\creditnoteController@delete_creditnote',
        'as' => 'property.creditnote.delete',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\creditnoteController@delete_creditnote',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.creditnote.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/{propertyID}/creditnote/{id}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\creditnoteController@show',
        'as' => 'property.creditnote.show',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\creditnoteController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.creditnote.pdf' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/{propertyID}/creditnote/{id}/pdf',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\creditnoteController@pdf',
        'as' => 'property.creditnote.pdf',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\creditnoteController@pdf',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.creditnote.print' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/{propertyID}/creditnote/{id}/print',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\creditnoteController@print',
        'as' => 'property.creditnote.print',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\creditnoteController@print',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.creditnote.apply.credit' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/creditnote/apply/credit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\creditnoteController@apply_credit',
        'as' => 'property.creditnote.apply.credit',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\creditnoteController@apply_credit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.creditnote.mail' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/{propertyID}/creditnote/{id}/mail',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\creditnoteController@mail',
        'as' => 'property.creditnote.mail',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\creditnoteController@mail',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.creditnote.mail.send' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/creditnote/mail/send',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\creditnoteController@send',
        'as' => 'property.creditnote.mail.send',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\creditnoteController@send',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.reports' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/{propertyID}/reports',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\reports\\reportsController@dashboard',
        'as' => 'property.reports',
        'controller' => 'App\\Http\\Controllers\\app\\property\\reports\\reportsController@dashboard',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.reports.profitandloss' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/{propertyID}/reports/profitandloss',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\reports\\profitandlossController@report',
        'as' => 'property.reports.profitandloss',
        'controller' => 'App\\Http\\Controllers\\app\\property\\reports\\profitandlossController@report',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.reports.profitandloss.generate' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/{propertyID}/report/profilandloss/generate/{to}/{from}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\reports\\profitandlossController@generate',
        'as' => 'property.reports.profitandloss.generate',
        'controller' => 'App\\Http\\Controllers\\app\\property\\reports\\profitandlossController@generate',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.reports.expensesummary' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/{propertyID}/reports/expensesummary',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\reports\\expensesummaryController@report',
        'as' => 'property.reports.expensesummary',
        'controller' => 'App\\Http\\Controllers\\app\\property\\reports\\expensesummaryController@report',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.reports.expensesummary.generate' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/{propertyID}/report/expensesummary/generate/{to}/{from}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\reports\\expensesummaryController@generate',
        'as' => 'property.reports.expensesummary.generate',
        'controller' => 'App\\Http\\Controllers\\app\\property\\reports\\expensesummaryController@generate',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.reports.incomesummary' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/{propertyID}/reports/incomesummary',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\reports\\incomesummaryController@report',
        'as' => 'property.reports.incomesummary',
        'controller' => 'App\\Http\\Controllers\\app\\property\\reports\\incomesummaryController@report',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.reports.incomesummary.generate' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/{propertyID}/report/incomesummary/generate/{to}/{from}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\reports\\incomesummaryController@generate',
        'as' => 'property.reports.incomesummary.generate',
        'controller' => 'App\\Http\\Controllers\\app\\property\\reports\\incomesummaryController@generate',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.lisitng' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/marketing/listings',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\marketing\\listingController@index',
        'as' => 'property.lisitng',
        'controller' => 'App\\Http\\Controllers\\app\\property\\marketing\\listingController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'list.property' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/property/{id}/list',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\marketing\\listingController@add_to_list',
        'as' => 'list.property',
        'controller' => 'App\\Http\\Controllers\\app\\property\\marketing\\listingController@add_to_list',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'list.property.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/marketing/property/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\marketing\\listingController@edit',
        'as' => 'list.property.edit',
        'controller' => 'App\\Http\\Controllers\\app\\property\\marketing\\listingController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'list.property.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/marketing/property/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\marketing\\listingController@update',
        'as' => 'list.property.update',
        'controller' => 'App\\Http\\Controllers\\app\\property\\marketing\\listingController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'list.property.details' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/marketing/property/{id}/details',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\marketing\\listingController@show',
        'as' => 'list.property.details',
        'controller' => 'App\\Http\\Controllers\\app\\property\\marketing\\listingController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'list.property.cancel' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/marketing/property/{propertyID}/{listID}/cancel',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\marketing\\listingController@cancel_listing',
        'as' => 'list.property.cancel',
        'controller' => 'App\\Http\\Controllers\\app\\property\\marketing\\listingController@cancel_listing',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'list.property.delete.image' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/marketing/property/{id}/image/{imageID}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\marketing\\listingController@delete_image',
        'as' => 'list.property.delete.image',
        'controller' => 'App\\Http\\Controllers\\app\\property\\marketing\\listingController@delete_image',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'list.property.image.cover' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/marketing/property/{id}/image/{imageID}/cover',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\marketing\\listingController@image_cover',
        'as' => 'list.property.image.cover',
        'controller' => 'App\\Http\\Controllers\\app\\property\\marketing\\listingController@image_cover',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'list.property.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/marketing/property/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\marketing\\listingController@delete',
        'as' => 'list.property.delete',
        'controller' => 'App\\Http\\Controllers\\app\\property\\marketing\\listingController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.inquiry' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/inquiry',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\marketing\\inquiryController@index',
        'as' => 'property.inquiry',
        'controller' => 'App\\Http\\Controllers\\app\\property\\marketing\\inquiryController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.tenants' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/{propertyID}/tenants',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\property\\tenants\\tenantsController@index',
        'as' => 'property.tenants',
        'controller' => 'App\\Http\\Controllers\\app\\property\\property\\tenants\\tenantsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.tenants.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/tenants/{propertyID}/{tenantID}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\property\\tenants\\tenantsController@show',
        'as' => 'property.tenants.show',
        'controller' => 'App\\Http\\Controllers\\app\\property\\property\\tenants\\tenantsController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'tenant.contactperson.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/property/{id}/tenant/contactperson',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\property\\tenants\\tenantsController@delete_contact_person',
        'as' => 'tenant.contactperson.delete',
        'controller' => 'App\\Http\\Controllers\\app\\property\\property\\tenants\\tenantsController@delete_contact_person',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'tenantsperson.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/delete-vendor-person/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\property\\tenants\\tenantsController@delete_vendor_person',
        'as' => 'tenantsperson.delete',
        'controller' => 'App\\Http\\Controllers\\app\\property\\property\\tenants\\tenantsController@delete_vendor_person',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'tenants.trash.update' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/tenants/{id}/trash',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\property\\tenants\\tenantsController@trash',
        'as' => 'tenants.trash.update',
        'controller' => 'App\\Http\\Controllers\\app\\property\\property\\tenants\\tenantsController@trash',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'tenants.notes' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/tenants/{propertyID}/{tenantID}/notes',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\property\\tenants\\notesController@index',
        'as' => 'tenants.notes',
        'controller' => 'App\\Http\\Controllers\\app\\property\\property\\tenants\\notesController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'tenants.notes.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/tenants/notes/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\property\\tenants\\notesController@store',
        'as' => 'tenants.notes.store',
        'controller' => 'App\\Http\\Controllers\\app\\property\\property\\tenants\\notesController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'tenants.notes.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/tenants/notes/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\property\\tenants\\notesController@update',
        'as' => 'tenants.notes.update',
        'controller' => 'App\\Http\\Controllers\\app\\property\\property\\tenants\\notesController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'tenants.notes.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/tenants/{id}/notes/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\property\\tenants\\notesController@delete',
        'as' => 'tenants.notes.delete',
        'controller' => 'App\\Http\\Controllers\\app\\property\\property\\tenants\\notesController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'tenants.invoice.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/tenants/{propertyID}/{tenantID}/invoices',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\property\\tenants\\invoicesController@index',
        'as' => 'tenants.invoice.index',
        'controller' => 'App\\Http\\Controllers\\app\\property\\property\\tenants\\invoicesController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'tenants.statement' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/tenants/{id}/statement',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\property\\tenants\\tenantsController@show',
        'as' => 'tenants.statement',
        'controller' => 'App\\Http\\Controllers\\app\\property\\property\\tenants\\tenantsController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'tenants.units.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/tenants/{propertyID}/{tenantID}/units',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\property\\tenants\\unitsController@index',
        'as' => 'tenants.units.index',
        'controller' => 'App\\Http\\Controllers\\app\\property\\property\\tenants\\unitsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.tenant.lease' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/tenant/{propertyID}/{tenantID}/lease',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\property\\tenants\\leasesController@index',
        'as' => 'property.tenant.lease',
        'controller' => 'App\\Http\\Controllers\\app\\property\\property\\tenants\\leasesController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.tenant.lease.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/tenant/{propertyID}/{tenantID}/{leaseID}/lease/details',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\property\\tenants\\leasesController@show',
        'as' => 'property.tenant.lease.show',
        'controller' => 'App\\Http\\Controllers\\app\\property\\property\\tenants\\leasesController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.tenant.lease.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/tenant/{propertyID}/{tenantID}/edit/{leaseID}/lease',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\property\\tenants\\leasesController@edit',
        'as' => 'property.tenant.lease.edit',
        'controller' => 'App\\Http\\Controllers\\app\\property\\property\\tenants\\leasesController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.tenant.lease.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/tenant/update/{leaseID}/lease',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\property\\tenants\\leasesController@update',
        'as' => 'property.tenant.lease.update',
        'controller' => 'App\\Http\\Controllers\\app\\property\\property\\tenants\\leasesController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.tenant.lease.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/tenant/lease/{leaseID}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\property\\tenants\\leasesController@delete_lease',
        'as' => 'property.tenant.lease.delete',
        'controller' => 'App\\Http\\Controllers\\app\\property\\property\\tenants\\leasesController@delete_lease',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.tenant.lease.add.utility' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/tenant/lease/utility/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\property\\tenants\\leasesController@add_utility',
        'as' => 'property.tenant.lease.add.utility',
        'controller' => 'App\\Http\\Controllers\\app\\property\\property\\tenants\\leasesController@add_utility',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.tenant.lease.update.utility' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/tenant/lease/utility/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\property\\tenants\\leasesController@update_utility',
        'as' => 'property.tenant.lease.update.utility',
        'controller' => 'App\\Http\\Controllers\\app\\property\\property\\tenants\\leasesController@update_utility',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.leases.delete.utility' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/tenant/lease/{leaseID}/utility/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\property\\tenants\\leasesController@delete_utility',
        'as' => 'property.leases.delete.utility',
        'controller' => 'App\\Http\\Controllers\\app\\property\\property\\tenants\\leasesController@delete_utility',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.lease.terminate' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/tenant/lease/terminate',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\property\\tenants\\leasesController@lease_termination',
        'as' => 'property.lease.terminate',
        'controller' => 'App\\Http\\Controllers\\app\\property\\property\\tenants\\leasesController@lease_termination',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'utility.billing.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/utility/{id}/billing',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\utilityController@index',
        'as' => 'utility.billing.index',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\utilityController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'utility.billing.hold' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/utility/billing/hold',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\utilityController@hold_utility',
        'as' => 'utility.billing.hold',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\utilityController@hold_utility',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'utility.readings' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/utility/{id}/readings',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\utilityController@utility_readings',
        'as' => 'utility.readings',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\utilityController@utility_readings',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'utility.bill.readings' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/utility/bill/readings',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\utilityController@bill_utility',
        'as' => 'utility.bill.readings',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\utilityController@bill_utility',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'utility.bill.search' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/utility/bill/search',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\utilityController@utility_search',
        'as' => 'utility.bill.search',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\utilityController@utility_search',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'utility.billing.history' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/utility/{propertyID}/billing/{periodID}/history',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\utilityController@history',
        'as' => 'utility.billing.history',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\utilityController@history',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'utility.billing.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/utility/billing/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\accounting\\utilityController@utility_update',
        'as' => 'utility.billing.update',
        'controller' => 'App\\Http\\Controllers\\app\\property\\accounting\\utilityController@utility_update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.agents' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/agents',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\agentsController@index',
        'as' => 'property.agents',
        'controller' => 'App\\Http\\Controllers\\app\\property\\agentsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.agents.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/agents/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\agentsController@create',
        'as' => 'property.agents.create',
        'controller' => 'App\\Http\\Controllers\\app\\property\\agentsController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.agents.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/agents/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\agentsController@store',
        'as' => 'property.agents.store',
        'controller' => 'App\\Http\\Controllers\\app\\property\\agentsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.agents.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/agents/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\agentsController@edit',
        'as' => 'property.agents.edit',
        'controller' => 'App\\Http\\Controllers\\app\\property\\agentsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.agents.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/agents/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\agentsController@update',
        'as' => 'property.agents.update',
        'controller' => 'App\\Http\\Controllers\\app\\property\\agentsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.agents.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/agents/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\agentsController@delete',
        'as' => 'property.agents.delete',
        'controller' => 'App\\Http\\Controllers\\app\\property\\agentsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.supplier' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/supplier',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\supplierController@index',
        'as' => 'property.supplier',
        'controller' => 'App\\Http\\Controllers\\app\\property\\supplierController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.supplier.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/supplier/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\supplierController@create',
        'as' => 'property.supplier.create',
        'controller' => 'App\\Http\\Controllers\\app\\property\\supplierController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.supplier.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/supplier/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\supplierController@store',
        'as' => 'property.supplier.store',
        'controller' => 'App\\Http\\Controllers\\app\\property\\supplierController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.supplier.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/supplier/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\supplierController@edit',
        'as' => 'property.supplier.edit',
        'controller' => 'App\\Http\\Controllers\\app\\property\\supplierController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.supplier.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/supplier/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\supplierController@update',
        'as' => 'property.supplier.update',
        'controller' => 'App\\Http\\Controllers\\app\\property\\supplierController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.supplier.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/supplier/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\supplierController@delete',
        'as' => 'property.supplier.delete',
        'controller' => 'App\\Http\\Controllers\\app\\property\\supplierController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'landlord.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/landlord',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\landlords\\landlordController@index',
        'as' => 'landlord.index',
        'controller' => 'App\\Http\\Controllers\\app\\property\\landlords\\landlordController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'landlord.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/landlord/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\landlords\\landlordController@create',
        'as' => 'landlord.create',
        'controller' => 'App\\Http\\Controllers\\app\\property\\landlords\\landlordController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'landlord.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/post-landlords',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\landlords\\landlordController@store',
        'as' => 'landlord.store',
        'controller' => 'App\\Http\\Controllers\\app\\property\\landlords\\landlordController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'landlord.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/landlord/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\landlords\\landlordController@edit',
        'as' => 'landlord.edit',
        'controller' => 'App\\Http\\Controllers\\app\\property\\landlords\\landlordController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'landlord.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/landlord/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\landlords\\landlordController@update',
        'as' => 'landlord.update',
        'controller' => 'App\\Http\\Controllers\\app\\property\\landlords\\landlordController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'landlord.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/landlord/{id}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\landlords\\landlordController@show',
        'as' => 'landlord.show',
        'controller' => 'App\\Http\\Controllers\\app\\property\\landlords\\landlordController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'landlord.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/landlord/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\landlords\\landlordController@delete',
        'as' => 'landlord.delete',
        'controller' => 'App\\Http\\Controllers\\app\\property\\landlords\\landlordController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'landlordperson.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/landlord/{id}/delete-contact-person',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\landlords\\landlordController@delete_contact_person',
        'as' => 'landlordperson.delete',
        'controller' => 'App\\Http\\Controllers\\app\\property\\landlords\\landlordController@delete_contact_person',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'landlord.trash.update' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/landlord/{id}/trash',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\landlords\\landlordController@trash',
        'as' => 'landlord.trash.update',
        'controller' => 'App\\Http\\Controllers\\app\\property\\landlords\\landlordController@trash',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'landlord.import.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/landlord/import',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\landlords\\importController@import',
        'as' => 'landlord.import.index',
        'controller' => 'App\\Http\\Controllers\\app\\property\\landlords\\importController@import',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'landlord.import' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/landlord/post/import',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\landlords\\importController@import_contact',
        'as' => 'landlord.import',
        'controller' => 'App\\Http\\Controllers\\app\\property\\landlords\\importController@import_contact',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'landlord.download.sample.import' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/landlord/download/import/sample',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\landlords\\importController@download_import_sample',
        'as' => 'landlord.download.sample.import',
        'controller' => 'App\\Http\\Controllers\\app\\property\\landlords\\importController@download_import_sample',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'landlord.export' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/landlord/export',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\landlords\\importController@export',
        'as' => 'landlord.export',
        'controller' => 'App\\Http\\Controllers\\app\\property\\landlords\\importController@export',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'tenants.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/tenants',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\tenants\\tenantsController@index',
        'as' => 'tenants.index',
        'controller' => 'App\\Http\\Controllers\\app\\property\\tenants\\tenantsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'tenants.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/tenants/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\tenants\\tenantsController@create',
        'as' => 'tenants.create',
        'controller' => 'App\\Http\\Controllers\\app\\property\\tenants\\tenantsController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'tenants.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/tenants/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\tenants\\tenantsController@store',
        'as' => 'tenants.store',
        'controller' => 'App\\Http\\Controllers\\app\\property\\tenants\\tenantsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'tenants.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/tenants/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\tenants\\tenantsController@edit',
        'as' => 'tenants.edit',
        'controller' => 'App\\Http\\Controllers\\app\\property\\tenants\\tenantsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'tenants.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/tenants/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\tenants\\tenantsController@update',
        'as' => 'tenants.update',
        'controller' => 'App\\Http\\Controllers\\app\\property\\tenants\\tenantsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'tenants.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/tenants/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\tenants\\tenantsController@delete',
        'as' => 'tenants.delete',
        'controller' => 'App\\Http\\Controllers\\app\\property\\tenants\\tenantsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'tenants.import.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/tenants/import',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\tenants\\importController@index',
        'as' => 'tenants.import.index',
        'controller' => 'App\\Http\\Controllers\\app\\property\\tenants\\importController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'tenants.import' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/tenants/post/import',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\tenants\\importController@import',
        'as' => 'tenants.import',
        'controller' => 'App\\Http\\Controllers\\app\\property\\tenants\\importController@import',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'tenants.download.sample.import' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/tenants/download/import/sample',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\property\\tenants\\importController@download_import_sample',
        'as' => 'tenants.download.sample.import',
        'controller' => 'App\\Http\\Controllers\\app\\property\\property\\tenants\\importController@download_import_sample',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'tenants.export' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/tenants/export',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\tenants\\importController@export',
        'as' => 'tenants.export',
        'controller' => 'App\\Http\\Controllers\\app\\property\\tenants\\importController@export',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.maintenance' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/maintenance',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\maintenance\\maintenanceController@index',
        'as' => 'property.maintenance',
        'controller' => 'App\\Http\\Controllers\\app\\property\\maintenance\\maintenanceController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.maintenance.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/maintenance/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\maintenance\\maintenanceController@create',
        'as' => 'property.maintenance.create',
        'controller' => 'App\\Http\\Controllers\\app\\property\\maintenance\\maintenanceController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.maintenance.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/maintenance/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\maintenance\\maintenanceController@store',
        'as' => 'property.maintenance.store',
        'controller' => 'App\\Http\\Controllers\\app\\property\\maintenance\\maintenanceController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.maintenance.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/maintenance/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\maintenance\\maintenanceController@edit',
        'as' => 'property.maintenance.edit',
        'controller' => 'App\\Http\\Controllers\\app\\property\\maintenance\\maintenanceController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'pm.maintenance.get.units' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/maintenance/property/units/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\maintenance\\maintenanceController@get_units',
        'as' => 'pm.maintenance.get.units',
        'controller' => 'App\\Http\\Controllers\\app\\property\\maintenance\\maintenanceController@get_units',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'pm.maintenance.get.units.tenant' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/maintenance/property/units/tenant/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\maintenance\\maintenanceController@get_tenant',
        'as' => 'pm.maintenance.get.units.tenant',
        'controller' => 'App\\Http\\Controllers\\app\\property\\maintenance\\maintenanceController@get_tenant',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'pm.maintenance.get.category' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/maintenance/get/category/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\maintenance\\maintenanceController@get_maintenance_category',
        'as' => 'pm.maintenance.get.category',
        'controller' => 'App\\Http\\Controllers\\app\\property\\maintenance\\maintenanceController@get_maintenance_category',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'maintenance.category.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/maintenance/category',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\maintenance\\maintenanceCategoryController@index',
        'as' => 'maintenance.category.index',
        'controller' => 'App\\Http\\Controllers\\app\\property\\maintenance\\maintenanceCategoryController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'maintenance.category.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/maintenance/category/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\maintenance\\maintenanceCategoryController@store',
        'as' => 'maintenance.category.store',
        'controller' => 'App\\Http\\Controllers\\app\\property\\maintenance\\maintenanceCategoryController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'maintenance.category.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/maintenance/category/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\maintenance\\maintenanceCategoryController@edit',
        'as' => 'maintenance.category.edit',
        'controller' => 'App\\Http\\Controllers\\app\\property\\maintenance\\maintenanceCategoryController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'maintenance.category.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/maintenance/category/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\maintenance\\maintenanceCategoryController@update',
        'as' => 'maintenance.category.update',
        'controller' => 'App\\Http\\Controllers\\app\\property\\maintenance\\maintenanceCategoryController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'maintenance.category.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/maintenance/category/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\maintenance\\maintenanceCategoryController@delete',
        'as' => 'maintenance.category.delete',
        'controller' => 'App\\Http\\Controllers\\app\\property\\maintenance\\maintenanceCategoryController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.taxes' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/taxes',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\settings\\taxesController@index',
        'as' => 'property.taxes',
        'controller' => 'App\\Http\\Controllers\\app\\property\\settings\\taxesController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.taxes.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/taxes/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\settings\\taxesController@store',
        'as' => 'property.taxes.store',
        'controller' => 'App\\Http\\Controllers\\app\\property\\settings\\taxesController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.taxes.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/taxes/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\settings\\taxesController@edit',
        'as' => 'property.taxes.edit',
        'controller' => 'App\\Http\\Controllers\\app\\property\\settings\\taxesController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.taxes.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/taxes/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\settings\\taxesController@update',
        'as' => 'property.taxes.update',
        'controller' => 'App\\Http\\Controllers\\app\\property\\settings\\taxesController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.taxes.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/taxes/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\settings\\taxesController@delete',
        'as' => 'property.taxes.delete',
        'controller' => 'App\\Http\\Controllers\\app\\property\\settings\\taxesController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.taxes.express' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/taxes/express',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\settings\\taxesController@express_list',
        'as' => 'property.taxes.express',
        'controller' => 'App\\Http\\Controllers\\app\\property\\settings\\taxesController@express_list',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.taxes.express.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/taxes/express/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\settings\\taxesController@store_express',
        'as' => 'property.taxes.express.store',
        'controller' => 'App\\Http\\Controllers\\app\\property\\settings\\taxesController@store_express',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.income.category' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/income/category',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\settings\\incomeController@index',
        'as' => 'property.income.category',
        'controller' => 'App\\Http\\Controllers\\app\\property\\settings\\incomeController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.income.category.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/income/category/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\settings\\incomeController@create',
        'as' => 'property.income.category.create',
        'controller' => 'App\\Http\\Controllers\\app\\property\\settings\\incomeController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.income.category.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/income/category/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\settings\\incomeController@store',
        'as' => 'property.income.category.store',
        'controller' => 'App\\Http\\Controllers\\app\\property\\settings\\incomeController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.income.category.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/income/category/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\settings\\incomeController@edit',
        'as' => 'property.income.category.edit',
        'controller' => 'App\\Http\\Controllers\\app\\property\\settings\\incomeController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.income.category.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/income/category/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\settings\\incomeController@update',
        'as' => 'property.income.category.update',
        'controller' => 'App\\Http\\Controllers\\app\\property\\settings\\incomeController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.income.category.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/income/category/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\settings\\incomeController@delete',
        'as' => 'property.income.category.delete',
        'controller' => 'App\\Http\\Controllers\\app\\property\\settings\\incomeController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'generated::hzpvV1Vs1Vl67HUC' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/express/income/category/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\settings\\incomeController@express',
        'controller' => 'App\\Http\\Controllers\\app\\property\\settings\\incomeController@express',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
        'as' => 'generated::hzpvV1Vs1Vl67HUC',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.income.express.category' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/express/income/category/get',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\settings\\incomeController@get_express',
        'as' => 'property.income.express.category',
        'controller' => 'App\\Http\\Controllers\\app\\property\\settings\\incomeController@get_express',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.payment.method' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/payment/methods',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\settings\\paymentMethodsController@index',
        'as' => 'property.payment.method',
        'controller' => 'App\\Http\\Controllers\\app\\property\\settings\\paymentMethodsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.payment.method.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/payment/methods/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\settings\\paymentMethodsController@store',
        'as' => 'property.payment.method.store',
        'controller' => 'App\\Http\\Controllers\\app\\property\\settings\\paymentMethodsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.payment.method.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/payment/methods/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\settings\\paymentMethodsController@update',
        'as' => 'property.payment.method.update',
        'controller' => 'App\\Http\\Controllers\\app\\property\\settings\\paymentMethodsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.payment.method.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/payment/methods/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\settings\\paymentMethodsController@delete',
        'as' => 'property.payment.method.delete',
        'controller' => 'App\\Http\\Controllers\\app\\property\\settings\\paymentMethodsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.payment.mode.express' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/express/payment/list',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\settings\\paymentMethodsController@express_list',
        'as' => 'property.payment.mode.express',
        'controller' => 'App\\Http\\Controllers\\app\\property\\settings\\paymentMethodsController@express_list',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.payment.mode.express.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/express/payment/modes/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\settings\\paymentMethodsController@express_store',
        'as' => 'property.payment.mode.express.store',
        'controller' => 'App\\Http\\Controllers\\app\\property\\settings\\paymentMethodsController@express_store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.expense.category.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/expense/category',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\settings\\expenseCategoryController@index',
        'as' => 'property.expense.category.index',
        'controller' => 'App\\Http\\Controllers\\app\\property\\settings\\expenseCategoryController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.expense.category.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/expense/category/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\settings\\expenseCategoryController@store',
        'as' => 'property.expense.category.store',
        'controller' => 'App\\Http\\Controllers\\app\\property\\settings\\expenseCategoryController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.expense.category.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/expense-category/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\settings\\expenseCategoryController@edit',
        'as' => 'property.expense.category.edit',
        'controller' => 'App\\Http\\Controllers\\app\\property\\settings\\expenseCategoryController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.expense.category.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/expense-category/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\settings\\expenseCategoryController@update',
        'as' => 'property.expense.category.update',
        'controller' => 'App\\Http\\Controllers\\app\\property\\settings\\expenseCategoryController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.expense.category.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/expense-category/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\settings\\expenseCategoryController@destroy',
        'as' => 'property.expense.category.destroy',
        'controller' => 'App\\Http\\Controllers\\app\\property\\settings\\expenseCategoryController@destroy',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.express.expense.category.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/express/expense/category/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\settings\\expenseCategoryController@express',
        'as' => 'property.express.expense.category.store',
        'controller' => 'App\\Http\\Controllers\\app\\property\\settings\\expenseCategoryController@express',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.express.expense.category.list' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/express/expense/category/list',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\settings\\expenseCategoryController@list',
        'as' => 'property.express.expense.category.list',
        'controller' => 'App\\Http\\Controllers\\app\\property\\settings\\expenseCategoryController@list',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.utilities' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/utilities',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\settings\\utilitiesController@index',
        'as' => 'property.utilities',
        'controller' => 'App\\Http\\Controllers\\app\\property\\settings\\utilitiesController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.utilities.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/utilities/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\settings\\utilitiesController@create',
        'as' => 'property.utilities.create',
        'controller' => 'App\\Http\\Controllers\\app\\property\\settings\\utilitiesController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.utilities.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/utilities/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\settings\\utilitiesController@store',
        'as' => 'property.utilities.store',
        'controller' => 'App\\Http\\Controllers\\app\\property\\settings\\utilitiesController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.utilities.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/utilities/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\settings\\utilitiesController@edit',
        'as' => 'property.utilities.edit',
        'controller' => 'App\\Http\\Controllers\\app\\property\\settings\\utilitiesController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.utilities.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'property-management/utilities/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\settings\\utilitiesController@update',
        'as' => 'property.utilities.update',
        'controller' => 'App\\Http\\Controllers\\app\\property\\settings\\utilitiesController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'property.utilities.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'property-management/utilities/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\property\\settings\\utilitiesController@delete',
        'as' => 'property.utilities.delete',
        'controller' => 'App\\Http\\Controllers\\app\\property\\settings\\utilitiesController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/property-management',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'settings.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\business\\businessController@index',
        'as' => 'settings.index',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\business\\businessController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'settings.business.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/businessprofile',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
          3 => 'permission:read-businessprofile',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\business\\businessController@index',
        'as' => 'settings.business.index',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\business\\businessController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'settings.business.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/businessprofile/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
          3 => 'permission:edit-businessprofile',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\business\\businessController@index',
        'as' => 'settings.business.edit',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\business\\businessController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'settings.business.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'settings/businessprofile/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
          3 => 'permission:update-businessprofile',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\business\\businessController@update',
        'as' => 'settings.business.update',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\business\\businessController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'settings.business.delete.logo' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/businessprofile/{id}/delete/logo',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
          3 => 'permission:delete-businessprofile',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\business\\businessController@delete_logo',
        'as' => 'settings.business.delete.logo',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\business\\businessController@delete_logo',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'settings.users.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/users',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
          3 => 'permission:read-users',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\users\\UserController@index',
        'as' => 'settings.users.index',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\users\\UserController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'settings.users.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/users/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
          3 => 'permission:create-users',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\users\\UserController@create',
        'as' => 'settings.users.create',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\users\\UserController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'settings.users.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'settings/users/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
          3 => 'permission:create-users',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\users\\UserController@store',
        'as' => 'settings.users.store',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\users\\UserController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'settings.users.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/users/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
          3 => 'permission:update-users',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\users\\UserController@edit',
        'as' => 'settings.users.edit',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\users\\UserController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'settings.users.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'settings/users/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
          3 => 'permission:update-users',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\users\\UserController@update',
        'as' => 'settings.users.update',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\users\\UserController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'language.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/language',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\language\\languageController@index',
        'as' => 'language.index',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\language\\languageController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'language.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/language/{id}/{section}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\Language\\LanguageController@show',
        'as' => 'language.show',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\Language\\LanguageController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'language.translate.section' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'settings/language/translate/section',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\Language\\LanguageController@post_show',
        'as' => 'language.translate.section',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\Language\\LanguageController@post_show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'language.translate' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'settings/language/translate',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\Language\\LanguageController@translate',
        'as' => 'language.translate',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\Language\\LanguageController@translate',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'language.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/language/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\Language\\LanguageController@edit',
        'as' => 'language.edit',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\Language\\LanguageController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'language.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'settings/language/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\Language\\LanguageController@update',
        'as' => 'language.update',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\Language\\LanguageController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'language.defaultLanguage' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'settings/settings/defaultLanguage',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\language\\languageController@defaultLanguage',
        'as' => 'language.defaultLanguage',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\language\\languageController@defaultLanguage',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'language.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'settings/language/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\Language\\LanguageController@store',
        'as' => 'language.store',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\Language\\LanguageController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'language.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/language/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\Language\\LanguageController@destroy',
        'as' => 'language.destroy',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\Language\\LanguageController@destroy',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'settings.roles.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/roles',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\users\\rolesController@index',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\users\\rolesController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
        'as' => 'settings.roles.index',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'settings.roles.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/roles/{id}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\users\\rolesController@show',
        'as' => 'settings.roles.show',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\users\\rolesController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'settings.roles.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/roles/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\users\\rolesController@create',
        'as' => 'settings.roles.create',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\users\\rolesController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'settings.roles.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'settings/roles/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\users\\rolesController@store',
        'as' => 'settings.roles.store',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\users\\rolesController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'settings.roles.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/roles/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\users\\rolesController@edit',
        'as' => 'settings.roles.edit',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\users\\rolesController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'settings.roles.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'settings/roles/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\users\\rolesController@update',
        'as' => 'settings.roles.update',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\users\\rolesController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'settings.roles.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/roles/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
          3 => 'permission:delete-roles',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\users\\rolesController@delete',
        'as' => 'settings.roles.delete',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\users\\rolesController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'settings.applications' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/account/applications',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\applications\\applicationController@index',
        'as' => 'settings.applications',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\applications\\applicationController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'settings.application.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/account/application/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\applications\\applicationController@delete',
        'as' => 'settings.application.delete',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\applications\\applicationController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'settings.applications.billing' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/account/application/{applicationID}/billing',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\applications\\applicationController@billing',
        'as' => 'settings.applications.billing',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\applications\\applicationController@billing',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'settings.billing' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/account/billing',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\billingController@index',
        'as' => 'settings.billing',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\billingController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'settings.integrations.payments' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/payment/integrations',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
          3 => 'permission:read-paymentintegrations',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\paymentsController@index',
        'as' => 'settings.integrations.payments',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\paymentsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'settings.integrations.payments.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'settings/payment/integrations/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
          3 => 'permission:create-paymentintegrations',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\paymentsController@store',
        'as' => 'settings.integrations.payments.store',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\paymentsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'settings.integrations.payments.status' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/payment/integrations{id}/status/{statusID}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
          3 => 'permission:create-paymentintegrations',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\paymentsController@status',
        'as' => 'settings.integrations.payments.status',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\paymentsController@status',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'settings.integrations.payments.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/payment/integrations/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
          3 => 'permission:create-paymentintegrations',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\paymentsController@delete',
        'as' => 'settings.integrations.payments.delete',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\paymentsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'settings.integrations.payments.pesapal.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/payment/integrations/{id}/pesapal',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
          3 => 'permission:update-paymentintegrations',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\pesapalController@edit',
        'as' => 'settings.integrations.payments.pesapal.edit',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\pesapalController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'settings.integrations.payments.pesapal.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'settings/payment/integrations/{id}/pesapal/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
          3 => 'permission:update-paymentintegrations',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\pesapalController@update',
        'as' => 'settings.integrations.payments.pesapal.update',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\pesapalController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'settings.integrations.payments.paypal.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/payment/integrations/{id}/paypal',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
          3 => 'permission:update-paymentintegrations',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\paypalController@edit',
        'as' => 'settings.integrations.payments.paypal.edit',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\paypalController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'settings.integrations.payments.paypal.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'settings/payment/integrations/{id}/paypal/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
          3 => 'permission:update-paymentintegrations',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\paypalController@update',
        'as' => 'settings.integrations.payments.paypal.update',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\paypalController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'settings.payments.integrations.kepler9' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/payment/integrations/{id}/kepler9',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
          3 => 'permission:update-paymentintegrations',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\kepler9Controller@edit',
        'as' => 'settings.payments.integrations.kepler9',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\kepler9Controller@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'settings.integrations.payments.kepler9.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'settings/payment/integrations/{id}/kepler9/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
          3 => 'permission:update-paymentintegrations',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\kepler9Controller@update',
        'as' => 'settings.integrations.payments.kepler9.update',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\kepler9Controller@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'settings.payments.integrations.ipay' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/payment/integrations/{id}/ipay',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
          3 => 'permission:update-paymentintegrations',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\ipayController@edit',
        'as' => 'settings.payments.integrations.ipay',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\ipayController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'settings.payments.integrations.ipay.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'settings/payment/integrations/{id}/ipay/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
          3 => 'permission:update-paymentintegrations',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\ipayController@update',
        'as' => 'settings.payments.integrations.ipay.update',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\ipayController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'settings.integrations.payments.mpesa.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/payment/integrations/{id}/mpesa',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
          3 => 'permission:update-paymentintegrations',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\mpesa\\darajaController@edit',
        'as' => 'settings.integrations.payments.mpesa.edit',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\mpesa\\darajaController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'settings.integrations.payments.mpesa.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'settings/payment/integrations/{id}/mpesa/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
          3 => 'permission:update-paymentintegrations',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\mpesa\\darajaController@update',
        'as' => 'settings.integrations.payments.mpesa.update',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\mpesa\\darajaController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'settings.integrations.daraja.register.urls' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/daraja/register/url/{businessID}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\mpesa\\darajaController@registerUrls',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\mpesa\\darajaController@registerUrls',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
        'as' => 'settings.integrations.daraja.register.urls',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'settings.payments.integrations.mpesa.phonenumber' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/payment/integrations/{id}/mpesa-phone-number',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\mpesa\\phonenumberController@phone_number',
        'as' => 'settings.payments.integrations.mpesa.phonenumber',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\mpesa\\phonenumberController@phone_number',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'settings.payments.integrations.mpesa.phonenumber.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'settings/payment/integrations/{id}/mpesa-phone-number/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\mpesa\\phonenumberController@update_phone_number',
        'as' => 'settings.payments.integrations.mpesa.phonenumber.update',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\mpesa\\phonenumberController@update_phone_number',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'settings.payments.integrations.mpesa.tillnumber' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/payment/integrations/{id}/mpesa-till-number',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\mpesa\\tillnumberController@till_number',
        'as' => 'settings.payments.integrations.mpesa.tillnumber',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\mpesa\\tillnumberController@till_number',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'settings.payments.integrations.mpesa.tillnumber.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'settings/payment/integrations/{id}/mpesa-till-number/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\mpesa\\tillnumberController@update_till_number',
        'as' => 'settings.payments.integrations.mpesa.tillnumber.update',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\mpesa\\tillnumberController@update_till_number',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'settings.payments.integrations.mpesa.paybillnumber' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/payment/integrations/{id}/mpesa-paybill-number',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\mpesa\\paybillnumberController@paybill_number',
        'as' => 'settings.payments.integrations.mpesa.paybillnumber',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\mpesa\\paybillnumberController@paybill_number',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'settings.payments.integrations.mpesa.paybillnumber.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'settings/payment/integrations/{id}/mpesa-paybill-number/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\mpesa\\paybillnumberController@update_paybill_number',
        'as' => 'settings.payments.integrations.mpesa.paybillnumber.update',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\mpesa\\paybillnumberController@update_paybill_number',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'settings.integrations.telephony' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/integrations/telephony',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
          3 => 'permission:read-telephonyintegrations',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\telephony\\telephonyController@index',
        'as' => 'settings.integrations.telephony',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\telephony\\telephonyController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'settings.integrations.telephony.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'settings/integrations/telephony/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
          3 => 'permission:create-telephonyintegrations',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\telephony\\telephonyController@store',
        'as' => 'settings.integrations.telephony.store',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\telephony\\telephonyController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'settings.integrations.telephony.twilio.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/integrations/telephony/{id}/twilio',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
          3 => 'permission:update-telephonyintegrations',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\telephony\\twilioController@edit',
        'as' => 'settings.integrations.telephony.twilio.edit',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\telephony\\twilioController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'settings.integrations.telephony.twilio.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'settings/integrations/telephony/{id}/twilio/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
          3 => 'permission:update-telephonyintegrations',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\telephony\\twilioController@update',
        'as' => 'settings.integrations.telephony.twilio.update',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\telephony\\twilioController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'settings.integrations.telephony.africasTalking.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/integrations/telephony/{id}/africasTalking',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
          3 => 'permission:update-telephonyintegrations',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\telephony\\africasTalkingController@edit',
        'as' => 'settings.integrations.telephony.africasTalking.edit',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\telephony\\africasTalkingController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'settings.integrations.telephony.africasTalking.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'settings/integrations/telephony/{id}/africasTalking/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
          3 => 'permission:update-telephonyintegrations',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\telephony\\africasTalkingController@update',
        'as' => 'settings.integrations.telephony.africasTalking.update',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\telephony\\africasTalkingController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'application.setup' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'applications/setup',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\wingu\\applicationController@application_setup',
        'as' => 'application.setup',
        'controller' => 'App\\Http\\Controllers\\app\\wingu\\applicationController@application_setup',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/applications',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'application.add.cart' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'applications/{moduleID}/add-to-cart',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\wingu\\applicationController@add_to_cart',
        'as' => 'application.add.cart',
        'controller' => 'App\\Http\\Controllers\\app\\wingu\\applicationController@add_to_cart',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/applications',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'application.remove.cart' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'applications/{cartID}/remove-item',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\wingu\\applicationController@remove_cart',
        'as' => 'application.remove.cart',
        'controller' => 'App\\Http\\Controllers\\app\\wingu\\applicationController@remove_cart',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/applications',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'application.install' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'applications/install',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\wingu\\applicationController@install',
        'as' => 'application.install',
        'controller' => 'App\\Http\\Controllers\\app\\wingu\\applicationController@install',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/applications',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'application' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'applications',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\wingu\\applicationController@add_application',
        'as' => 'application',
        'controller' => 'App\\Http\\Controllers\\app\\wingu\\applicationController@add_application',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/applications',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'wingu.subscription.paypal' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'subscriptions/paypal',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\wingu\\paypalController@payment',
        'as' => 'wingu.subscription.paypal',
        'controller' => 'App\\Http\\Controllers\\app\\wingu\\paypalController@payment',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => NULL,
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'wingu.subscription.paypal.callback' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'subscriptions/paypal/callback',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\wingu\\paypalController@callback',
        'as' => 'wingu.subscription.paypal.callback',
        'controller' => 'App\\Http\\Controllers\\app\\wingu\\paypalController@callback',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => NULL,
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'wingu.subscription.paypal.cancel' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'subscriptions/paypal/cancel',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\wingu\\paypalController@cancel',
        'as' => 'wingu.subscription.paypal.cancel',
        'controller' => 'App\\Http\\Controllers\\app\\wingu\\paypalController@cancel',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => NULL,
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'wingu.application.payment' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'application/ipay/callback',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\wingu\\ipayController@callback',
        'as' => 'wingu.application.payment',
        'controller' => 'App\\Http\\Controllers\\app\\wingu\\ipayController@callback',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => NULL,
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'generated::7oD4ashBAQmFYwwu' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'track/email/{code}/{businessID}/{mailID}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\mail\\mailController@track',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\mail\\mailController@track',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => NULL,
        'where' => 
        array (
        ),
        'as' => 'generated::7oD4ashBAQmFYwwu',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'generated::0HwDt6d9rCsrCVPp' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'track/invoice/{trackCode}/{businessID}/{invoiceID}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\trackController@invoice',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\trackController@invoice',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => NULL,
        'where' => 
        array (
        ),
        'as' => 'generated::0HwDt6d9rCsrCVPp',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'generated::9vzrQn4StBUIBrT9' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'track/salesorder/{trackCode}/{businessID}/{salesID}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\trackController@salesorder',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\trackController@salesorder',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => NULL,
        'where' => 
        array (
        ),
        'as' => 'generated::9vzrQn4StBUIBrT9',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'generated::HF59kESkMSXmKaZ0' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'track/quote/{trackCode}/{businessID}/{quoteID}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\trackController@quote',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\trackController@quote',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => NULL,
        'where' => 
        array (
        ),
        'as' => 'generated::HF59kESkMSXmKaZ0',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'generated::7f2i0CsCrChDUp9W' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'lab/mailchimp',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\lab\\mailchimpController@index',
        'controller' => 'App\\Http\\Controllers\\lab\\mailchimpController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => NULL,
        'where' => 
        array (
        ),
        'as' => 'generated::7f2i0CsCrChDUp9W',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'callback.ipay' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'callbacks/ipay',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\callbacks\\callbacksController@ipay',
        'as' => 'callback.ipay',
        'controller' => 'App\\Http\\Controllers\\app\\callbacks\\callbacksController@ipay',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => NULL,
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
    'crm.callback.landingpage' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'landingpage/callback',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\callbacks\\landingpage@collect_data',
        'as' => 'crm.callback.landingpage',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\callbacks\\landingpage@collect_data',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => NULL,
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
    ),
  ),
)
);
